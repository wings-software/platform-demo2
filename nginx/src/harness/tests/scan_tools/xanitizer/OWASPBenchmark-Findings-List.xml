<?xml version="1.0" encoding="UTF-8"?>
<XanitizerFindingsList xanitizerVersion="version 4.3.3, build no. 61 of 26.11.19" xanitizerVersionShort="4.3.3" timeStamp="2019-12-03 12:31:02" timeStampLong="1575372662260" allFindings="1935" findingsNotRemovedByFilter="1935" problemFindingsNotRemovedByFilter="1935">


  <finding id="1392" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00001</class>
    <file>BenchmarkTest00001.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00001" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00001" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00001.java"></endNode>
  </finding>


  <finding id="1410" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00002</class>
    <file>BenchmarkTest00002.java</file>
    <line>70</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00002" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00002" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00002.java"></endNode>
  </finding>


  <finding id="506" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00003</class>
    <file>BenchmarkTest00003.java</file>
    <line>68</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00003" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00003.java"></node>
  </finding>


  <finding id="1512" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00004</class>
    <file>BenchmarkTest00004.java</file>
    <line>65</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00004" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00004" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00004.java"></endNode>
  </finding>


  <finding id="219" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00005</class>
    <file>BenchmarkTest00005.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"></node>
  </finding>


  <finding id="220" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00005</class>
    <file>BenchmarkTest00005.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00005.java"></node>
  </finding>


  <finding id="792" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00006</class>
    <file>BenchmarkTest00006.java</file>
    <line>68</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="47" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00006" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00006.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00006" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00006.java"></endNode>
  </finding>


  <finding id="839" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00007</class>
    <file>BenchmarkTest00007.java</file>
    <line>61</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="47" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00007" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00007.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00007" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00007.java"></endNode>
  </finding>


  <finding id="1071" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00008</class>
    <file>BenchmarkTest00008.java</file>
    <line>58</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="47" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00008" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00008" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00008.java"></endNode>
  </finding>


  <finding id="1363" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00011</class>
    <file>BenchmarkTest00011.java</file>
    <line>56</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00011" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00011.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00011" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00011.java"></endNode>
  </finding>


  <finding id="702" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00012</class>
    <file>BenchmarkTest00012.java</file>
    <line>68</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00012" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00012" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"></endNode>
  </finding>


  <finding id="1699" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00012</class>
    <file>BenchmarkTest00012.java</file>
    <line>76</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00012" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00012" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00012.java"></endNode>
  </finding>


  <finding id="1708" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00013</class>
    <file>BenchmarkTest00013.java</file>
    <line>58</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00013" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00013.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00013" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00013.java"></endNode>
  </finding>


  <finding id="1730" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00014</class>
    <file>BenchmarkTest00014.java</file>
    <line>58</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00014" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00014.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00014" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00014.java"></endNode>
  </finding>


  <finding id="836" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00015</class>
    <file>BenchmarkTest00015.java</file>
    <line>70</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00015" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00015.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00015" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00015.java"></endNode>
  </finding>


  <finding id="1914" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00016</class>
    <file>BenchmarkTest00016.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00016" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00016.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00016" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00016.java"></endNode>
  </finding>


  <finding id="781" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00017</class>
    <file>BenchmarkTest00017.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00017" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00017.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00017" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00017.java"></endNode>
  </finding>


  <finding id="951" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00018</class>
    <file>BenchmarkTest00018.java</file>
    <line>60</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="46" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00018" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00018" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00018.java"></endNode>
  </finding>


  <finding id="221" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00019</class>
    <file>BenchmarkTest00019.java</file>
    <line>52</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00019" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java"></node>
  </finding>


  <finding id="222" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00019</class>
    <file>BenchmarkTest00019.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00019" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00019.java"></node>
  </finding>


  <finding id="223" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00020</class>
    <file>BenchmarkTest00020.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00020" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java"></node>
  </finding>


  <finding id="224" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00020</class>
    <file>BenchmarkTest00020.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00020" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00020.java"></node>
  </finding>


  <finding id="703" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00021</class>
    <file>BenchmarkTest00021.java</file>
    <line>59</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00021" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00021" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"></endNode>
  </finding>


  <finding id="1706" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00021</class>
    <file>BenchmarkTest00021.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00021" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00021" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00021.java"></endNode>
  </finding>


  <finding id="190" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00023</class>
    <file>BenchmarkTest00023.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00023" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00023.java"></node>
  </finding>


  <finding id="1060" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00024</class>
    <file>BenchmarkTest00024.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00024" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00024" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00024.java"></endNode>
  </finding>


  <finding id="1005" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00025</class>
    <file>BenchmarkTest00025.java</file>
    <line>51</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00025" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00025" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00025.java"></endNode>
  </finding>


  <finding id="946" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00026</class>
    <file>BenchmarkTest00026.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00026" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00026" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00026.java"></endNode>
  </finding>


  <finding id="1117" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00027</class>
    <file>BenchmarkTest00027.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00027" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00027" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00027.java"></endNode>
  </finding>


  <finding id="1424" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00028</class>
    <file>BenchmarkTest00028.java</file>
    <line>60</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00028" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00028" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00028.java"></endNode>
  </finding>


  <finding id="507" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00029</class>
    <file>BenchmarkTest00029.java</file>
    <line>58</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00029" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00029.java"></node>
  </finding>


  <finding id="1732" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00030</class>
    <file>BenchmarkTest00030.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00030" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00030.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00030" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00030.java"></endNode>
  </finding>


  <finding id="1525" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00031</class>
    <file>BenchmarkTest00031.java</file>
    <line>55</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00031" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00031.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00031" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00031.java"></endNode>
  </finding>


  <finding id="1065" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00032</class>
    <file>BenchmarkTest00032.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00032" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00032" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00032.java"></endNode>
  </finding>


  <finding id="1003" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00033</class>
    <file>BenchmarkTest00033.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00033" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00033" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00033.java"></endNode>
  </finding>


  <finding id="943" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00034</class>
    <file>BenchmarkTest00034.java</file>
    <line>58</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00034" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00034" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00034.java"></endNode>
  </finding>


  <finding id="225" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00035</class>
    <file>BenchmarkTest00035.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00035" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java"></node>
  </finding>


  <finding id="226" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00035</class>
    <file>BenchmarkTest00035.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00035" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00035.java"></node>
  </finding>


  <finding id="1816" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00036</class>
    <file>BenchmarkTest00036.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="47" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00036" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00036.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00036" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00036.java"></endNode>
  </finding>


  <finding id="920" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00037</class>
    <file>BenchmarkTest00037.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="47" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00037" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00037" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00037.java"></endNode>
  </finding>


  <finding id="874" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00038</class>
    <file>BenchmarkTest00038.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="47" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00038" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00038" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00038.java"></endNode>
  </finding>


  <finding id="887" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00039</class>
    <file>BenchmarkTest00039.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="47" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00039" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00039" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00039.java"></endNode>
  </finding>


  <finding id="1446" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00040</class>
    <file>BenchmarkTest00040.java</file>
    <line>50</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00040" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00040.java"></endNode>
  </finding>


  <finding id="1864" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00041</class>
    <file>BenchmarkTest00041.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00041" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00041.java"></endNode>
  </finding>


  <finding id="1168" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00043</class>
    <file>BenchmarkTest00043.java</file>
    <line>54</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00043" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00043.java"></endNode>
  </finding>


  <finding id="716" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00044</class>
    <file>BenchmarkTest00044.java</file>
    <line>62</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00044" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00044" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"></endNode>
  </finding>


  <finding id="1809" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00044</class>
    <file>BenchmarkTest00044.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00044" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00044" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00044.java"></endNode>
  </finding>


  <finding id="1284" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00045</class>
    <file>BenchmarkTest00045.java</file>
    <line>65</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00045" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00045" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00045.java"></endNode>
  </finding>


  <finding id="508" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00046</class>
    <file>BenchmarkTest00046.java</file>
    <line>53</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00046" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00046.java"></node>
  </finding>


  <finding id="1588" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00047</class>
    <file>BenchmarkTest00047.java</file>
    <line>65</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00047" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00047.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00047" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00047.java"></endNode>
  </finding>


  <finding id="1601" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00048</class>
    <file>BenchmarkTest00048.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00048" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00048.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00048" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00048.java"></endNode>
  </finding>


  <finding id="1829" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00049</class>
    <file>BenchmarkTest00049.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00049" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00049.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00049" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00049.java"></endNode>
  </finding>


  <finding id="227" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00050</class>
    <file>BenchmarkTest00050.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00050" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java"></node>
  </finding>


  <finding id="228" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00050</class>
    <file>BenchmarkTest00050.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00050" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00050.java"></node>
  </finding>


  <finding id="229" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00053</class>
    <file>BenchmarkTest00053.java</file>
    <line>82</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00053" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"></node>
  </finding>


  <finding id="230" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00053</class>
    <file>BenchmarkTest00053.java</file>
    <line>85</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00053" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00053.java"></node>
  </finding>


  <finding id="231" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00055</class>
    <file>BenchmarkTest00055.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00055" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"></node>
  </finding>


  <finding id="232" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00055</class>
    <file>BenchmarkTest00055.java</file>
    <line>78</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00055" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00055.java"></node>
  </finding>


  <finding id="233" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00056</class>
    <file>BenchmarkTest00056.java</file>
    <line>86</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00056" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"></node>
  </finding>


  <finding id="234" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00056</class>
    <file>BenchmarkTest00056.java</file>
    <line>88</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="88" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00056" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00056.java"></node>
  </finding>


  <finding id="235" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00057</class>
    <file>BenchmarkTest00057.java</file>
    <line>82</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00057" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"></node>
  </finding>


  <finding id="236" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00057</class>
    <file>BenchmarkTest00057.java</file>
    <line>85</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00057" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00057.java"></node>
  </finding>


  <finding id="237" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00059</class>
    <file>BenchmarkTest00059.java</file>
    <line>80</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00059" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00059.java"></node>
  </finding>


  <finding id="1422" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00060</class>
    <file>BenchmarkTest00060.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00060" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00060" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00060.java"></endNode>
  </finding>


  <finding id="1280" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00061</class>
    <file>BenchmarkTest00061.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00061" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00061" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00061.java"></endNode>
  </finding>


  <finding id="1234" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00062</class>
    <file>BenchmarkTest00062.java</file>
    <line>75</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00062" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00062.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00062" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00062.java"></endNode>
  </finding>


  <finding id="1428" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00065</class>
    <file>BenchmarkTest00065.java</file>
    <line>73</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
static java.nio.file.Path java.nio.file.Paths.get(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00065" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00065" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"></endNode>
  </finding>


  <finding id="1467" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00065</class>
    <file>BenchmarkTest00065.java</file>
    <line>74</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
static java.io.InputStream java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00065" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00065" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00065.java"></endNode>
  </finding>


  <finding id="48" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00066</class>
    <file>BenchmarkTest00066.java</file>
    <line>71</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00066" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00066.java"></node>
  </finding>


  <finding id="61" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00067</class>
    <file>BenchmarkTest00067.java</file>
    <line>79</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00067" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00067.java"></node>
  </finding>


  <finding id="78" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00068</class>
    <file>BenchmarkTest00068.java</file>
    <line>71</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00068" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00068.java"></node>
  </finding>


  <finding id="509" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00070</class>
    <file>BenchmarkTest00070.java</file>
    <line>72</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00070" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00070.java"></node>
  </finding>


  <finding id="510" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00071</class>
    <file>BenchmarkTest00071.java</file>
    <line>72</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00071" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00071.java"></node>
  </finding>


  <finding id="511" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00073</class>
    <file>BenchmarkTest00073.java</file>
    <line>85</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00073" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00073.java"></node>
  </finding>


  <finding id="512" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00074</class>
    <file>BenchmarkTest00074.java</file>
    <line>74</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00074" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00074.java"></node>
  </finding>


  <finding id="513" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00075</class>
    <file>BenchmarkTest00075.java</file>
    <line>75</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00075" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00075.java"></node>
  </finding>


  <finding id="514" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00076</class>
    <file>BenchmarkTest00076.java</file>
    <line>88</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="88" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00076" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00076.java"></node>
  </finding>


  <finding id="814" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00077</class>
    <file>BenchmarkTest00077.java</file>
    <line>96</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00077" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"></startNode>
    <endNode lineNo="96" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00077" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00077.java"></endNode>
  </finding>


  <finding id="209" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00078</class>
    <file>BenchmarkTest00078.java</file>
    <line>69</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00078" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00078.java"></node>
  </finding>


  <finding id="104" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00079</class>
    <file>BenchmarkTest00079.java</file>
    <line>70</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00079" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00079.java"></node>
  </finding>


  <finding id="22" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00080</class>
    <file>BenchmarkTest00080.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00080" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00080.java"></node>
  </finding>


  <finding id="202" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00081</class>
    <file>BenchmarkTest00081.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00081" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00081.java"></node>
  </finding>


  <finding id="44" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00082</class>
    <file>BenchmarkTest00082.java</file>
    <line>66</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00082" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00082.java"></node>
  </finding>


  <finding id="62" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00083</class>
    <file>BenchmarkTest00083.java</file>
    <line>71</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00083" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00083.java"></node>
  </finding>


  <finding id="73" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00084</class>
    <file>BenchmarkTest00084.java</file>
    <line>66</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00084" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00084.java"></node>
  </finding>


  <finding id="136" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00085</class>
    <file>BenchmarkTest00085.java</file>
    <line>70</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00085" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00085.java"></node>
  </finding>


  <finding id="210" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00086</class>
    <file>BenchmarkTest00086.java</file>
    <line>71</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00086" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00086.java"></node>
  </finding>


  <finding id="1207" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00087</class>
    <file>BenchmarkTest00087.java</file>
    <line>90</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"></startNode>
    <endNode lineNo="90" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"></endNode>
  </finding>


  <finding id="1901" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00087</class>
    <file>BenchmarkTest00087.java</file>
    <line>84</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00087.java"></endNode>
  </finding>


  <finding id="1906" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00088</class>
    <file>BenchmarkTest00088.java</file>
    <line>80</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00088" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00088.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00088" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00088.java"></endNode>
  </finding>


  <finding id="1895" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00089</class>
    <file>BenchmarkTest00089.java</file>
    <line>86</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00089" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00089.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00089" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00089.java"></endNode>
  </finding>


  <finding id="757" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00091</class>
    <file>BenchmarkTest00091.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00091" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00091.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00091" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00091.java"></endNode>
  </finding>


  <finding id="763" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00092</class>
    <file>BenchmarkTest00092.java</file>
    <line>91</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00092" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00092.java"></startNode>
    <endNode lineNo="91" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00092" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00092.java"></endNode>
  </finding>


  <finding id="810" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00093</class>
    <file>BenchmarkTest00093.java</file>
    <line>85</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00093" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00093.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00093" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00093.java"></endNode>
  </finding>


  <finding id="1536" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00098</class>
    <file>BenchmarkTest00098.java</file>
    <line>66</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00098" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00098" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00098.java"></endNode>
  </finding>


  <finding id="1553" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00099</class>
    <file>BenchmarkTest00099.java</file>
    <line>76</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00099" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00099.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00099" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00099.java"></endNode>
  </finding>


  <finding id="992" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00100</class>
    <file>BenchmarkTest00100.java</file>
    <line>74</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00100" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00100" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00100.java"></endNode>
  </finding>


  <finding id="938" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00101</class>
    <file>BenchmarkTest00101.java</file>
    <line>79</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00101" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"></startNode>
    <endNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00101" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00101.java"></endNode>
  </finding>


  <finding id="1101" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00102</class>
    <file>BenchmarkTest00102.java</file>
    <line>68</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00102" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00102" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00102.java"></endNode>
  </finding>


  <finding id="1126" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00103</class>
    <file>BenchmarkTest00103.java</file>
    <line>73</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **, **)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00103" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00103" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00103.java"></endNode>
  </finding>


  <finding id="895" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00106</class>
    <file>BenchmarkTest00106.java</file>
    <line>79</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00106" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"></startNode>
    <endNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00106" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00106.java"></endNode>
  </finding>


  <finding id="1150" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00108</class>
    <file>BenchmarkTest00108.java</file>
    <line>88</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00108" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"></startNode>
    <endNode lineNo="88" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00108" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00108.java"></endNode>
  </finding>


  <finding id="1092" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00109</class>
    <file>BenchmarkTest00109.java</file>
    <line>73</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00109" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00109" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00109.java"></endNode>
  </finding>


  <finding id="1127" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00111</class>
    <file>BenchmarkTest00111.java</file>
    <line>79</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00111" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"></startNode>
    <endNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00111" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00111.java"></endNode>
  </finding>


  <finding id="931" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00112</class>
    <file>BenchmarkTest00112.java</file>
    <line>70</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00112" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00112" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00112.java"></endNode>
  </finding>


  <finding id="906" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00115</class>
    <file>BenchmarkTest00115.java</file>
    <line>74</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00115" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00115" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00115.java"></endNode>
  </finding>


  <finding id="238" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00119</class>
    <file>BenchmarkTest00119.java</file>
    <line>79</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00119" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java"></node>
  </finding>


  <finding id="239" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00119</class>
    <file>BenchmarkTest00119.java</file>
    <line>82</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00119" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00119.java"></node>
  </finding>


  <finding id="240" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00120</class>
    <file>BenchmarkTest00120.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00120" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java"></node>
  </finding>


  <finding id="241" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00120</class>
    <file>BenchmarkTest00120.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00120" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00120.java"></node>
  </finding>


  <finding id="242" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00123</class>
    <file>BenchmarkTest00123.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00123" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"></node>
  </finding>


  <finding id="243" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00123</class>
    <file>BenchmarkTest00123.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00123" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00123.java"></node>
  </finding>


  <finding id="244" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00124</class>
    <file>BenchmarkTest00124.java</file>
    <line>72</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00124" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"></node>
  </finding>


  <finding id="245" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00124</class>
    <file>BenchmarkTest00124.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00124" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00124.java"></node>
  </finding>


  <finding id="246" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00125</class>
    <file>BenchmarkTest00125.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00125" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"></node>
  </finding>


  <finding id="247" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00125</class>
    <file>BenchmarkTest00125.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00125" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00125.java"></node>
  </finding>


  <finding id="248" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00127</class>
    <file>BenchmarkTest00127.java</file>
    <line>79</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00127" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00127.java"></node>
  </finding>


  <finding id="249" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00128</class>
    <file>BenchmarkTest00128.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00128" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00128.java"></node>
  </finding>


  <finding id="250" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00129</class>
    <file>BenchmarkTest00129.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00129" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00129.java"></node>
  </finding>


  <finding id="251" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00130</class>
    <file>BenchmarkTest00130.java</file>
    <line>88</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="88" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00130" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00130.java"></node>
  </finding>


  <finding id="1277" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00133</class>
    <file>BenchmarkTest00133.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00133" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00133.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00133" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00133.java"></endNode>
  </finding>


  <finding id="1292" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00134</class>
    <file>BenchmarkTest00134.java</file>
    <line>78</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00134.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00134.java"></endNode>
  </finding>


  <finding id="215" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00140</class>
    <file>BenchmarkTest00140.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00140" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00140.java"></node>
  </finding>


  <finding id="515" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00141</class>
    <file>BenchmarkTest00141.java</file>
    <line>67</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00141" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java"></node>
  </finding>


  <finding id="516" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00141</class>
    <file>BenchmarkTest00141.java</file>
    <line>69</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00141" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00141.java"></node>
  </finding>


  <finding id="517" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00143</class>
    <file>BenchmarkTest00143.java</file>
    <line>78</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00143" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00143.java"></node>
  </finding>


  <finding id="1750" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00144</class>
    <file>BenchmarkTest00144.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00144" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00144.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00144" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00144.java"></endNode>
  </finding>


  <finding id="1830" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00145</class>
    <file>BenchmarkTest00145.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00145" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00145.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00145" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00145.java"></endNode>
  </finding>


  <finding id="1721" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00146</class>
    <file>BenchmarkTest00146.java</file>
    <line>61</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00146" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00146.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00146" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00146.java"></endNode>
  </finding>


  <finding id="1744" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00147</class>
    <file>BenchmarkTest00147.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00147" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00147.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00147" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00147.java"></endNode>
  </finding>


  <finding id="1685" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00148</class>
    <file>BenchmarkTest00148.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00148" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00148.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00148" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00148.java"></endNode>
  </finding>


  <finding id="1775" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00149</class>
    <file>BenchmarkTest00149.java</file>
    <line>58</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00149" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00149.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00149" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00149.java"></endNode>
  </finding>


  <finding id="1643" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00150</class>
    <file>BenchmarkTest00150.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00150" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00150.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00150" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00150.java"></endNode>
  </finding>


  <finding id="1657" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00151</class>
    <file>BenchmarkTest00151.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00151" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00151.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00151" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00151.java"></endNode>
  </finding>


  <finding id="1751" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00152</class>
    <file>BenchmarkTest00152.java</file>
    <line>75</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00152" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00152.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00152" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00152.java"></endNode>
  </finding>


  <finding id="1833" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00153</class>
    <file>BenchmarkTest00153.java</file>
    <line>61</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00153" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00153.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00153" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00153.java"></endNode>
  </finding>


  <finding id="1720" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00154</class>
    <file>BenchmarkTest00154.java</file>
    <line>75</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00154" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00154.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00154" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00154.java"></endNode>
  </finding>


  <finding id="1746" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00155</class>
    <file>BenchmarkTest00155.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00155.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00155.java"></endNode>
  </finding>


  <finding id="1681" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00156</class>
    <file>BenchmarkTest00156.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00156" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00156.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00156" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00156.java"></endNode>
  </finding>


  <finding id="1776" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00157</class>
    <file>BenchmarkTest00157.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00157" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00157.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00157" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00157.java"></endNode>
  </finding>


  <finding id="830" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00159</class>
    <file>BenchmarkTest00159.java</file>
    <line>68</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00159" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00159.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00159" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00159.java"></endNode>
  </finding>


  <finding id="131" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00160</class>
    <file>BenchmarkTest00160.java</file>
    <line>60</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00160" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00160.java"></node>
  </finding>


  <finding id="216" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00161</class>
    <file>BenchmarkTest00161.java</file>
    <line>61</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00161" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00161.java"></node>
  </finding>


  <finding id="118" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00162</class>
    <file>BenchmarkTest00162.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00162" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00162.java"></node>
  </finding>


  <finding id="127" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00163</class>
    <file>BenchmarkTest00163.java</file>
    <line>56</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00163" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00163.java"></node>
  </finding>


  <finding id="85" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00164</class>
    <file>BenchmarkTest00164.java</file>
    <line>61</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00164" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00164.java"></node>
  </finding>


  <finding id="158" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00165</class>
    <file>BenchmarkTest00165.java</file>
    <line>58</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00165" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00165.java"></node>
  </finding>


  <finding id="172" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00166</class>
    <file>BenchmarkTest00166.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00166" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00166.java"></node>
  </finding>


  <finding id="166" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00167</class>
    <file>BenchmarkTest00167.java</file>
    <line>59</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00167" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00167.java"></node>
  </finding>


  <finding id="72" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00168</class>
    <file>BenchmarkTest00168.java</file>
    <line>61</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00168" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00168.java"></node>
  </finding>


  <finding id="1204" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00169</class>
    <file>BenchmarkTest00169.java</file>
    <line>86</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00169" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00169" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"></endNode>
  </finding>


  <finding id="1896" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00169</class>
    <file>BenchmarkTest00169.java</file>
    <line>80</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00169" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00169" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00169.java"></endNode>
  </finding>


  <finding id="1210" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00170</class>
    <file>BenchmarkTest00170.java</file>
    <line>90</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00170" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"></startNode>
    <endNode lineNo="90" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00170" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"></endNode>
  </finding>


  <finding id="1904" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00170</class>
    <file>BenchmarkTest00170.java</file>
    <line>84</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00170" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00170" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00170.java"></endNode>
  </finding>


  <finding id="1354" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00171</class>
    <file>BenchmarkTest00171.java</file>
    <line>84</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00171" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00171.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00171" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00171.java"></endNode>
  </finding>


  <finding id="768" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00172</class>
    <file>BenchmarkTest00172.java</file>
    <line>67</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00172" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00172.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00172" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00172.java"></endNode>
  </finding>


  <finding id="1317" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00172</class>
    <file>BenchmarkTest00172.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00172" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00172.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00172" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00172.java"></endNode>
  </finding>


  <finding id="822" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00173</class>
    <file>BenchmarkTest00173.java</file>
    <line>66</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00173" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00173.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00173" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00173.java"></endNode>
  </finding>


  <finding id="852" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00174</class>
    <file>BenchmarkTest00174.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00174" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00174.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00174" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00174.java"></endNode>
  </finding>


  <finding id="761" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00176</class>
    <file>BenchmarkTest00176.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00176" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00176.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00176" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00176.java"></endNode>
  </finding>


  <finding id="1301" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00176</class>
    <file>BenchmarkTest00176.java</file>
    <line>65</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00176" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00176.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00176" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00176.java"></endNode>
  </finding>


  <finding id="1308" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00177</class>
    <file>BenchmarkTest00177.java</file>
    <line>71</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00177" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00177.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00177" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00177.java"></endNode>
  </finding>


  <finding id="1146" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00190</class>
    <file>BenchmarkTest00190.java</file>
    <line>69</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00190" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00190.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00190" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00190.java"></endNode>
  </finding>


  <finding id="954" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00192</class>
    <file>BenchmarkTest00192.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00192" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00192" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00192.java"></endNode>
  </finding>


  <finding id="973" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00193</class>
    <file>BenchmarkTest00193.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00193" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00193" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00193.java"></endNode>
  </finding>


  <finding id="917" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00194</class>
    <file>BenchmarkTest00194.java</file>
    <line>62</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00194" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00194.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00194" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00194.java"></endNode>
  </finding>


  <finding id="878" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00195</class>
    <file>BenchmarkTest00195.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00195" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00195" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00195.java"></endNode>
  </finding>


  <finding id="896" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00196</class>
    <file>BenchmarkTest00196.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00196" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00196" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00196.java"></endNode>
  </finding>


  <finding id="907" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00197</class>
    <file>BenchmarkTest00197.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00197" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00197.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00197" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00197.java"></endNode>
  </finding>


  <finding id="995" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00198</class>
    <file>BenchmarkTest00198.java</file>
    <line>58</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00198" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00198" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00198.java"></endNode>
  </finding>


  <finding id="948" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00199</class>
    <file>BenchmarkTest00199.java</file>
    <line>63</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00199" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00199" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00199.java"></endNode>
  </finding>


  <finding id="1110" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00200</class>
    <file>BenchmarkTest00200.java</file>
    <line>68</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00200" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00200.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00200" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00200.java"></endNode>
  </finding>


  <finding id="1078" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00203</class>
    <file>BenchmarkTest00203.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00203" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00203" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00203.java"></endNode>
  </finding>


  <finding id="1138" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00204</class>
    <file>BenchmarkTest00204.java</file>
    <line>60</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00204" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00204" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00204.java"></endNode>
  </finding>


  <finding id="1039" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00205</class>
    <file>BenchmarkTest00205.java</file>
    <line>69</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00205" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00205.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00205" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00205.java"></endNode>
  </finding>


  <finding id="1182" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00207</class>
    <file>BenchmarkTest00207.java</file>
    <line>75</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00207" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00207" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"></endNode>
  </finding>


  <finding id="1691" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00207</class>
    <file>BenchmarkTest00207.java</file>
    <line>74</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00207" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00207" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00207.java"></endNode>
  </finding>


  <finding id="252" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00208</class>
    <file>BenchmarkTest00208.java</file>
    <line>81</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java"></node>
  </finding>


  <finding id="253" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00208</class>
    <file>BenchmarkTest00208.java</file>
    <line>83</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00208.java"></node>
  </finding>


  <finding id="254" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00210</class>
    <file>BenchmarkTest00210.java</file>
    <line>78</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00210" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"></node>
  </finding>


  <finding id="255" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00210</class>
    <file>BenchmarkTest00210.java</file>
    <line>81</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00210" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00210.java"></node>
  </finding>


  <finding id="256" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00213</class>
    <file>BenchmarkTest00213.java</file>
    <line>88</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="88" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00213" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00213.java"></node>
  </finding>


  <finding id="257" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00214</class>
    <file>BenchmarkTest00214.java</file>
    <line>78</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00214" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00214.java"></node>
  </finding>


  <finding id="1325" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00215</class>
    <file>BenchmarkTest00215.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00215" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00215.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00215" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00215.java"></endNode>
  </finding>


  <finding id="1361" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00216</class>
    <file>BenchmarkTest00216.java</file>
    <line>70</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00216" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00216.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00216" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00216.java"></endNode>
  </finding>


  <finding id="1386" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00218</class>
    <file>BenchmarkTest00218.java</file>
    <line>94</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00218" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00218.java"></startNode>
    <endNode lineNo="94" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00218" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00218.java"></endNode>
  </finding>


  <finding id="1274" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00219</class>
    <file>BenchmarkTest00219.java</file>
    <line>75</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00219" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00219.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00219" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00219.java"></endNode>
  </finding>


  <finding id="1337" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00222</class>
    <file>BenchmarkTest00222.java</file>
    <line>89</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00222" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java"></startNode>
    <endNode lineNo="89" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00222" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00222.java"></endNode>
  </finding>


  <finding id="518" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00223</class>
    <file>BenchmarkTest00223.java</file>
    <line>75</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java"></node>
  </finding>


  <finding id="519" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00223</class>
    <file>BenchmarkTest00223.java</file>
    <line>77</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00223.java"></node>
  </finding>


  <finding id="520" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00226</class>
    <file>BenchmarkTest00226.java</file>
    <line>74</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00226" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00226.java"></node>
  </finding>


  <finding id="521" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00227</class>
    <file>BenchmarkTest00227.java</file>
    <line>82</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00227" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00227.java"></node>
  </finding>


  <finding id="522" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00228</class>
    <file>BenchmarkTest00228.java</file>
    <line>78</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00228" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00228.java"></node>
  </finding>


  <finding id="523" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00229</class>
    <file>BenchmarkTest00229.java</file>
    <line>68</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00229" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00229.java"></node>
  </finding>


  <finding id="101" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00230</class>
    <file>BenchmarkTest00230.java</file>
    <line>68</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00230" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00230.java"></node>
  </finding>


  <finding id="90" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00231</class>
    <file>BenchmarkTest00231.java</file>
    <line>69</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00231" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00231.java"></node>
  </finding>


  <finding id="137" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00232</class>
    <file>BenchmarkTest00232.java</file>
    <line>70</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00232" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00232.java"></node>
  </finding>


  <finding id="176" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00233</class>
    <file>BenchmarkTest00233.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00233" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00233.java"></node>
  </finding>


  <finding id="163" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00234</class>
    <file>BenchmarkTest00234.java</file>
    <line>70</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00234" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00234.java"></node>
  </finding>


  <finding id="64" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00235</class>
    <file>BenchmarkTest00235.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00235" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00235.java"></node>
  </finding>


  <finding id="98" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00236</class>
    <file>BenchmarkTest00236.java</file>
    <line>70</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00236" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00236.java"></node>
  </finding>


  <finding id="32" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00237</class>
    <file>BenchmarkTest00237.java</file>
    <line>83</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00237" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00237.java"></node>
  </finding>


  <finding id="16" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00238</class>
    <file>BenchmarkTest00238.java</file>
    <line>68</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00238" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00238.java"></node>
  </finding>


  <finding id="7" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00239</class>
    <file>BenchmarkTest00239.java</file>
    <line>77</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00239" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00239.java"></node>
  </finding>


  <finding id="135" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00240</class>
    <file>BenchmarkTest00240.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00240" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00240.java"></node>
  </finding>


  <finding id="1222" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00241</class>
    <file>BenchmarkTest00241.java</file>
    <line>91</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"></startNode>
    <endNode lineNo="91" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"></endNode>
  </finding>


  <finding id="1921" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00241</class>
    <file>BenchmarkTest00241.java</file>
    <line>85</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00241.java"></endNode>
  </finding>


  <finding id="1924" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00242</class>
    <file>BenchmarkTest00242.java</file>
    <line>89</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00242" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00242.java"></startNode>
    <endNode lineNo="89" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00242" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00242.java"></endNode>
  </finding>


  <finding id="1496" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00251</class>
    <file>BenchmarkTest00251.java</file>
    <line>66</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00251" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00251.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00251" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00251.java"></endNode>
  </finding>


  <finding id="1514" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00252</class>
    <file>BenchmarkTest00252.java</file>
    <line>75</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00252" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00252.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00252" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00252.java"></endNode>
  </finding>


  <finding id="258" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00254</class>
    <file>BenchmarkTest00254.java</file>
    <line>72</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00254" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java"></node>
  </finding>


  <finding id="259" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00254</class>
    <file>BenchmarkTest00254.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00254" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00254.java"></node>
  </finding>


  <finding id="260" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00256</class>
    <file>BenchmarkTest00256.java</file>
    <line>78</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00256" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java"></node>
  </finding>


  <finding id="261" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00256</class>
    <file>BenchmarkTest00256.java</file>
    <line>80</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00256" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00256.java"></node>
  </finding>


  <finding id="262" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00257</class>
    <file>BenchmarkTest00257.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00257" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java"></node>
  </finding>


  <finding id="263" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00257</class>
    <file>BenchmarkTest00257.java</file>
    <line>71</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00257" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00257.java"></node>
  </finding>


  <finding id="264" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00258</class>
    <file>BenchmarkTest00258.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00258" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java"></node>
  </finding>


  <finding id="265" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00258</class>
    <file>BenchmarkTest00258.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00258" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00258.java"></node>
  </finding>


  <finding id="1250" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00262</class>
    <file>BenchmarkTest00262.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00262" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00262.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00262" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00262.java"></endNode>
  </finding>


  <finding id="1278" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00264</class>
    <file>BenchmarkTest00264.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00264" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00264.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00264" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00264.java"></endNode>
  </finding>


  <finding id="1315" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00265</class>
    <file>BenchmarkTest00265.java</file>
    <line>73</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00265" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00265.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00265" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00265.java"></endNode>
  </finding>


  <finding id="524" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00266</class>
    <file>BenchmarkTest00266.java</file>
    <line>68</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00266" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java"></node>
  </finding>


  <finding id="525" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00266</class>
    <file>BenchmarkTest00266.java</file>
    <line>70</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00266" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00266.java"></node>
  </finding>


  <finding id="526" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00267</class>
    <file>BenchmarkTest00267.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00267" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java"></node>
  </finding>


  <finding id="527" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00267</class>
    <file>BenchmarkTest00267.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00267" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00267.java"></node>
  </finding>


  <finding id="528" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00268</class>
    <file>BenchmarkTest00268.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00268" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00268.java"></node>
  </finding>


  <finding id="529" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00269</class>
    <file>BenchmarkTest00269.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00269" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00269.java"></node>
  </finding>


  <finding id="530" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00272</class>
    <file>BenchmarkTest00272.java</file>
    <line>77</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00272" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00272.java"></node>
  </finding>


  <finding id="531" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00273</class>
    <file>BenchmarkTest00273.java</file>
    <line>71</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00273" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00273.java"></node>
  </finding>


  <finding id="532" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00274</class>
    <file>BenchmarkTest00274.java</file>
    <line>61</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00274" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00274.java"></node>
  </finding>


  <finding id="1788" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00276</class>
    <file>BenchmarkTest00276.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00276" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00276.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00276" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00276.java"></endNode>
  </finding>


  <finding id="1737" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00279</class>
    <file>BenchmarkTest00279.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00279" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00279.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00279" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00279.java"></endNode>
  </finding>


  <finding id="1623" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00280</class>
    <file>BenchmarkTest00280.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00280" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00280.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00280" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00280.java"></endNode>
  </finding>


  <finding id="1790" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00284</class>
    <file>BenchmarkTest00284.java</file>
    <line>58</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00284" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00284.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00284" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00284.java"></endNode>
  </finding>


  <finding id="1735" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00287</class>
    <file>BenchmarkTest00287.java</file>
    <line>61</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00287" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00287.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00287" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00287.java"></endNode>
  </finding>


  <finding id="1658" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00290</class>
    <file>BenchmarkTest00290.java</file>
    <line>59</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00290" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00290.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00290" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00290.java"></endNode>
  </finding>


  <finding id="1805" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00291</class>
    <file>BenchmarkTest00291.java</file>
    <line>61</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00291" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00291.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00291" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00291.java"></endNode>
  </finding>


  <finding id="1791" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00292</class>
    <file>BenchmarkTest00292.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00292" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00292.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00292" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00292.java"></endNode>
  </finding>


  <finding id="825" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00293</class>
    <file>BenchmarkTest00293.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00293" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00293.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00293" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00293.java"></endNode>
  </finding>


  <finding id="769" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00294</class>
    <file>BenchmarkTest00294.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00294" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00294.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00294" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00294.java"></endNode>
  </finding>


  <finding id="798" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00295</class>
    <file>BenchmarkTest00295.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00295" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00295.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00295" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00295.java"></endNode>
  </finding>


  <finding id="115" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00296</class>
    <file>BenchmarkTest00296.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00296" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00296.java"></node>
  </finding>


  <finding id="207" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00297</class>
    <file>BenchmarkTest00297.java</file>
    <line>58</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00297" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00297.java"></node>
  </finding>


  <finding id="139" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00298</class>
    <file>BenchmarkTest00298.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00298" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00298.java"></node>
  </finding>


  <finding id="67" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00299</class>
    <file>BenchmarkTest00299.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00299" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00299.java"></node>
  </finding>


  <finding id="1224" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00300</class>
    <file>BenchmarkTest00300.java</file>
    <line>82</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00300" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"></startNode>
    <endNode lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00300" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"></endNode>
  </finding>


  <finding id="1923" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00300</class>
    <file>BenchmarkTest00300.java</file>
    <line>76</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00300" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00300" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00300.java"></endNode>
  </finding>


  <finding id="1792" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00301</class>
    <file>BenchmarkTest00301.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00301" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00301.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00301" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00301.java"></endNode>
  </finding>


  <finding id="748" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00302</class>
    <file>BenchmarkTest00302.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00302" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00302.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00302" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00302.java"></endNode>
  </finding>


  <finding id="774" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00303</class>
    <file>BenchmarkTest00303.java</file>
    <line>82</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00303" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00303.java"></startNode>
    <endNode lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00303" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00303.java"></endNode>
  </finding>


  <finding id="736" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00304</class>
    <file>BenchmarkTest00304.java</file>
    <line>90</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00304.java"></startNode>
    <endNode lineNo="90" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00304.java"></endNode>
  </finding>


  <finding id="1260" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00304</class>
    <file>BenchmarkTest00304.java</file>
    <line>90</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="90" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00304.java"></startNode>
    <endNode lineNo="90" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00304.java"></endNode>
  </finding>


  <finding id="1243" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00305</class>
    <file>BenchmarkTest00305.java</file>
    <line>94</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="94" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00305" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00305.java"></startNode>
    <endNode lineNo="94" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00305" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00305.java"></endNode>
  </finding>


  <finding id="726" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00306</class>
    <file>BenchmarkTest00306.java</file>
    <line>70</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00306.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00306.java"></endNode>
  </finding>


  <finding id="1238" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00306</class>
    <file>BenchmarkTest00306.java</file>
    <line>70</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00306.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00306.java"></endNode>
  </finding>


  <finding id="743" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00307</class>
    <file>BenchmarkTest00307.java</file>
    <line>77</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00307" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00307.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00307" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00307.java"></endNode>
  </finding>


  <finding id="1288" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00310</class>
    <file>BenchmarkTest00310.java</file>
    <line>86</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00310" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00310.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00310" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00310.java"></endNode>
  </finding>


  <finding id="773" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00311</class>
    <file>BenchmarkTest00311.java</file>
    <line>80</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00311" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00311.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00311" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00311.java"></endNode>
  </finding>


  <finding id="1324" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00311</class>
    <file>BenchmarkTest00311.java</file>
    <line>80</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00311" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00311.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00311" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00311.java"></endNode>
  </finding>


  <finding id="1479" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00321</class>
    <file>BenchmarkTest00321.java</file>
    <line>58</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00321" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00321.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00321" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00321.java"></endNode>
  </finding>


  <finding id="1506" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00324</class>
    <file>BenchmarkTest00324.java</file>
    <line>58</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00324" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00324.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00324" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00324.java"></endNode>
  </finding>


  <finding id="1500" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00325</class>
    <file>BenchmarkTest00325.java</file>
    <line>58</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00325" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00325.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00325" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00325.java"></endNode>
  </finding>


  <finding id="1545" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00326</class>
    <file>BenchmarkTest00326.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00326.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00326.java"></endNode>
  </finding>


  <finding id="1552" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00327</class>
    <file>BenchmarkTest00327.java</file>
    <line>59</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00327" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00327.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00327" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00327.java"></endNode>
  </finding>


  <finding id="1061" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00328</class>
    <file>BenchmarkTest00328.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00328" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00328" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00328.java"></endNode>
  </finding>


  <finding id="1157" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00335</class>
    <file>BenchmarkTest00335.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00335" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00335" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00335.java"></endNode>
  </finding>


  <finding id="971" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00337</class>
    <file>BenchmarkTest00337.java</file>
    <line>69</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **, **)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00337" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00337" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00337.java"></endNode>
  </finding>


  <finding id="1006" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00339</class>
    <file>BenchmarkTest00339.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00339" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00339" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00339.java"></endNode>
  </finding>


  <finding id="963" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00341</class>
    <file>BenchmarkTest00341.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00341" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00341" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00341.java"></endNode>
  </finding>


  <finding id="1097" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00342</class>
    <file>BenchmarkTest00342.java</file>
    <line>71</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00342" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00342" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00342.java"></endNode>
  </finding>


  <finding id="533" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00346</class>
    <file>BenchmarkTest00346.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00346" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java"></node>
  </finding>


  <finding id="534" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00346</class>
    <file>BenchmarkTest00346.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00346" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00346.java"></node>
  </finding>


  <finding id="109" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00347</class>
    <file>BenchmarkTest00347.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00347" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00347.java"></node>
  </finding>


  <finding id="1228" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00348</class>
    <file>BenchmarkTest00348.java</file>
    <line>70</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00348" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00348" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"></endNode>
  </finding>


  <finding id="1928" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00348</class>
    <file>BenchmarkTest00348.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.ServletInputStream javax.servlet.ServletRequest.getInputStream()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00348" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00348" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00348.java"></endNode>
  </finding>


  <finding id="266" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00354</class>
    <file>BenchmarkTest00354.java</file>
    <line>58</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00354" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java"></node>
  </finding>


  <finding id="267" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00354</class>
    <file>BenchmarkTest00354.java</file>
    <line>61</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00354" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00354.java"></node>
  </finding>


  <finding id="268" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00355</class>
    <file>BenchmarkTest00355.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00355" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java"></node>
  </finding>


  <finding id="269" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00355</class>
    <file>BenchmarkTest00355.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00355" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00355.java"></node>
  </finding>


  <finding id="270" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00356</class>
    <file>BenchmarkTest00356.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00356" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java"></node>
  </finding>


  <finding id="271" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00356</class>
    <file>BenchmarkTest00356.java</file>
    <line>63</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00356" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00356.java"></node>
  </finding>


  <finding id="272" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00357</class>
    <file>BenchmarkTest00357.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00357" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00357.java"></node>
  </finding>


  <finding id="273" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00358</class>
    <file>BenchmarkTest00358.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00358" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00358.java"></node>
  </finding>


  <finding id="1295" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00359</class>
    <file>BenchmarkTest00359.java</file>
    <line>56</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00359" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00359.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00359" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00359.java"></endNode>
  </finding>


  <finding id="1377" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00360</class>
    <file>BenchmarkTest00360.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00360" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00360.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00360" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00360.java"></endNode>
  </finding>


  <finding id="1352" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00362</class>
    <file>BenchmarkTest00362.java</file>
    <line>56</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00362.java"></endNode>
  </finding>


  <finding id="1340" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00363</class>
    <file>BenchmarkTest00363.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00363" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00363" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00363.java"></endNode>
  </finding>


  <finding id="1432" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00364</class>
    <file>BenchmarkTest00364.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00364" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00364.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00364" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00364.java"></endNode>
  </finding>


  <finding id="52" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00368</class>
    <file>BenchmarkTest00368.java</file>
    <line>50</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00368" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00368.java"></node>
  </finding>


  <finding id="203" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00369</class>
    <file>BenchmarkTest00369.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00369" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00369.java"></node>
  </finding>


  <finding id="535" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00371</class>
    <file>BenchmarkTest00371.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00371" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00371.java"></node>
  </finding>


  <finding id="536" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00372</class>
    <file>BenchmarkTest00372.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00372" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00372.java"></node>
  </finding>


  <finding id="537" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00374</class>
    <file>BenchmarkTest00374.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00374" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00374.java"></node>
  </finding>


  <finding id="1655" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00375</class>
    <file>BenchmarkTest00375.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00375" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00375.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00375" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00375.java"></endNode>
  </finding>


  <finding id="1629" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00376</class>
    <file>BenchmarkTest00376.java</file>
    <line>58</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00376" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00376.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00376" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00376.java"></endNode>
  </finding>


  <finding id="1820" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00377</class>
    <file>BenchmarkTest00377.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00377" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00377.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00377" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00377.java"></endNode>
  </finding>


  <finding id="1605" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00378</class>
    <file>BenchmarkTest00378.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00378" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00378.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00378" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00378.java"></endNode>
  </finding>


  <finding id="1839" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00380</class>
    <file>BenchmarkTest00380.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00380" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00380.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00380" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00380.java"></endNode>
  </finding>


  <finding id="1664" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00382</class>
    <file>BenchmarkTest00382.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00382" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00382.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00382" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00382.java"></endNode>
  </finding>


  <finding id="1654" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00383</class>
    <file>BenchmarkTest00383.java</file>
    <line>65</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00383" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00383.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00383" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00383.java"></endNode>
  </finding>


  <finding id="1626" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00384</class>
    <file>BenchmarkTest00384.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00384" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00384.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00384" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00384.java"></endNode>
  </finding>


  <finding id="1834" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00385</class>
    <file>BenchmarkTest00385.java</file>
    <line>65</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00385" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00385.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00385" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00385.java"></endNode>
  </finding>


  <finding id="1591" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00387</class>
    <file>BenchmarkTest00387.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00387" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00387.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00387" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00387.java"></endNode>
  </finding>


  <finding id="1566" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00388</class>
    <file>BenchmarkTest00388.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00388" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00388.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00388" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00388.java"></endNode>
  </finding>


  <finding id="1673" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00390</class>
    <file>BenchmarkTest00390.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00390" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00390.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00390" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00390.java"></endNode>
  </finding>


  <finding id="1625" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00392</class>
    <file>BenchmarkTest00392.java</file>
    <line>58</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00392" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00392.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00392" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00392.java"></endNode>
  </finding>


  <finding id="1607" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00394</class>
    <file>BenchmarkTest00394.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00394" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00394.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00394" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00394.java"></endNode>
  </finding>


  <finding id="1592" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00395</class>
    <file>BenchmarkTest00395.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00395" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00395.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00395" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00395.java"></endNode>
  </finding>


  <finding id="37" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00397</class>
    <file>BenchmarkTest00397.java</file>
    <line>52</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00397" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00397.java"></node>
  </finding>


  <finding id="201" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00398</class>
    <file>BenchmarkTest00398.java</file>
    <line>56</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00398" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00398.java"></node>
  </finding>


  <finding id="185" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00399</class>
    <file>BenchmarkTest00399.java</file>
    <line>64</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00399" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00399.java"></node>
  </finding>


  <finding id="81" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00400</class>
    <file>BenchmarkTest00400.java</file>
    <line>69</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00400" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00400.java"></node>
  </finding>


  <finding id="38" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00401</class>
    <file>BenchmarkTest00401.java</file>
    <line>54</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00401" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00401.java"></node>
  </finding>


  <finding id="161" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00402</class>
    <file>BenchmarkTest00402.java</file>
    <line>54</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00402" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00402.java"></node>
  </finding>


  <finding id="1223" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00403</class>
    <file>BenchmarkTest00403.java</file>
    <line>77</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00403" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00403" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"></endNode>
  </finding>


  <finding id="1922" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00403</class>
    <file>BenchmarkTest00403.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00403" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00403" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00403.java"></endNode>
  </finding>


  <finding id="1910" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00404</class>
    <file>BenchmarkTest00404.java</file>
    <line>69</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00404" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00404.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00404" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00404.java"></endNode>
  </finding>


  <finding id="1897" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00405</class>
    <file>BenchmarkTest00405.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00405" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00405.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00405" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00405.java"></endNode>
  </finding>


  <finding id="788" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00407</class>
    <file>BenchmarkTest00407.java</file>
    <line>83</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00407" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00407.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00407" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00407.java"></endNode>
  </finding>


  <finding id="815" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00409</class>
    <file>BenchmarkTest00409.java</file>
    <line>92</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00409" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00409.java"></startNode>
    <endNode lineNo="92" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00409" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00409.java"></endNode>
  </finding>


  <finding id="1373" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00409</class>
    <file>BenchmarkTest00409.java</file>
    <line>92</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="92" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00409" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00409.java"></startNode>
    <endNode lineNo="92" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00409" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00409.java"></endNode>
  </finding>


  <finding id="806" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00412</class>
    <file>BenchmarkTest00412.java</file>
    <line>64</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00412" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00412.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00412" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00412.java"></endNode>
  </finding>


  <finding id="1365" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00412</class>
    <file>BenchmarkTest00412.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00412" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00412.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00412" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00412.java"></endNode>
  </finding>


  <finding id="1524" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00424</class>
    <file>BenchmarkTest00424.java</file>
    <line>55</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00424" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00424.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00424" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00424.java"></endNode>
  </finding>


  <finding id="1533" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00425</class>
    <file>BenchmarkTest00425.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00425" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00425.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00425" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00425.java"></endNode>
  </finding>


  <finding id="1510" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00426</class>
    <file>BenchmarkTest00426.java</file>
    <line>57</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00426" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00426.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00426" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00426.java"></endNode>
  </finding>


  <finding id="1491" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00427</class>
    <file>BenchmarkTest00427.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00427" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00427.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00427" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00427.java"></endNode>
  </finding>


  <finding id="1104" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00428</class>
    <file>BenchmarkTest00428.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00428" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00428.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00428" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00428.java"></endNode>
  </finding>


  <finding id="1132" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00429</class>
    <file>BenchmarkTest00429.java</file>
    <line>60</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00429" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00429" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00429.java"></endNode>
  </finding>


  <finding id="1021" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00431</class>
    <file>BenchmarkTest00431.java</file>
    <line>58</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00431" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00431" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00431.java"></endNode>
  </finding>


  <finding id="1037" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00432</class>
    <file>BenchmarkTest00432.java</file>
    <line>62</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00432" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00432.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00432" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00432.java"></endNode>
  </finding>


  <finding id="1044" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00433</class>
    <file>BenchmarkTest00433.java</file>
    <line>58</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00433" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00433" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00433.java"></endNode>
  </finding>


  <finding id="985" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00434</class>
    <file>BenchmarkTest00434.java</file>
    <line>54</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00434" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00434" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00434.java"></endNode>
  </finding>


  <finding id="933" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00435</class>
    <file>BenchmarkTest00435.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00435" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00435" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00435.java"></endNode>
  </finding>


  <finding id="922" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00438</class>
    <file>BenchmarkTest00438.java</file>
    <line>60</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00438" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00438" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00438.java"></endNode>
  </finding>


  <finding id="998" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00439</class>
    <file>BenchmarkTest00439.java</file>
    <line>54</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00439" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00439" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00439.java"></endNode>
  </finding>


  <finding id="1045" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00441</class>
    <file>BenchmarkTest00441.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00441" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00441" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00441.java"></endNode>
  </finding>


  <finding id="1181" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00442</class>
    <file>BenchmarkTest00442.java</file>
    <line>72</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00442" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00442" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"></endNode>
  </finding>


  <finding id="1689" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00442</class>
    <file>BenchmarkTest00442.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00442" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00442" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00442.java"></endNode>
  </finding>


  <finding id="274" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00445</class>
    <file>BenchmarkTest00445.java</file>
    <line>79</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00445" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java"></node>
  </finding>


  <finding id="275" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00445</class>
    <file>BenchmarkTest00445.java</file>
    <line>82</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00445" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00445.java"></node>
  </finding>


  <finding id="276" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00446</class>
    <file>BenchmarkTest00446.java</file>
    <line>72</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00446" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"></node>
  </finding>


  <finding id="277" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00446</class>
    <file>BenchmarkTest00446.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00446" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00446.java"></node>
  </finding>


  <finding id="278" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00448</class>
    <file>BenchmarkTest00448.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00448" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java"></node>
  </finding>


  <finding id="279" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00448</class>
    <file>BenchmarkTest00448.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00448" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00448.java"></node>
  </finding>


  <finding id="280" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00449</class>
    <file>BenchmarkTest00449.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00449" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java"></node>
  </finding>


  <finding id="281" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00449</class>
    <file>BenchmarkTest00449.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00449" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00449.java"></node>
  </finding>


  <finding id="282" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00450</class>
    <file>BenchmarkTest00450.java</file>
    <line>82</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00450" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00450.java"></node>
  </finding>


  <finding id="283" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00451</class>
    <file>BenchmarkTest00451.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00451" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00451.java"></node>
  </finding>


  <finding id="1401" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00452</class>
    <file>BenchmarkTest00452.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00452" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00452.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00452" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00452.java"></endNode>
  </finding>


  <finding id="1419" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00453</class>
    <file>BenchmarkTest00453.java</file>
    <line>70</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00453" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00453.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00453" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00453.java"></endNode>
  </finding>


  <finding id="1332" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00455</class>
    <file>BenchmarkTest00455.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00455" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00455.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00455" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00455.java"></endNode>
  </finding>


  <finding id="1241" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00456</class>
    <file>BenchmarkTest00456.java</file>
    <line>65</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00456" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00456.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00456" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00456.java"></endNode>
  </finding>


  <finding id="1254" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00457</class>
    <file>BenchmarkTest00457.java</file>
    <line>71</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00457" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00457.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00457" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00457.java"></endNode>
  </finding>


  <finding id="1272" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00459</class>
    <file>BenchmarkTest00459.java</file>
    <line>65</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00459" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00459" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00459.java"></endNode>
  </finding>


  <finding id="183" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00461</class>
    <file>BenchmarkTest00461.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00461" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00461.java"></node>
  </finding>


  <finding id="538" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00462</class>
    <file>BenchmarkTest00462.java</file>
    <line>71</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00462" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java"></node>
  </finding>


  <finding id="539" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00462</class>
    <file>BenchmarkTest00462.java</file>
    <line>73</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00462" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00462.java"></node>
  </finding>


  <finding id="540" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00464</class>
    <file>BenchmarkTest00464.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00464" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00464.java"></node>
  </finding>


  <finding id="541" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00465</class>
    <file>BenchmarkTest00465.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00465" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00465.java"></node>
  </finding>


  <finding id="542" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00466</class>
    <file>BenchmarkTest00466.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00466" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00466.java"></node>
  </finding>


  <finding id="1619" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00467</class>
    <file>BenchmarkTest00467.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00467" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00467.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00467" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00467.java"></endNode>
  </finding>


  <finding id="1580" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00472</class>
    <file>BenchmarkTest00472.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00472" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00472.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00472" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00472.java"></endNode>
  </finding>


  <finding id="1596" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00473</class>
    <file>BenchmarkTest00473.java</file>
    <line>61</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00473" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00473.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00473" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00473.java"></endNode>
  </finding>


  <finding id="1620" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00475</class>
    <file>BenchmarkTest00475.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00475" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00475.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00475" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00475.java"></endNode>
  </finding>


  <finding id="1663" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00477</class>
    <file>BenchmarkTest00477.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00477" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00477.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00477" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00477.java"></endNode>
  </finding>


  <finding id="1755" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00478</class>
    <file>BenchmarkTest00478.java</file>
    <line>60</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00478" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00478.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00478" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00478.java"></endNode>
  </finding>


  <finding id="729" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00480</class>
    <file>BenchmarkTest00480.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00480" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00480.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00480" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00480.java"></endNode>
  </finding>


  <finding id="189" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00482</class>
    <file>BenchmarkTest00482.java</file>
    <line>56</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00482" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00482.java"></node>
  </finding>


  <finding id="34" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00483</class>
    <file>BenchmarkTest00483.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00483" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00483.java"></node>
  </finding>


  <finding id="55" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00484</class>
    <file>BenchmarkTest00484.java</file>
    <line>61</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00484" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00484.java"></node>
  </finding>


  <finding id="71" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00485</class>
    <file>BenchmarkTest00485.java</file>
    <line>56</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00485" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00485.java"></node>
  </finding>


  <finding id="133" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00486</class>
    <file>BenchmarkTest00486.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00486" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00486.java"></node>
  </finding>


  <finding id="198" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00487</class>
    <file>BenchmarkTest00487.java</file>
    <line>60</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00487" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00487.java"></node>
  </finding>


  <finding id="157" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00488</class>
    <file>BenchmarkTest00488.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00488" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00488.java"></node>
  </finding>


  <finding id="111" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00489</class>
    <file>BenchmarkTest00489.java</file>
    <line>60</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00489" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00489.java"></node>
  </finding>


  <finding id="191" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00490</class>
    <file>BenchmarkTest00490.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00490" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00490.java"></node>
  </finding>


  <finding id="1197" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00491</class>
    <file>BenchmarkTest00491.java</file>
    <line>80</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00491" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00491" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"></endNode>
  </finding>


  <finding id="1887" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00491</class>
    <file>BenchmarkTest00491.java</file>
    <line>74</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00491" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00491" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00491.java"></endNode>
  </finding>


  <finding id="1642" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00492</class>
    <file>BenchmarkTest00492.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00492" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00492.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00492" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00492.java"></endNode>
  </finding>


  <finding id="805" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00494</class>
    <file>BenchmarkTest00494.java</file>
    <line>86</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00494" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00494.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00494" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00494.java"></endNode>
  </finding>


  <finding id="844" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00495</class>
    <file>BenchmarkTest00495.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00495" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00495.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00495" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00495.java"></endNode>
  </finding>


  <finding id="821" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00496</class>
    <file>BenchmarkTest00496.java</file>
    <line>66</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00496" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00496.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00496" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00496.java"></endNode>
  </finding>


  <finding id="785" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00497</class>
    <file>BenchmarkTest00497.java</file>
    <line>81</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00497" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00497.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00497" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00497.java"></endNode>
  </finding>


  <finding id="802" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00498</class>
    <file>BenchmarkTest00498.java</file>
    <line>66</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00498" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00498.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00498" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00498.java"></endNode>
  </finding>


  <finding id="1360" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00498</class>
    <file>BenchmarkTest00498.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00498" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00498.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00498" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00498.java"></endNode>
  </finding>


  <finding id="816" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00499</class>
    <file>BenchmarkTest00499.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00499" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00499.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00499" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00499.java"></endNode>
  </finding>


  <finding id="808" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00500</class>
    <file>BenchmarkTest00500.java</file>
    <line>71</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00500" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00500.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00500" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00500.java"></endNode>
  </finding>


  <finding id="1368" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00500</class>
    <file>BenchmarkTest00500.java</file>
    <line>71</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00500" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00500.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00500" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00500.java"></endNode>
  </finding>


  <finding id="1477" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00508</class>
    <file>BenchmarkTest00508.java</file>
    <line>57</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00508" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00508.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00508" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00508.java"></endNode>
  </finding>


  <finding id="944" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00510</class>
    <file>BenchmarkTest00510.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00510" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00510" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00510.java"></endNode>
  </finding>


  <finding id="1137" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00512</class>
    <file>BenchmarkTest00512.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00512" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00512" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00512.java"></endNode>
  </finding>


  <finding id="869" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00515</class>
    <file>BenchmarkTest00515.java</file>
    <line>69</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00515" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00515" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00515.java"></endNode>
  </finding>


  <finding id="889" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00516</class>
    <file>BenchmarkTest00516.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00516" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00516" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00516.java"></endNode>
  </finding>


  <finding id="921" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00518</class>
    <file>BenchmarkTest00518.java</file>
    <line>60</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00518" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00518" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00518.java"></endNode>
  </finding>


  <finding id="284" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00521</class>
    <file>BenchmarkTest00521.java</file>
    <line>81</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00521" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java"></node>
  </finding>


  <finding id="285" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00521</class>
    <file>BenchmarkTest00521.java</file>
    <line>84</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00521" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00521.java"></node>
  </finding>


  <finding id="286" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00522</class>
    <file>BenchmarkTest00522.java</file>
    <line>81</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00522" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java"></node>
  </finding>


  <finding id="287" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00522</class>
    <file>BenchmarkTest00522.java</file>
    <line>83</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00522" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00522.java"></node>
  </finding>


  <finding id="288" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00524</class>
    <file>BenchmarkTest00524.java</file>
    <line>91</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="91" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00524" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00524.java"></node>
  </finding>


  <finding id="1418" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00525</class>
    <file>BenchmarkTest00525.java</file>
    <line>74</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00525" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00525.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00525" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00525.java"></endNode>
  </finding>


  <finding id="1283" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00526</class>
    <file>BenchmarkTest00526.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00526" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00526.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00526" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00526.java"></endNode>
  </finding>


  <finding id="1291" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00527</class>
    <file>BenchmarkTest00527.java</file>
    <line>65</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00527" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00527.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00527" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00527.java"></endNode>
  </finding>


  <finding id="1303" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00528</class>
    <file>BenchmarkTest00528.java</file>
    <line>80</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00528" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00528.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00528" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00528.java"></endNode>
  </finding>


  <finding id="1372" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00529</class>
    <file>BenchmarkTest00529.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00529" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00529.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00529" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00529.java"></endNode>
  </finding>


  <finding id="543" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00531</class>
    <file>BenchmarkTest00531.java</file>
    <line>75</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00531" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java"></node>
  </finding>


  <finding id="544" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00531</class>
    <file>BenchmarkTest00531.java</file>
    <line>77</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00531" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00531.java"></node>
  </finding>


  <finding id="545" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00532</class>
    <file>BenchmarkTest00532.java</file>
    <line>78</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00532" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00532.java"></node>
  </finding>


  <finding id="546" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00533</class>
    <file>BenchmarkTest00533.java</file>
    <line>75</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00533" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00533.java"></node>
  </finding>


  <finding id="547" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00534</class>
    <file>BenchmarkTest00534.java</file>
    <line>84</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00534" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00534.java"></node>
  </finding>


  <finding id="548" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00536</class>
    <file>BenchmarkTest00536.java</file>
    <line>70</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00536" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00536.java"></node>
  </finding>


  <finding id="549" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00537</class>
    <file>BenchmarkTest00537.java</file>
    <line>65</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00537" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00537.java"></node>
  </finding>


  <finding id="550" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00540</class>
    <file>BenchmarkTest00540.java</file>
    <line>74</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00540" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00540.java"></node>
  </finding>


  <finding id="1812" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00541</class>
    <file>BenchmarkTest00541.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00541" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00541.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00541" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00541.java"></endNode>
  </finding>


  <finding id="1622" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00542</class>
    <file>BenchmarkTest00542.java</file>
    <line>85</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00542" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00542.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00542" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00542.java"></endNode>
  </finding>


  <finding id="1648" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00543</class>
    <file>BenchmarkTest00543.java</file>
    <line>76</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00543" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00543.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00543" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00543.java"></endNode>
  </finding>


  <finding id="1670" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00544</class>
    <file>BenchmarkTest00544.java</file>
    <line>75</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00544" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00544.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00544" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00544.java"></endNode>
  </finding>


  <finding id="1840" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00546</class>
    <file>BenchmarkTest00546.java</file>
    <line>75</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00546" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00546.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00546" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00546.java"></endNode>
  </finding>


  <finding id="1725" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00547</class>
    <file>BenchmarkTest00547.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00547" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00547.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00547" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00547.java"></endNode>
  </finding>


  <finding id="1734" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00549</class>
    <file>BenchmarkTest00549.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00549" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00549.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00549" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00549.java"></endNode>
  </finding>


  <finding id="1624" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00550</class>
    <file>BenchmarkTest00550.java</file>
    <line>75</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00550" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00550.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00550" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00550.java"></endNode>
  </finding>


  <finding id="1645" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00551</class>
    <file>BenchmarkTest00551.java</file>
    <line>65</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00551" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00551.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00551" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00551.java"></endNode>
  </finding>


  <finding id="1669" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00552</class>
    <file>BenchmarkTest00552.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00552" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00552.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00552" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00552.java"></endNode>
  </finding>


  <finding id="1845" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00554</class>
    <file>BenchmarkTest00554.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00554" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00554.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00554" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00554.java"></endNode>
  </finding>


  <finding id="1723" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00555</class>
    <file>BenchmarkTest00555.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00555" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00555.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00555" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00555.java"></endNode>
  </finding>


  <finding id="1729" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00557</class>
    <file>BenchmarkTest00557.java</file>
    <line>69</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00557" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00557.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00557" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00557.java"></endNode>
  </finding>


  <finding id="803" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00558</class>
    <file>BenchmarkTest00558.java</file>
    <line>86</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00558" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00558.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00558" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00558.java"></endNode>
  </finding>


  <finding id="75" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00560</class>
    <file>BenchmarkTest00560.java</file>
    <line>70</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00560" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00560.java"></node>
  </finding>


  <finding id="142" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00561</class>
    <file>BenchmarkTest00561.java</file>
    <line>74</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00561" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00561.java"></node>
  </finding>


  <finding id="218" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00562</class>
    <file>BenchmarkTest00562.java</file>
    <line>83</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00562" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00562.java"></node>
  </finding>


  <finding id="148" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00563</class>
    <file>BenchmarkTest00563.java</file>
    <line>64</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00563" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00563.java"></node>
  </finding>


  <finding id="103" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00564</class>
    <file>BenchmarkTest00564.java</file>
    <line>65</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00564" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00564.java"></node>
  </finding>


  <finding id="1212" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00565</class>
    <file>BenchmarkTest00565.java</file>
    <line>85</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"></endNode>
  </finding>


  <finding id="1905" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00565</class>
    <file>BenchmarkTest00565.java</file>
    <line>79</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"></startNode>
    <endNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00565.java"></endNode>
  </finding>


  <finding id="1214" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00566</class>
    <file>BenchmarkTest00566.java</file>
    <line>86</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00566" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00566" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"></endNode>
  </finding>


  <finding id="1912" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00566</class>
    <file>BenchmarkTest00566.java</file>
    <line>80</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00566" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00566" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00566.java"></endNode>
  </finding>


  <finding id="850" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00567</class>
    <file>BenchmarkTest00567.java</file>
    <line>77</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00567" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00567.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00567" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00567.java"></endNode>
  </finding>


  <finding id="829" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00568</class>
    <file>BenchmarkTest00568.java</file>
    <line>88</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00568" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00568.java"></startNode>
    <endNode lineNo="88" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00568" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00568.java"></endNode>
  </finding>


  <finding id="855" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00570</class>
    <file>BenchmarkTest00570.java</file>
    <line>81</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00570.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00570.java"></endNode>
  </finding>


  <finding id="1440" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00570</class>
    <file>BenchmarkTest00570.java</file>
    <line>81</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00570.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00570.java"></endNode>
  </finding>


  <finding id="1376" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00571</class>
    <file>BenchmarkTest00571.java</file>
    <line>77</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00571" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00571.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00571" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00571.java"></endNode>
  </finding>


  <finding id="794" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00573</class>
    <file>BenchmarkTest00573.java</file>
    <line>70</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00573" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00573.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00573" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00573.java"></endNode>
  </finding>


  <finding id="811" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00574</class>
    <file>BenchmarkTest00574.java</file>
    <line>76</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00574" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00574.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00574" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00574.java"></endNode>
  </finding>


  <finding id="851" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00575</class>
    <file>BenchmarkTest00575.java</file>
    <line>84</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00575" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00575.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00575" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00575.java"></endNode>
  </finding>


  <finding id="1433" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00575</class>
    <file>BenchmarkTest00575.java</file>
    <line>84</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00575" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00575.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00575" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00575.java"></endNode>
  </finding>


  <finding id="832" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00576</class>
    <file>BenchmarkTest00576.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00576" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00576.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00576" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00576.java"></endNode>
  </finding>


  <finding id="1393" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00576</class>
    <file>BenchmarkTest00576.java</file>
    <line>75</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00576" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00576.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00576" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00576.java"></endNode>
  </finding>


  <finding id="1490" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00587</class>
    <file>BenchmarkTest00587.java</file>
    <line>70</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00587" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00587.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00587" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00587.java"></endNode>
  </finding>


  <finding id="1474" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00588</class>
    <file>BenchmarkTest00588.java</file>
    <line>68</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00588" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00588.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00588" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00588.java"></endNode>
  </finding>


  <finding id="872" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00589</class>
    <file>BenchmarkTest00589.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00589" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00589.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00589" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00589.java"></endNode>
  </finding>


  <finding id="1047" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00590</class>
    <file>BenchmarkTest00590.java</file>
    <line>74</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00590" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00590" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00590.java"></endNode>
  </finding>


  <finding id="1151" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00591</class>
    <file>BenchmarkTest00591.java</file>
    <line>69</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00591" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00591" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00591.java"></endNode>
  </finding>


  <finding id="964" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00593</class>
    <file>BenchmarkTest00593.java</file>
    <line>87</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00593" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"></startNode>
    <endNode lineNo="87" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00593" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00593.java"></endNode>
  </finding>


  <finding id="981" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00594</class>
    <file>BenchmarkTest00594.java</file>
    <line>73</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00594" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00594" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00594.java"></endNode>
  </finding>


  <finding id="930" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00595</class>
    <file>BenchmarkTest00595.java</file>
    <line>74</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00595" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00595" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00595.java"></endNode>
  </finding>


  <finding id="881" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00596</class>
    <file>BenchmarkTest00596.java</file>
    <line>76</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00596" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00596" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00596.java"></endNode>
  </finding>


  <finding id="870" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00597</class>
    <file>BenchmarkTest00597.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00597" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00597" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00597.java"></endNode>
  </finding>


  <finding id="886" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00598</class>
    <file>BenchmarkTest00598.java</file>
    <line>70</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00598" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00598.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00598" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00598.java"></endNode>
  </finding>


  <finding id="1152" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00600</class>
    <file>BenchmarkTest00600.java</file>
    <line>86</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00600" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00600" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00600.java"></endNode>
  </finding>


  <finding id="967" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00602</class>
    <file>BenchmarkTest00602.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00602" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00602.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00602" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00602.java"></endNode>
  </finding>


  <finding id="952" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00603</class>
    <file>BenchmarkTest00603.java</file>
    <line>69</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00603" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00603" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00603.java"></endNode>
  </finding>


  <finding id="1068" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00604</class>
    <file>BenchmarkTest00604.java</file>
    <line>72</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00604" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00604.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00604" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00604.java"></endNode>
  </finding>


  <finding id="1027" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00606</class>
    <file>BenchmarkTest00606.java</file>
    <line>74</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00606" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00606" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00606.java"></endNode>
  </finding>


  <finding id="1185" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00607</class>
    <file>BenchmarkTest00607.java</file>
    <line>81</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00607" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00607" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"></endNode>
  </finding>


  <finding id="1712" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00607</class>
    <file>BenchmarkTest00607.java</file>
    <line>80</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00607" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00607" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00607.java"></endNode>
  </finding>


  <finding id="289" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00608</class>
    <file>BenchmarkTest00608.java</file>
    <line>72</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00608" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java"></node>
  </finding>


  <finding id="290" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00608</class>
    <file>BenchmarkTest00608.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00608" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00608.java"></node>
  </finding>


  <finding id="291" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00609</class>
    <file>BenchmarkTest00609.java</file>
    <line>63</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00609" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java"></node>
  </finding>


  <finding id="292" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00609</class>
    <file>BenchmarkTest00609.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00609" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00609.java"></node>
  </finding>


  <finding id="293" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00610</class>
    <file>BenchmarkTest00610.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java"></node>
  </finding>


  <finding id="294" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00610</class>
    <file>BenchmarkTest00610.java</file>
    <line>79</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00610.java"></node>
  </finding>


  <finding id="295" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00611</class>
    <file>BenchmarkTest00611.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00611" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java"></node>
  </finding>


  <finding id="296" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00611</class>
    <file>BenchmarkTest00611.java</file>
    <line>71</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00611" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00611.java"></node>
  </finding>


  <finding id="297" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00614</class>
    <file>BenchmarkTest00614.java</file>
    <line>72</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00614" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java"></node>
  </finding>


  <finding id="298" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00614</class>
    <file>BenchmarkTest00614.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00614" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00614.java"></node>
  </finding>


  <finding id="299" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00615</class>
    <file>BenchmarkTest00615.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00615" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java"></node>
  </finding>


  <finding id="300" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00615</class>
    <file>BenchmarkTest00615.java</file>
    <line>71</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00615" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00615.java"></node>
  </finding>


  <finding id="301" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00616</class>
    <file>BenchmarkTest00616.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00616" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java"></node>
  </finding>


  <finding id="302" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00616</class>
    <file>BenchmarkTest00616.java</file>
    <line>58</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00616" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00616.java"></node>
  </finding>


  <finding id="303" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00617</class>
    <file>BenchmarkTest00617.java</file>
    <line>56</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00617" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java"></node>
  </finding>


  <finding id="304" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00617</class>
    <file>BenchmarkTest00617.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00617" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00617.java"></node>
  </finding>


  <finding id="305" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00618</class>
    <file>BenchmarkTest00618.java</file>
    <line>71</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00618" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00618.java"></node>
  </finding>


  <finding id="1456" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00619</class>
    <file>BenchmarkTest00619.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00619" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00619.java"></endNode>
  </finding>


  <finding id="1458" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00620</class>
    <file>BenchmarkTest00620.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00620" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00620.java"></endNode>
  </finding>


  <finding id="1454" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00623</class>
    <file>BenchmarkTest00623.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00623" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00623.java"></endNode>
  </finding>


  <finding id="1444" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00624</class>
    <file>BenchmarkTest00624.java</file>
    <line>58</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00624" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00624.java"></endNode>
  </finding>


  <finding id="1451" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00626</class>
    <file>BenchmarkTest00626.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00626" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00626.java"></endNode>
  </finding>


  <finding id="1447" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00627</class>
    <file>BenchmarkTest00627.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00627" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00627.java"></endNode>
  </finding>


  <finding id="1452" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00629</class>
    <file>BenchmarkTest00629.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
static java.nio.file.Path java.nio.file.Paths.get(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00629" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00629.java"></endNode>
  </finding>


  <finding id="1470" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00629</class>
    <file>BenchmarkTest00629.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
static java.io.InputStream java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00629" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00629.java"></endNode>
  </finding>


  <finding id="721" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00630</class>
    <file>BenchmarkTest00630.java</file>
    <line>82</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00630" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00630.java"></endNode>
  </finding>


  <finding id="1874" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00630</class>
    <file>BenchmarkTest00630.java</file>
    <line>91</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="91" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00630" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00630.java"></endNode>
  </finding>


  <finding id="551" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00631</class>
    <file>BenchmarkTest00631.java</file>
    <line>58</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00631" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java"></node>
  </finding>


  <finding id="552" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00631</class>
    <file>BenchmarkTest00631.java</file>
    <line>60</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00631" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00631.java"></node>
  </finding>


  <finding id="553" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00634</class>
    <file>BenchmarkTest00634.java</file>
    <line>62</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00634" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00634.java"></node>
  </finding>


  <finding id="554" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00635</class>
    <file>BenchmarkTest00635.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00635" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00635.java"></node>
  </finding>


  <finding id="555" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00636</class>
    <file>BenchmarkTest00636.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00636" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00636.java"></node>
  </finding>


  <finding id="556" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00637</class>
    <file>BenchmarkTest00637.java</file>
    <line>58</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00637" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00637.java"></node>
  </finding>


  <finding id="557" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00638</class>
    <file>BenchmarkTest00638.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00638" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00638.java"></node>
  </finding>


  <finding id="558" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00639</class>
    <file>BenchmarkTest00639.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00639" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00639.java"></node>
  </finding>


  <finding id="559" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00640</class>
    <file>BenchmarkTest00640.java</file>
    <line>61</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00640" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00640.java"></node>
  </finding>


  <finding id="560" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00641</class>
    <file>BenchmarkTest00641.java</file>
    <line>61</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00641" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00641.java"></node>
  </finding>


  <finding id="1859" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00642</class>
    <file>BenchmarkTest00642.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00642" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00642.java"></endNode>
  </finding>


  <finding id="1851" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00643</class>
    <file>BenchmarkTest00643.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00643" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00643.java"></endNode>
  </finding>


  <finding id="1847" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00644</class>
    <file>BenchmarkTest00644.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00644" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00644.java"></endNode>
  </finding>


  <finding id="1873" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00645</class>
    <file>BenchmarkTest00645.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00645" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00645.java"></endNode>
  </finding>


  <finding id="1850" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00646</class>
    <file>BenchmarkTest00646.java</file>
    <line>62</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00646" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00646.java"></endNode>
  </finding>


  <finding id="1856" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00651</class>
    <file>BenchmarkTest00651.java</file>
    <line>61</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00651" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00651.java"></endNode>
  </finding>


  <finding id="54" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00652</class>
    <file>BenchmarkTest00652.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00652" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00652.java"></node>
  </finding>


  <finding id="89" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00653</class>
    <file>BenchmarkTest00653.java</file>
    <line>57</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00653" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00653.java"></node>
  </finding>


  <finding id="24" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00654</class>
    <file>BenchmarkTest00654.java</file>
    <line>61</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00654" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00654.java"></node>
  </finding>


  <finding id="1932" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00655</class>
    <file>BenchmarkTest00655.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00655" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00655.java"></endNode>
  </finding>


  <finding id="1848" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00656</class>
    <file>BenchmarkTest00656.java</file>
    <line>58</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00656" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00656.java"></endNode>
  </finding>


  <finding id="1267" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00659</class>
    <file>BenchmarkTest00659.java</file>
    <line>80</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00659" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00659.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00659" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00659.java"></endNode>
  </finding>


  <finding id="1565" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00668</class>
    <file>BenchmarkTest00668.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00668" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00668.java"></endNode>
  </finding>


  <finding id="1561" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00670</class>
    <file>BenchmarkTest00670.java</file>
    <line>56</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00670" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00670.java"></endNode>
  </finding>


  <finding id="1560" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00671</class>
    <file>BenchmarkTest00671.java</file>
    <line>58</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00671" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00671.java"></endNode>
  </finding>


  <finding id="1169" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00673</class>
    <file>BenchmarkTest00673.java</file>
    <line>61</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00673" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00673.java"></endNode>
  </finding>


  <finding id="1172" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00677</class>
    <file>BenchmarkTest00677.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00677" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00677.java"></endNode>
  </finding>


  <finding id="1167" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00678</class>
    <file>BenchmarkTest00678.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00678" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00678.java"></endNode>
  </finding>


  <finding id="1176" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00679</class>
    <file>BenchmarkTest00679.java</file>
    <line>54</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00679" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00679.java"></endNode>
  </finding>


  <finding id="1161" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00681</class>
    <file>BenchmarkTest00681.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00681" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00681.java"></endNode>
  </finding>


  <finding id="306" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00684</class>
    <file>BenchmarkTest00684.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00684" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java"></node>
  </finding>


  <finding id="307" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00684</class>
    <file>BenchmarkTest00684.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00684" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00684.java"></node>
  </finding>


  <finding id="308" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00685</class>
    <file>BenchmarkTest00685.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00685" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java"></node>
  </finding>


  <finding id="309" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00685</class>
    <file>BenchmarkTest00685.java</file>
    <line>71</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00685" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00685.java"></node>
  </finding>


  <finding id="310" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00688</class>
    <file>BenchmarkTest00688.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00688" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java"></node>
  </finding>


  <finding id="311" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00688</class>
    <file>BenchmarkTest00688.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00688" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00688.java"></node>
  </finding>


  <finding id="312" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00691</class>
    <file>BenchmarkTest00691.java</file>
    <line>74</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00691" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java"></node>
  </finding>


  <finding id="313" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00691</class>
    <file>BenchmarkTest00691.java</file>
    <line>77</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00691" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00691.java"></node>
  </finding>


  <finding id="314" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00692</class>
    <file>BenchmarkTest00692.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00692" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"></node>
  </finding>


  <finding id="315" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00692</class>
    <file>BenchmarkTest00692.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00692" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00692.java"></node>
  </finding>


  <finding id="316" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00693</class>
    <file>BenchmarkTest00693.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00693" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"></node>
  </finding>


  <finding id="317" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00693</class>
    <file>BenchmarkTest00693.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00693" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00693.java"></node>
  </finding>


  <finding id="712" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00694</class>
    <file>BenchmarkTest00694.java</file>
    <line>63</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00694" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00694" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"></endNode>
  </finding>


  <finding id="1763" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00694</class>
    <file>BenchmarkTest00694.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00694" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00694" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00694.java"></endNode>
  </finding>


  <finding id="700" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00695</class>
    <file>BenchmarkTest00695.java</file>
    <line>68</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00695" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00695.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00695" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00695.java"></endNode>
  </finding>


  <finding id="1676" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00695</class>
    <file>BenchmarkTest00695.java</file>
    <line>76</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00695" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00695.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00695" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00695.java"></endNode>
  </finding>


  <finding id="1350" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00696</class>
    <file>BenchmarkTest00696.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00696" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00696.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00696" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00696.java"></endNode>
  </finding>


  <finding id="1342" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00697</class>
    <file>BenchmarkTest00697.java</file>
    <line>57</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00697" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00697.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00697" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00697.java"></endNode>
  </finding>


  <finding id="1435" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00698</class>
    <file>BenchmarkTest00698.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00698" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00698.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00698" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00698.java"></endNode>
  </finding>


  <finding id="1346" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00700</class>
    <file>BenchmarkTest00700.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00700" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00700" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00700.java"></endNode>
  </finding>


  <finding id="200" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00702</class>
    <file>BenchmarkTest00702.java</file>
    <line>57</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00702" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00702.java"></node>
  </finding>


  <finding id="561" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00703</class>
    <file>BenchmarkTest00703.java</file>
    <line>69</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00703" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java"></node>
  </finding>


  <finding id="562" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00703</class>
    <file>BenchmarkTest00703.java</file>
    <line>71</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00703" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00703.java"></node>
  </finding>


  <finding id="563" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00704</class>
    <file>BenchmarkTest00704.java</file>
    <line>62</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00704" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java"></node>
  </finding>


  <finding id="564" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00704</class>
    <file>BenchmarkTest00704.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00704" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00704.java"></node>
  </finding>


  <finding id="565" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00705</class>
    <file>BenchmarkTest00705.java</file>
    <line>60</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00705" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00705.java"></node>
  </finding>


  <finding id="566" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00708</class>
    <file>BenchmarkTest00708.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00708" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00708.java"></node>
  </finding>


  <finding id="567" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00710</class>
    <file>BenchmarkTest00710.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00710" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00710.java"></node>
  </finding>


  <finding id="1778" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00711</class>
    <file>BenchmarkTest00711.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00711" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00711.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00711" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00711.java"></endNode>
  </finding>


  <finding id="1837" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00715</class>
    <file>BenchmarkTest00715.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00715" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00715.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00715" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00715.java"></endNode>
  </finding>


  <finding id="1615" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00719</class>
    <file>BenchmarkTest00719.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00719" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00719.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00719" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00719.java"></endNode>
  </finding>


  <finding id="1647" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00720</class>
    <file>BenchmarkTest00720.java</file>
    <line>74</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00720" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00720.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00720" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00720.java"></endNode>
  </finding>


  <finding id="1662" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00721</class>
    <file>BenchmarkTest00721.java</file>
    <line>65</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00721" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00721.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00721" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00721.java"></endNode>
  </finding>


  <finding id="1567" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00724</class>
    <file>BenchmarkTest00724.java</file>
    <line>73</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00724" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00724.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00724" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00724.java"></endNode>
  </finding>


  <finding id="1583" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00725</class>
    <file>BenchmarkTest00725.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00725" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00725.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00725" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00725.java"></endNode>
  </finding>


  <finding id="1794" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00727</class>
    <file>BenchmarkTest00727.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00727" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00727.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00727" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00727.java"></endNode>
  </finding>


  <finding id="1786" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00728</class>
    <file>BenchmarkTest00728.java</file>
    <line>60</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00728" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00728.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00728" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00728.java"></endNode>
  </finding>


  <finding id="1768" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00729</class>
    <file>BenchmarkTest00729.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00729" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00729.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00729" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00729.java"></endNode>
  </finding>


  <finding id="849" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00731</class>
    <file>BenchmarkTest00731.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00731" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00731.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00731" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00731.java"></endNode>
  </finding>


  <finding id="11" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00733</class>
    <file>BenchmarkTest00733.java</file>
    <line>54</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00733" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00733.java"></node>
  </finding>


  <finding id="21" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00734</class>
    <file>BenchmarkTest00734.java</file>
    <line>72</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00734" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00734.java"></node>
  </finding>


  <finding id="178" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00735</class>
    <file>BenchmarkTest00735.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00735" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00735.java"></node>
  </finding>


  <finding id="1219" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00736</class>
    <file>BenchmarkTest00736.java</file>
    <line>80</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"></endNode>
  </finding>


  <finding id="1919" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00736</class>
    <file>BenchmarkTest00736.java</file>
    <line>74</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00736.java"></endNode>
  </finding>


  <finding id="1771" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00737</class>
    <file>BenchmarkTest00737.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00737" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00737.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00737" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00737.java"></endNode>
  </finding>


  <finding id="723" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00740</class>
    <file>BenchmarkTest00740.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00740" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00740.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00740" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00740.java"></endNode>
  </finding>


  <finding id="730" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00741</class>
    <file>BenchmarkTest00741.java</file>
    <line>73</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00741" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00741.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00741" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00741.java"></endNode>
  </finding>


  <finding id="1253" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00742</class>
    <file>BenchmarkTest00742.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00742" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00742.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00742" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00742.java"></endNode>
  </finding>


  <finding id="1400" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00743</class>
    <file>BenchmarkTest00743.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00743" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00743.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00743" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00743.java"></endNode>
  </finding>


  <finding id="1505" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00754</class>
    <file>BenchmarkTest00754.java</file>
    <line>59</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00754" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00754.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00754" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00754.java"></endNode>
  </finding>


  <finding id="1517" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00756</class>
    <file>BenchmarkTest00756.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00756" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00756.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00756" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00756.java"></endNode>
  </finding>


  <finding id="1551" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00757</class>
    <file>BenchmarkTest00757.java</file>
    <line>73</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00757" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00757.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00757" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00757.java"></endNode>
  </finding>


  <finding id="1535" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00758</class>
    <file>BenchmarkTest00758.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00758" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00758.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00758" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00758.java"></endNode>
  </finding>


  <finding id="1502" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00759</class>
    <file>BenchmarkTest00759.java</file>
    <line>57</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00759" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00759.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00759" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00759.java"></endNode>
  </finding>


  <finding id="1087" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00760</class>
    <file>BenchmarkTest00760.java</file>
    <line>62</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00760" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00760" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00760.java"></endNode>
  </finding>


  <finding id="1075" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00761</class>
    <file>BenchmarkTest00761.java</file>
    <line>76</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00761" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00761" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00761.java"></endNode>
  </finding>


  <finding id="978" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00762</class>
    <file>BenchmarkTest00762.java</file>
    <line>63</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00762" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00762" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00762.java"></endNode>
  </finding>


  <finding id="1017" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00764</class>
    <file>BenchmarkTest00764.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00764" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00764" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00764.java"></endNode>
  </finding>


  <finding id="1154" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00765</class>
    <file>BenchmarkTest00765.java</file>
    <line>56</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00765" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00765" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00765.java"></endNode>
  </finding>


  <finding id="968" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00767</class>
    <file>BenchmarkTest00767.java</file>
    <line>74</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00767" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00767" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00767.java"></endNode>
  </finding>


  <finding id="955" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00768</class>
    <file>BenchmarkTest00768.java</file>
    <line>56</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00768" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00768" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00768.java"></endNode>
  </finding>


  <finding id="1084" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00769</class>
    <file>BenchmarkTest00769.java</file>
    <line>61</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00769" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00769.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00769" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00769.java"></endNode>
  </finding>


  <finding id="979" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00770</class>
    <file>BenchmarkTest00770.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00770" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00770" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00770.java"></endNode>
  </finding>


  <finding id="1034" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00771</class>
    <file>BenchmarkTest00771.java</file>
    <line>62</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00771" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00771" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00771.java"></endNode>
  </finding>


  <finding id="1156" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00773</class>
    <file>BenchmarkTest00773.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00773" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00773.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00773" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00773.java"></endNode>
  </finding>


  <finding id="318" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00779</class>
    <file>BenchmarkTest00779.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00779" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java"></node>
  </finding>


  <finding id="319" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00779</class>
    <file>BenchmarkTest00779.java</file>
    <line>77</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00779" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00779.java"></node>
  </finding>


  <finding id="320" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00781</class>
    <file>BenchmarkTest00781.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00781" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"></node>
  </finding>


  <finding id="321" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00781</class>
    <file>BenchmarkTest00781.java</file>
    <line>78</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00781" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00781.java"></node>
  </finding>


  <finding id="1309" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00783</class>
    <file>BenchmarkTest00783.java</file>
    <line>74</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00783" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00783.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00783" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00783.java"></endNode>
  </finding>


  <finding id="1387" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00785</class>
    <file>BenchmarkTest00785.java</file>
    <line>75</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00785" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00785.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00785" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00785.java"></endNode>
  </finding>


  <finding id="1264" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00787</class>
    <file>BenchmarkTest00787.java</file>
    <line>74</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00787" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00787" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00787.java"></endNode>
  </finding>


  <finding id="1248" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00788</class>
    <file>BenchmarkTest00788.java</file>
    <line>71</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00788" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00788" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00788.java"></endNode>
  </finding>


  <finding id="568" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00789</class>
    <file>BenchmarkTest00789.java</file>
    <line>69</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00789" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00789.java"></node>
  </finding>


  <finding id="569" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00790</class>
    <file>BenchmarkTest00790.java</file>
    <line>65</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00790" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00790.java"></node>
  </finding>


  <finding id="570" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00794</class>
    <file>BenchmarkTest00794.java</file>
    <line>68</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00794" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00794.java"></node>
  </finding>


  <finding id="571" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00796</class>
    <file>BenchmarkTest00796.java</file>
    <line>73</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00796" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00796.java"></node>
  </finding>


  <finding id="572" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00797</class>
    <file>BenchmarkTest00797.java</file>
    <line>72</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00797" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00797.java"></node>
  </finding>


  <finding id="573" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00798</class>
    <file>BenchmarkTest00798.java</file>
    <line>72</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00798" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00798.java"></node>
  </finding>


  <finding id="1825" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00799</class>
    <file>BenchmarkTest00799.java</file>
    <line>78</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00799" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00799.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00799" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00799.java"></endNode>
  </finding>


  <finding id="1593" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00800</class>
    <file>BenchmarkTest00800.java</file>
    <line>85</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00800" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00800.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00800" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00800.java"></endNode>
  </finding>


  <finding id="1682" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00801</class>
    <file>BenchmarkTest00801.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00801" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00801.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00801" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00801.java"></endNode>
  </finding>


  <finding id="1606" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00802</class>
    <file>BenchmarkTest00802.java</file>
    <line>69</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00802" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00802.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00802" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00802.java"></endNode>
  </finding>


  <finding id="1836" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00803</class>
    <file>BenchmarkTest00803.java</file>
    <line>65</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00803" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00803.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00803" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00803.java"></endNode>
  </finding>


  <finding id="1787" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00804</class>
    <file>BenchmarkTest00804.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00804" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00804.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00804" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00804.java"></endNode>
  </finding>


  <finding id="1659" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00805</class>
    <file>BenchmarkTest00805.java</file>
    <line>78</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00805" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00805.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00805" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00805.java"></endNode>
  </finding>


  <finding id="1674" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00806</class>
    <file>BenchmarkTest00806.java</file>
    <line>76</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00806" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00806.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00806" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00806.java"></endNode>
  </finding>


  <finding id="1764" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00807</class>
    <file>BenchmarkTest00807.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00807" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00807.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00807" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00807.java"></endNode>
  </finding>


  <finding id="1727" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00808</class>
    <file>BenchmarkTest00808.java</file>
    <line>76</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00808" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00808.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00808" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00808.java"></endNode>
  </finding>


  <finding id="1741" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00809</class>
    <file>BenchmarkTest00809.java</file>
    <line>72</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00809" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00809.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00809" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00809.java"></endNode>
  </finding>


  <finding id="1609" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00810</class>
    <file>BenchmarkTest00810.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00810" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00810.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00810" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00810.java"></endNode>
  </finding>


  <finding id="1835" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00811</class>
    <file>BenchmarkTest00811.java</file>
    <line>84</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00811" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00811.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00811" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00811.java"></endNode>
  </finding>


  <finding id="824" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00815</class>
    <file>BenchmarkTest00815.java</file>
    <line>78</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00815" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00815.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00815" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00815.java"></endNode>
  </finding>


  <finding id="790" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00816</class>
    <file>BenchmarkTest00816.java</file>
    <line>83</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00816" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00816.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00816" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00816.java"></endNode>
  </finding>


  <finding id="124" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00817</class>
    <file>BenchmarkTest00817.java</file>
    <line>77</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00817" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00817.java"></node>
  </finding>


  <finding id="141" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00818</class>
    <file>BenchmarkTest00818.java</file>
    <line>67</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00818" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00818.java"></node>
  </finding>


  <finding id="95" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00819</class>
    <file>BenchmarkTest00819.java</file>
    <line>70</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00819" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00819.java"></node>
  </finding>


  <finding id="1218" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00820</class>
    <file>BenchmarkTest00820.java</file>
    <line>85</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00820" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00820" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"></endNode>
  </finding>


  <finding id="1918" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00820</class>
    <file>BenchmarkTest00820.java</file>
    <line>79</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00820" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"></startNode>
    <endNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00820" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00820.java"></endNode>
  </finding>


  <finding id="1201" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00821</class>
    <file>BenchmarkTest00821.java</file>
    <line>86</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00821" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00821" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"></endNode>
  </finding>


  <finding id="1892" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00821</class>
    <file>BenchmarkTest00821.java</file>
    <line>80</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00821" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00821" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00821.java"></endNode>
  </finding>


  <finding id="1675" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00822</class>
    <file>BenchmarkTest00822.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00822" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00822.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00822" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00822.java"></endNode>
  </finding>


  <finding id="828" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00823</class>
    <file>BenchmarkTest00823.java</file>
    <line>81</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00823" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00823.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00823" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00823.java"></endNode>
  </finding>


  <finding id="791" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00824</class>
    <file>BenchmarkTest00824.java</file>
    <line>92</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00824" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00824.java"></startNode>
    <endNode lineNo="92" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00824" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00824.java"></endNode>
  </finding>


  <finding id="1345" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00824</class>
    <file>BenchmarkTest00824.java</file>
    <line>92</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="92" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00824" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00824.java"></startNode>
    <endNode lineNo="92" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00824" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00824.java"></endNode>
  </finding>


  <finding id="801" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00825</class>
    <file>BenchmarkTest00825.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00825" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00825.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00825" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00825.java"></endNode>
  </finding>


  <finding id="1358" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00825</class>
    <file>BenchmarkTest00825.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00825" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00825.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00825" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00825.java"></endNode>
  </finding>


  <finding id="1370" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00826</class>
    <file>BenchmarkTest00826.java</file>
    <line>80</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00826" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00826.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00826" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00826.java"></endNode>
  </finding>


  <finding id="778" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00827</class>
    <file>BenchmarkTest00827.java</file>
    <line>78</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00827" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00827.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00827" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00827.java"></endNode>
  </finding>


  <finding id="1331" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00827</class>
    <file>BenchmarkTest00827.java</file>
    <line>78</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00827" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00827.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00827" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00827.java"></endNode>
  </finding>


  <finding id="1523" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00833</class>
    <file>BenchmarkTest00833.java</file>
    <line>71</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00833" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00833.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00833" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00833.java"></endNode>
  </finding>


  <finding id="1532" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00834</class>
    <file>BenchmarkTest00834.java</file>
    <line>69</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00834" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00834.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00834" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00834.java"></endNode>
  </finding>


  <finding id="1513" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00835</class>
    <file>BenchmarkTest00835.java</file>
    <line>75</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00835" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00835.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00835" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00835.java"></endNode>
  </finding>


  <finding id="1540" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00836</class>
    <file>BenchmarkTest00836.java</file>
    <line>66</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00836" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00836.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00836" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00836.java"></endNode>
  </finding>


  <finding id="901" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00839</class>
    <file>BenchmarkTest00839.java</file>
    <line>74</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00839" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00839" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00839.java"></endNode>
  </finding>


  <finding id="1016" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00840</class>
    <file>BenchmarkTest00840.java</file>
    <line>73</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00840" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00840" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00840.java"></endNode>
  </finding>


  <finding id="1033" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00841</class>
    <file>BenchmarkTest00841.java</file>
    <line>86</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00841" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00841" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00841.java"></endNode>
  </finding>


  <finding id="1053" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00842</class>
    <file>BenchmarkTest00842.java</file>
    <line>76</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00842" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00842" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00842.java"></endNode>
  </finding>


  <finding id="976" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00843</class>
    <file>BenchmarkTest00843.java</file>
    <line>71</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00843" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00843" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00843.java"></endNode>
  </finding>


  <finding id="1074" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00844</class>
    <file>BenchmarkTest00844.java</file>
    <line>76</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **, **)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00844" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00844.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00844" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00844.java"></endNode>
  </finding>


  <finding id="1085" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00845</class>
    <file>BenchmarkTest00845.java</file>
    <line>73</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00845" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00845" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00845.java"></endNode>
  </finding>


  <finding id="1106" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00846</class>
    <file>BenchmarkTest00846.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00846" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00846" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00846.java"></endNode>
  </finding>


  <finding id="899" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00847</class>
    <file>BenchmarkTest00847.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00847" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00847" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00847.java"></endNode>
  </finding>


  <finding id="983" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00848</class>
    <file>BenchmarkTest00848.java</file>
    <line>68</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00848" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00848" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00848.java"></endNode>
  </finding>


  <finding id="884" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00849</class>
    <file>BenchmarkTest00849.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00849" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00849" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00849.java"></endNode>
  </finding>


  <finding id="1055" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00850</class>
    <file>BenchmarkTest00850.java</file>
    <line>78</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00850" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00850" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00850.java"></endNode>
  </finding>


  <finding id="322" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00853</class>
    <file>BenchmarkTest00853.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00853" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java"></node>
  </finding>


  <finding id="323" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00853</class>
    <file>BenchmarkTest00853.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00853" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00853.java"></node>
  </finding>


  <finding id="324" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00855</class>
    <file>BenchmarkTest00855.java</file>
    <line>71</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00855" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java"></node>
  </finding>


  <finding id="325" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00855</class>
    <file>BenchmarkTest00855.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00855" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00855.java"></node>
  </finding>


  <finding id="326" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00856</class>
    <file>BenchmarkTest00856.java</file>
    <line>74</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00856" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java"></node>
  </finding>


  <finding id="327" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00856</class>
    <file>BenchmarkTest00856.java</file>
    <line>77</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00856" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00856.java"></node>
  </finding>


  <finding id="328" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00857</class>
    <file>BenchmarkTest00857.java</file>
    <line>80</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00857" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"></node>
  </finding>


  <finding id="329" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00857</class>
    <file>BenchmarkTest00857.java</file>
    <line>83</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00857" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00857.java"></node>
  </finding>


  <finding id="330" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00859</class>
    <file>BenchmarkTest00859.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00859" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java"></node>
  </finding>


  <finding id="331" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00859</class>
    <file>BenchmarkTest00859.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00859" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00859.java"></node>
  </finding>


  <finding id="574" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00868</class>
    <file>BenchmarkTest00868.java</file>
    <line>69</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00868" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java"></node>
  </finding>


  <finding id="575" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00868</class>
    <file>BenchmarkTest00868.java</file>
    <line>71</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00868" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00868.java"></node>
  </finding>


  <finding id="576" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00869</class>
    <file>BenchmarkTest00869.java</file>
    <line>75</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00869" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java"></node>
  </finding>


  <finding id="577" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00869</class>
    <file>BenchmarkTest00869.java</file>
    <line>77</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00869" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00869.java"></node>
  </finding>


  <finding id="578" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00870</class>
    <file>BenchmarkTest00870.java</file>
    <line>51</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00870" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00870.java"></node>
  </finding>


  <finding id="579" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00871</class>
    <file>BenchmarkTest00871.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00871" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00871.java"></node>
  </finding>


  <finding id="580" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00872</class>
    <file>BenchmarkTest00872.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00872" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00872.java"></node>
  </finding>


  <finding id="581" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00875</class>
    <file>BenchmarkTest00875.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00875" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00875.java"></node>
  </finding>


  <finding id="582" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00876</class>
    <file>BenchmarkTest00876.java</file>
    <line>60</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00876" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00876.java"></node>
  </finding>


  <finding id="583" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00877</class>
    <file>BenchmarkTest00877.java</file>
    <line>67</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00877" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00877.java"></node>
  </finding>


  <finding id="584" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00878</class>
    <file>BenchmarkTest00878.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00878" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00878.java"></node>
  </finding>


  <finding id="99" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00898</class>
    <file>BenchmarkTest00898.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00898" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00898.java"></node>
  </finding>


  <finding id="119" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00899</class>
    <file>BenchmarkTest00899.java</file>
    <line>69</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00899" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00899.java"></node>
  </finding>


  <finding id="110" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00900</class>
    <file>BenchmarkTest00900.java</file>
    <line>69</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00900" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00900.java"></node>
  </finding>


  <finding id="147" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00901</class>
    <file>BenchmarkTest00901.java</file>
    <line>69</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00901" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00901.java"></node>
  </finding>


  <finding id="80" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00902</class>
    <file>BenchmarkTest00902.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00902" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00902.java"></node>
  </finding>


  <finding id="1202" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00903</class>
    <file>BenchmarkTest00903.java</file>
    <line>90</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00903" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00903.java"></startNode>
    <endNode lineNo="90" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00903" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00903.java"></endNode>
  </finding>


  <finding id="1237" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00909</class>
    <file>BenchmarkTest00909.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00909" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00909.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00909" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00909.java"></endNode>
  </finding>


  <finding id="1311" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00910</class>
    <file>BenchmarkTest00910.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00910" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00910.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00910" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00910.java"></endNode>
  </finding>


  <finding id="332" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00945</class>
    <file>BenchmarkTest00945.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00945" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"></node>
  </finding>


  <finding id="333" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00945</class>
    <file>BenchmarkTest00945.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00945" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00945.java"></node>
  </finding>


  <finding id="334" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00946</class>
    <file>BenchmarkTest00946.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00946" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"></node>
  </finding>


  <finding id="335" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00946</class>
    <file>BenchmarkTest00946.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00946" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00946.java"></node>
  </finding>


  <finding id="718" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00947</class>
    <file>BenchmarkTest00947.java</file>
    <line>73</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00947" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00947" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"></endNode>
  </finding>


  <finding id="1841" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00947</class>
    <file>BenchmarkTest00947.java</file>
    <line>81</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00947" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00947" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00947.java"></endNode>
  </finding>


  <finding id="1353" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00949</class>
    <file>BenchmarkTest00949.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00949" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00949" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00949.java"></endNode>
  </finding>


  <finding id="1431" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00950</class>
    <file>BenchmarkTest00950.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00950" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00950" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00950.java"></endNode>
  </finding>


  <finding id="1297" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00952</class>
    <file>BenchmarkTest00952.java</file>
    <line>74</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00952" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00952" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00952.java"></endNode>
  </finding>


  <finding id="1306" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00953</class>
    <file>BenchmarkTest00953.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00953" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00953" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00953.java"></endNode>
  </finding>


  <finding id="1371" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00956</class>
    <file>BenchmarkTest00956.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00956" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00956" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00956.java"></endNode>
  </finding>


  <finding id="1355" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00957</class>
    <file>BenchmarkTest00957.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
static java.nio.file.Path java.nio.file.Paths.get(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00957" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00957" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"></endNode>
  </finding>


  <finding id="1466" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00957</class>
    <file>BenchmarkTest00957.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
static java.io.InputStream java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00957" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00957" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00957.java"></endNode>
  </finding>


  <finding id="713" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00959</class>
    <file>BenchmarkTest00959.java</file>
    <line>75</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00959" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00959" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"></endNode>
  </finding>


  <finding id="1766" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00959</class>
    <file>BenchmarkTest00959.java</file>
    <line>83</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00959" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00959" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00959.java"></endNode>
  </finding>


  <finding id="88" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00960</class>
    <file>BenchmarkTest00960.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00960" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00960.java"></node>
  </finding>


  <finding id="585" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00961</class>
    <file>BenchmarkTest00961.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00961" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00961.java"></node>
  </finding>


  <finding id="586" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00963</class>
    <file>BenchmarkTest00963.java</file>
    <line>64</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00963" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00963.java"></node>
  </finding>


  <finding id="587" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00964</class>
    <file>BenchmarkTest00964.java</file>
    <line>67</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00964" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00964.java"></node>
  </finding>


  <finding id="588" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00965</class>
    <file>BenchmarkTest00965.java</file>
    <line>67</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00965" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00965.java"></node>
  </finding>


  <finding id="589" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00966</class>
    <file>BenchmarkTest00966.java</file>
    <line>67</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00966" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00966.java"></node>
  </finding>


  <finding id="590" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00967</class>
    <file>BenchmarkTest00967.java</file>
    <line>67</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00967" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00967.java"></node>
  </finding>


  <finding id="837" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00968</class>
    <file>BenchmarkTest00968.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00968" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00968" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00968.java"></endNode>
  </finding>


  <finding id="214" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00971</class>
    <file>BenchmarkTest00971.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00971" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00971.java"></node>
  </finding>


  <finding id="140" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00972</class>
    <file>BenchmarkTest00972.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00972" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00972.java"></node>
  </finding>


  <finding id="120" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00973</class>
    <file>BenchmarkTest00973.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00973" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00973.java"></node>
  </finding>


  <finding id="106" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00974</class>
    <file>BenchmarkTest00974.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00974" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00974.java"></node>
  </finding>


  <finding id="152" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00975</class>
    <file>BenchmarkTest00975.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00975" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00975.java"></node>
  </finding>


  <finding id="188" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00976</class>
    <file>BenchmarkTest00976.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00976" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00976.java"></node>
  </finding>


  <finding id="1221" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00977</class>
    <file>BenchmarkTest00977.java</file>
    <line>84</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00977" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00977" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00977.java"></endNode>
  </finding>


  <finding id="759" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00979</class>
    <file>BenchmarkTest00979.java</file>
    <line>86</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00979" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00979.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00979" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00979.java"></endNode>
  </finding>


  <finding id="813" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00980</class>
    <file>BenchmarkTest00980.java</file>
    <line>70</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00980" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00980.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00980" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00980.java"></endNode>
  </finding>


  <finding id="795" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00981</class>
    <file>BenchmarkTest00981.java</file>
    <line>86</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00981" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00981" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"></endNode>
  </finding>


  <finding id="1351" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00981</class>
    <file>BenchmarkTest00981.java</file>
    <line>86</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00981" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"></startNode>
    <endNode lineNo="86" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00981" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00981.java"></endNode>
  </finding>


  <finding id="1339" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00982</class>
    <file>BenchmarkTest00982.java</file>
    <line>70</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00982" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00982.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00982" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00982.java"></endNode>
  </finding>


  <finding id="819" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00983</class>
    <file>BenchmarkTest00983.java</file>
    <line>69</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00983" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00983.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00983" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00983.java"></endNode>
  </finding>


  <finding id="1538" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00991</class>
    <file>BenchmarkTest00991.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00991" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00991" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00991.java"></endNode>
  </finding>


  <finding id="1547" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00993</class>
    <file>BenchmarkTest00993.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00993" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00993" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00993.java"></endNode>
  </finding>


  <finding id="1501" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00994</class>
    <file>BenchmarkTest00994.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00994" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00994" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00994.java"></endNode>
  </finding>


  <finding id="1495" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00995</class>
    <file>BenchmarkTest00995.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00995" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00995" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00995.java"></endNode>
  </finding>


  <finding id="927" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00996</class>
    <file>BenchmarkTest00996.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00996" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00996.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00996" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00996.java"></endNode>
  </finding>


  <finding id="1136" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00997</class>
    <file>BenchmarkTest00997.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00997" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00997" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00997.java"></endNode>
  </finding>


  <finding id="890" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest00998</class>
    <file>BenchmarkTest00998.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00998" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest00998" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest00998.java"></endNode>
  </finding>


  <finding id="1008" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01000</class>
    <file>BenchmarkTest01000.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01000" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01000.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01000" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01000.java"></endNode>
  </finding>


  <finding id="1131" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01002</class>
    <file>BenchmarkTest01002.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01002" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01002" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01002.java"></endNode>
  </finding>


  <finding id="1107" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01003</class>
    <file>BenchmarkTest01003.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01003" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01003" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01003.java"></endNode>
  </finding>


  <finding id="949" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01004</class>
    <file>BenchmarkTest01004.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01004" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01004" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01004.java"></endNode>
  </finding>


  <finding id="999" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01005</class>
    <file>BenchmarkTest01005.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01005.java"></endNode>
  </finding>


  <finding id="905" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01006</class>
    <file>BenchmarkTest01006.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01006" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01006" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01006.java"></endNode>
  </finding>


  <finding id="897" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01007</class>
    <file>BenchmarkTest01007.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01007" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01007" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01007.java"></endNode>
  </finding>


  <finding id="879" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01008</class>
    <file>BenchmarkTest01008.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01008" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01008" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01008.java"></endNode>
  </finding>


  <finding id="929" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01009</class>
    <file>BenchmarkTest01009.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01009" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01009" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01009.java"></endNode>
  </finding>


  <finding id="1130" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01010</class>
    <file>BenchmarkTest01010.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01010" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01010.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01010" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01010.java"></endNode>
  </finding>


  <finding id="1108" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01011</class>
    <file>BenchmarkTest01011.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01011" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01011" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01011.java"></endNode>
  </finding>


  <finding id="947" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01012</class>
    <file>BenchmarkTest01012.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01012" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01012" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01012.java"></endNode>
  </finding>


  <finding id="336" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01015</class>
    <file>BenchmarkTest01015.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01015" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java"></node>
  </finding>


  <finding id="337" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01015</class>
    <file>BenchmarkTest01015.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01015" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01015.java"></node>
  </finding>


  <finding id="338" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01016</class>
    <file>BenchmarkTest01016.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01016" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java"></node>
  </finding>


  <finding id="339" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01016</class>
    <file>BenchmarkTest01016.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01016" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01016.java"></node>
  </finding>


  <finding id="340" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01017</class>
    <file>BenchmarkTest01017.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01017" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java"></node>
  </finding>


  <finding id="341" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01017</class>
    <file>BenchmarkTest01017.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01017" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01017.java"></node>
  </finding>


  <finding id="342" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01018</class>
    <file>BenchmarkTest01018.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01018" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"></node>
  </finding>


  <finding id="343" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01018</class>
    <file>BenchmarkTest01018.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01018" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01018.java"></node>
  </finding>


  <finding id="344" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01020</class>
    <file>BenchmarkTest01020.java</file>
    <line>57</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01020" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java"></node>
  </finding>


  <finding id="345" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01020</class>
    <file>BenchmarkTest01020.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01020" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01020.java"></node>
  </finding>


  <finding id="346" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01021</class>
    <file>BenchmarkTest01021.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01021" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01021.java"></node>
  </finding>


  <finding id="347" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01022</class>
    <file>BenchmarkTest01022.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01022" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01022.java"></node>
  </finding>


  <finding id="696" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01023</class>
    <file>BenchmarkTest01023.java</file>
    <line>63</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01023" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01023" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"></endNode>
  </finding>


  <finding id="1598" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01023</class>
    <file>BenchmarkTest01023.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01023" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01023" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01023.java"></endNode>
  </finding>


  <finding id="1232" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01025</class>
    <file>BenchmarkTest01025.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01025" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01025.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01025" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01025.java"></endNode>
  </finding>


  <finding id="1403" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01028</class>
    <file>BenchmarkTest01028.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01028" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01028.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01028" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01028.java"></endNode>
  </finding>


  <finding id="1388" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01029</class>
    <file>BenchmarkTest01029.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01029" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01029.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01029" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01029.java"></endNode>
  </finding>


  <finding id="1252" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01031</class>
    <file>BenchmarkTest01031.java</file>
    <line>58</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01031" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01031.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01031" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01031.java"></endNode>
  </finding>


  <finding id="1246" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01032</class>
    <file>BenchmarkTest01032.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01032" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01032" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01032.java"></endNode>
  </finding>


  <finding id="1231" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01033</class>
    <file>BenchmarkTest01033.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01033" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01033" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01033.java"></endNode>
  </finding>


  <finding id="1322" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01034</class>
    <file>BenchmarkTest01034.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01034" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01034" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01034.java"></endNode>
  </finding>


  <finding id="591" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01038</class>
    <file>BenchmarkTest01038.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01038" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01038.java"></node>
  </finding>


  <finding id="592" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01041</class>
    <file>BenchmarkTest01041.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01041" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01041.java"></node>
  </finding>


  <finding id="593" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01042</class>
    <file>BenchmarkTest01042.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01042" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01042.java"></node>
  </finding>


  <finding id="594" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01043</class>
    <file>BenchmarkTest01043.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01043" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01043.java"></node>
  </finding>


  <finding id="595" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01044</class>
    <file>BenchmarkTest01044.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01044" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01044.java"></node>
  </finding>


  <finding id="596" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01045</class>
    <file>BenchmarkTest01045.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01045" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01045.java"></node>
  </finding>


  <finding id="1777" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01046</class>
    <file>BenchmarkTest01046.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01046" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01046.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01046" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01046.java"></endNode>
  </finding>


  <finding id="1687" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01047</class>
    <file>BenchmarkTest01047.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01047" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01047.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01047" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01047.java"></endNode>
  </finding>


  <finding id="1717" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01049</class>
    <file>BenchmarkTest01049.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01049" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01049.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01049" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01049.java"></endNode>
  </finding>


  <finding id="1698" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01050</class>
    <file>BenchmarkTest01050.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01050" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01050.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01050" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01050.java"></endNode>
  </finding>


  <finding id="1795" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01052</class>
    <file>BenchmarkTest01052.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01052" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01052.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01052" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01052.java"></endNode>
  </finding>


  <finding id="1688" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01055</class>
    <file>BenchmarkTest01055.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01055" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01055.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01055" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01055.java"></endNode>
  </finding>


  <finding id="1736" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01056</class>
    <file>BenchmarkTest01056.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01056" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01056.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01056" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01056.java"></endNode>
  </finding>


  <finding id="1718" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01057</class>
    <file>BenchmarkTest01057.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01057" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01057.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01057" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01057.java"></endNode>
  </finding>


  <finding id="105" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01058</class>
    <file>BenchmarkTest01058.java</file>
    <line>54</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01058" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01058.java"></node>
  </finding>


  <finding id="151" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01059</class>
    <file>BenchmarkTest01059.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01059" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01059.java"></node>
  </finding>


  <finding id="184" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01060</class>
    <file>BenchmarkTest01060.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01060" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01060.java"></node>
  </finding>


  <finding id="1220" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01061</class>
    <file>BenchmarkTest01061.java</file>
    <line>74</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01061" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01061" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"></endNode>
  </finding>


  <finding id="1920" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01061</class>
    <file>BenchmarkTest01061.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01061" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01061" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01061.java"></endNode>
  </finding>


  <finding id="1917" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01062</class>
    <file>BenchmarkTest01062.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01062" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01062.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01062" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01062.java"></endNode>
  </finding>


  <finding id="1680" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01063</class>
    <file>BenchmarkTest01063.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01063" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01063.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01063" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01063.java"></endNode>
  </finding>


  <finding id="797" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01064</class>
    <file>BenchmarkTest01064.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01064" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01064.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01064" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01064.java"></endNode>
  </finding>


  <finding id="783" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01066</class>
    <file>BenchmarkTest01066.java</file>
    <line>60</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01066" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01066.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01066" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01066.java"></endNode>
  </finding>


  <finding id="820" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01067</class>
    <file>BenchmarkTest01067.java</file>
    <line>59</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01067" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01067.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01067" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01067.java"></endNode>
  </finding>


  <finding id="1316" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01068</class>
    <file>BenchmarkTest01068.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01068" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01068.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01068" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01068.java"></endNode>
  </finding>


  <finding id="1522" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01080</class>
    <file>BenchmarkTest01080.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01080" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01080.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01080" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01080.java"></endNode>
  </finding>


  <finding id="1519" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01081</class>
    <file>BenchmarkTest01081.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01081" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01081.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01081" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01081.java"></endNode>
  </finding>


  <finding id="1515" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01082</class>
    <file>BenchmarkTest01082.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01082" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01082.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01082" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01082.java"></endNode>
  </finding>


  <finding id="1076" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01083</class>
    <file>BenchmarkTest01083.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01083" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01083" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01083.java"></endNode>
  </finding>


  <finding id="969" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01084</class>
    <file>BenchmarkTest01084.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01084" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01084" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01084.java"></endNode>
  </finding>


  <finding id="956" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01085</class>
    <file>BenchmarkTest01085.java</file>
    <line>56</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01085" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01085.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01085" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01085.java"></endNode>
  </finding>


  <finding id="1153" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01087</class>
    <file>BenchmarkTest01087.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01087.java"></endNode>
  </finding>


  <finding id="914" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01088</class>
    <file>BenchmarkTest01088.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01088" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01088" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01088.java"></endNode>
  </finding>


  <finding id="1013" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01090</class>
    <file>BenchmarkTest01090.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01090" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01090" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01090.java"></endNode>
  </finding>


  <finding id="1067" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01091</class>
    <file>BenchmarkTest01091.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01091" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01091" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01091.java"></endNode>
  </finding>


  <finding id="959" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01093</class>
    <file>BenchmarkTest01093.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01093" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01093" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01093.java"></endNode>
  </finding>


  <finding id="1096" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01094</class>
    <file>BenchmarkTest01094.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01094" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01094" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01094.java"></endNode>
  </finding>


  <finding id="891" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01097</class>
    <file>BenchmarkTest01097.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01097" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01097" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01097.java"></endNode>
  </finding>


  <finding id="875" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01098</class>
    <file>BenchmarkTest01098.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01098" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01098.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01098" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01098.java"></endNode>
  </finding>


  <finding id="348" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01099</class>
    <file>BenchmarkTest01099.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01099" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java"></node>
  </finding>


  <finding id="349" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01099</class>
    <file>BenchmarkTest01099.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01099" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01099.java"></node>
  </finding>


  <finding id="350" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01102</class>
    <file>BenchmarkTest01102.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01102" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"></node>
  </finding>


  <finding id="351" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01102</class>
    <file>BenchmarkTest01102.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01102" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01102.java"></node>
  </finding>


  <finding id="352" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01103</class>
    <file>BenchmarkTest01103.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01103" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"></node>
  </finding>


  <finding id="353" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01103</class>
    <file>BenchmarkTest01103.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01103" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01103.java"></node>
  </finding>


  <finding id="354" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01105</class>
    <file>BenchmarkTest01105.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01105" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java"></node>
  </finding>


  <finding id="355" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01105</class>
    <file>BenchmarkTest01105.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01105" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01105.java"></node>
  </finding>


  <finding id="356" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01106</class>
    <file>BenchmarkTest01106.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01106" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java"></node>
  </finding>


  <finding id="357" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01106</class>
    <file>BenchmarkTest01106.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01106" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01106.java"></node>
  </finding>


  <finding id="358" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01107</class>
    <file>BenchmarkTest01107.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01107" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java"></node>
  </finding>


  <finding id="359" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01107</class>
    <file>BenchmarkTest01107.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01107" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01107.java"></node>
  </finding>


  <finding id="360" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01108</class>
    <file>BenchmarkTest01108.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01108" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01108.java"></node>
  </finding>


  <finding id="1269" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01111</class>
    <file>BenchmarkTest01111.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01111" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01111.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01111" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01111.java"></endNode>
  </finding>


  <finding id="1439" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01112</class>
    <file>BenchmarkTest01112.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01112" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01112.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01112" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01112.java"></endNode>
  </finding>


  <finding id="1379" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01116</class>
    <file>BenchmarkTest01116.java</file>
    <line>75</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01116" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01116" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01116.java"></endNode>
  </finding>


  <finding id="1341" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01117</class>
    <file>BenchmarkTest01117.java</file>
    <line>75</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01117" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01117" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01117.java"></endNode>
  </finding>


  <finding id="121" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01119</class>
    <file>BenchmarkTest01119.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01119" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01119.java"></node>
  </finding>


  <finding id="597" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01123</class>
    <file>BenchmarkTest01123.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01123" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01123.java"></node>
  </finding>


  <finding id="598" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01124</class>
    <file>BenchmarkTest01124.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01124" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01124.java"></node>
  </finding>


  <finding id="599" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01125</class>
    <file>BenchmarkTest01125.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01125" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01125.java"></node>
  </finding>


  <finding id="600" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01126</class>
    <file>BenchmarkTest01126.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01126" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01126.java"></node>
  </finding>


  <finding id="123" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01127</class>
    <file>BenchmarkTest01127.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01127" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01127.java"></node>
  </finding>


  <finding id="86" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01128</class>
    <file>BenchmarkTest01128.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01128" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01128.java"></node>
  </finding>


  <finding id="159" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01129</class>
    <file>BenchmarkTest01129.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01129" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01129.java"></node>
  </finding>


  <finding id="66" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01130</class>
    <file>BenchmarkTest01130.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01130" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01130.java"></node>
  </finding>


  <finding id="84" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01131</class>
    <file>BenchmarkTest01131.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01131" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01131.java"></node>
  </finding>


  <finding id="154" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01132</class>
    <file>BenchmarkTest01132.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01132" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01132.java"></node>
  </finding>


  <finding id="107" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01133</class>
    <file>BenchmarkTest01133.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01133" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01133.java"></node>
  </finding>


  <finding id="1208" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01134</class>
    <file>BenchmarkTest01134.java</file>
    <line>83</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"></endNode>
  </finding>


  <finding id="1902" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01134</class>
    <file>BenchmarkTest01134.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01134.java"></endNode>
  </finding>


  <finding id="1521" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01143</class>
    <file>BenchmarkTest01143.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01143" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01143.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01143" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01143.java"></endNode>
  </finding>


  <finding id="1508" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01144</class>
    <file>BenchmarkTest01144.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01144" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01144.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01144" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01144.java"></endNode>
  </finding>


  <finding id="361" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01148</class>
    <file>BenchmarkTest01148.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01148" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java"></node>
  </finding>


  <finding id="362" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01148</class>
    <file>BenchmarkTest01148.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01148" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01148.java"></node>
  </finding>


  <finding id="363" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01149</class>
    <file>BenchmarkTest01149.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01149" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java"></node>
  </finding>


  <finding id="364" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01149</class>
    <file>BenchmarkTest01149.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01149" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01149.java"></node>
  </finding>


  <finding id="365" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01150</class>
    <file>BenchmarkTest01150.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01150" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"></node>
  </finding>


  <finding id="366" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01150</class>
    <file>BenchmarkTest01150.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01150" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01150.java"></node>
  </finding>


  <finding id="367" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01153</class>
    <file>BenchmarkTest01153.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01153" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01153.java"></node>
  </finding>


  <finding id="1398" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01155</class>
    <file>BenchmarkTest01155.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01155.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01155.java"></endNode>
  </finding>


  <finding id="1257" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01156</class>
    <file>BenchmarkTest01156.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01156" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01156.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01156" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01156.java"></endNode>
  </finding>


  <finding id="1330" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01157</class>
    <file>BenchmarkTest01157.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01157" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01157.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01157" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01157.java"></endNode>
  </finding>


  <finding id="1239" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01158</class>
    <file>BenchmarkTest01158.java</file>
    <line>60</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01158" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01158.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01158" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01158.java"></endNode>
  </finding>


  <finding id="1384" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01161</class>
    <file>BenchmarkTest01161.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01161" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01161" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01161.java"></endNode>
  </finding>


  <finding id="164" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01162</class>
    <file>BenchmarkTest01162.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01162" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01162.java"></node>
  </finding>


  <finding id="179" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01163</class>
    <file>BenchmarkTest01163.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01163" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01163.java"></node>
  </finding>


  <finding id="601" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01165</class>
    <file>BenchmarkTest01165.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01165" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01165.java"></node>
  </finding>


  <finding id="602" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01166</class>
    <file>BenchmarkTest01166.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01166" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01166.java"></node>
  </finding>


  <finding id="603" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01167</class>
    <file>BenchmarkTest01167.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01167" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01167.java"></node>
  </finding>


  <finding id="604" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01168</class>
    <file>BenchmarkTest01168.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01168" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01168.java"></node>
  </finding>


  <finding id="605" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01169</class>
    <file>BenchmarkTest01169.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01169" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01169.java"></node>
  </finding>


  <finding id="606" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01170</class>
    <file>BenchmarkTest01170.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01170" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01170.java"></node>
  </finding>


  <finding id="1793" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01171</class>
    <file>BenchmarkTest01171.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01171" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01171.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01171" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01171.java"></endNode>
  </finding>


  <finding id="1608" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01172</class>
    <file>BenchmarkTest01172.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01172" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01172.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01172" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01172.java"></endNode>
  </finding>


  <finding id="1695" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01173</class>
    <file>BenchmarkTest01173.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01173" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01173.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01173" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01173.java"></endNode>
  </finding>


  <finding id="1572" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01174</class>
    <file>BenchmarkTest01174.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01174" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01174.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01174" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01174.java"></endNode>
  </finding>


  <finding id="1610" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01177</class>
    <file>BenchmarkTest01177.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01177" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01177.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01177" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01177.java"></endNode>
  </finding>


  <finding id="1705" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01178</class>
    <file>BenchmarkTest01178.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01178" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01178.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01178" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01178.java"></endNode>
  </finding>


  <finding id="1653" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01179</class>
    <file>BenchmarkTest01179.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01179" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01179.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01179" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01179.java"></endNode>
  </finding>


  <finding id="1694" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01181</class>
    <file>BenchmarkTest01181.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01181" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01181.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01181" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01181.java"></endNode>
  </finding>


  <finding id="725" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01182</class>
    <file>BenchmarkTest01182.java</file>
    <line>67</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01182" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01182.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01182" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01182.java"></endNode>
  </finding>


  <finding id="6" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01183</class>
    <file>BenchmarkTest01183.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01183" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01183.java"></node>
  </finding>


  <finding id="15" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01184</class>
    <file>BenchmarkTest01184.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01184" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01184.java"></node>
  </finding>


  <finding id="1196" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01185</class>
    <file>BenchmarkTest01185.java</file>
    <line>76</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01185" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01185" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"></endNode>
  </finding>


  <finding id="1886" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01185</class>
    <file>BenchmarkTest01185.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01185" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01185" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01185.java"></endNode>
  </finding>


  <finding id="1206" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01186</class>
    <file>BenchmarkTest01186.java</file>
    <line>76</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01186" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01186" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"></endNode>
  </finding>


  <finding id="1900" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01186</class>
    <file>BenchmarkTest01186.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01186" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01186" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01186.java"></endNode>
  </finding>


  <finding id="1199" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01187</class>
    <file>BenchmarkTest01187.java</file>
    <line>76</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01187" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01187" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"></endNode>
  </finding>


  <finding id="1891" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01187</class>
    <file>BenchmarkTest01187.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01187" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01187" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01187.java"></endNode>
  </finding>


  <finding id="747" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01190</class>
    <file>BenchmarkTest01190.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01190" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01190.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01190" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01190.java"></endNode>
  </finding>


  <finding id="728" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01191</class>
    <file>BenchmarkTest01191.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01191" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01191.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01191" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01191.java"></endNode>
  </finding>


  <finding id="733" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01192</class>
    <file>BenchmarkTest01192.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01192" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01192.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01192" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01192.java"></endNode>
  </finding>


  <finding id="1270" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01193</class>
    <file>BenchmarkTest01193.java</file>
    <line>78</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01193" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01193.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01193" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01193.java"></endNode>
  </finding>


  <finding id="780" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01194</class>
    <file>BenchmarkTest01194.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01194" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01194.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01194" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01194.java"></endNode>
  </finding>


  <finding id="1503" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01203</class>
    <file>BenchmarkTest01203.java</file>
    <line>56</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01203" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01203.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01203" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01203.java"></endNode>
  </finding>


  <finding id="1539" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01204</class>
    <file>BenchmarkTest01204.java</file>
    <line>56</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01204" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01204.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01204" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01204.java"></endNode>
  </finding>


  <finding id="1548" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01206</class>
    <file>BenchmarkTest01206.java</file>
    <line>56</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01206" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01206.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01206" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01206.java"></endNode>
  </finding>


  <finding id="997" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01208</class>
    <file>BenchmarkTest01208.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01208.java"></endNode>
  </finding>


  <finding id="877" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01209</class>
    <file>BenchmarkTest01209.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01209" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01209" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01209.java"></endNode>
  </finding>


  <finding id="1023" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01210</class>
    <file>BenchmarkTest01210.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01210" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01210" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01210.java"></endNode>
  </finding>


  <finding id="972" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01211</class>
    <file>BenchmarkTest01211.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01211" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01211" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01211.java"></endNode>
  </finding>


  <finding id="1069" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01212</class>
    <file>BenchmarkTest01212.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01212" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01212.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01212" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01212.java"></endNode>
  </finding>


  <finding id="1115" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01214</class>
    <file>BenchmarkTest01214.java</file>
    <line>58</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01214" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01214" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01214.java"></endNode>
  </finding>


  <finding id="996" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01216</class>
    <file>BenchmarkTest01216.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01216" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01216.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01216" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01216.java"></endNode>
  </finding>


  <finding id="1086" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01221</class>
    <file>BenchmarkTest01221.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01221" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01221.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01221" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01221.java"></endNode>
  </finding>


  <finding id="1113" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01222</class>
    <file>BenchmarkTest01222.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01222" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01222" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01222.java"></endNode>
  </finding>


  <finding id="1178" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01223</class>
    <file>BenchmarkTest01223.java</file>
    <line>71</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"></endNode>
  </finding>


  <finding id="1611" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01223</class>
    <file>BenchmarkTest01223.java</file>
    <line>74</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01223.java"></endNode>
  </finding>


  <finding id="1183" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01224</class>
    <file>BenchmarkTest01224.java</file>
    <line>71</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01224" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01224" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"></endNode>
  </finding>


  <finding id="1704" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01224</class>
    <file>BenchmarkTest01224.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01224" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01224" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01224.java"></endNode>
  </finding>


  <finding id="368" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01228</class>
    <file>BenchmarkTest01228.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01228" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"></node>
  </finding>


  <finding id="369" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01228</class>
    <file>BenchmarkTest01228.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01228" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01228.java"></node>
  </finding>


  <finding id="370" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01229</class>
    <file>BenchmarkTest01229.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01229" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"></node>
  </finding>


  <finding id="371" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01229</class>
    <file>BenchmarkTest01229.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01229" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01229.java"></node>
  </finding>


  <finding id="372" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01230</class>
    <file>BenchmarkTest01230.java</file>
    <line>52</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01230" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java"></node>
  </finding>


  <finding id="373" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01230</class>
    <file>BenchmarkTest01230.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01230" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01230.java"></node>
  </finding>


  <finding id="1266" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01231</class>
    <file>BenchmarkTest01231.java</file>
    <line>48</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01231" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01231.java"></startNode>
    <endNode lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01231" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01231.java"></endNode>
  </finding>


  <finding id="1334" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01232</class>
    <file>BenchmarkTest01232.java</file>
    <line>48</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01232" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01232.java"></startNode>
    <endNode lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01232" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01232.java"></endNode>
  </finding>


  <finding id="1255" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01234</class>
    <file>BenchmarkTest01234.java</file>
    <line>48</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01234" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01234.java"></startNode>
    <endNode lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01234" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01234.java"></endNode>
  </finding>


  <finding id="1425" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01235</class>
    <file>BenchmarkTest01235.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01235" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01235.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01235" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01235.java"></endNode>
  </finding>


  <finding id="1258" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01236</class>
    <file>BenchmarkTest01236.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01236" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01236.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01236" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01236.java"></endNode>
  </finding>


  <finding id="1290" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01238</class>
    <file>BenchmarkTest01238.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01238" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01238" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01238.java"></endNode>
  </finding>


  <finding id="1405" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01239</class>
    <file>BenchmarkTest01239.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01239" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01239" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01239.java"></endNode>
  </finding>


  <finding id="1333" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01240</class>
    <file>BenchmarkTest01240.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01240" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01240" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01240.java"></endNode>
  </finding>


  <finding id="693" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01241</class>
    <file>BenchmarkTest01241.java</file>
    <line>60</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"></endNode>
  </finding>


  <finding id="1578" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01241</class>
    <file>BenchmarkTest01241.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01241.java"></endNode>
  </finding>


  <finding id="695" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01242</class>
    <file>BenchmarkTest01242.java</file>
    <line>60</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01242" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01242" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"></endNode>
  </finding>


  <finding id="1595" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01242</class>
    <file>BenchmarkTest01242.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01242" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01242" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01242.java"></endNode>
  </finding>


  <finding id="717" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01243</class>
    <file>BenchmarkTest01243.java</file>
    <line>60</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01243" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01243" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"></endNode>
  </finding>


  <finding id="1821" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01243</class>
    <file>BenchmarkTest01243.java</file>
    <line>69</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01243" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01243" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01243.java"></endNode>
  </finding>


  <finding id="607" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01244</class>
    <file>BenchmarkTest01244.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01244" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java"></node>
  </finding>


  <finding id="608" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01244</class>
    <file>BenchmarkTest01244.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01244" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01244.java"></node>
  </finding>


  <finding id="609" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01246</class>
    <file>BenchmarkTest01246.java</file>
    <line>49</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01246" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01246.java"></node>
  </finding>


  <finding id="610" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01247</class>
    <file>BenchmarkTest01247.java</file>
    <line>49</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01247" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01247.java"></node>
  </finding>


  <finding id="611" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01248</class>
    <file>BenchmarkTest01248.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01248" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01248.java"></node>
  </finding>


  <finding id="612" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01249</class>
    <file>BenchmarkTest01249.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01249" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01249.java"></node>
  </finding>


  <finding id="613" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01250</class>
    <file>BenchmarkTest01250.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01250" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01250.java"></node>
  </finding>


  <finding id="1690" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01253</class>
    <file>BenchmarkTest01253.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01253" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01253.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01253" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01253.java"></endNode>
  </finding>


  <finding id="1639" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01254</class>
    <file>BenchmarkTest01254.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01254" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01254.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01254" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01254.java"></endNode>
  </finding>


  <finding id="1781" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01257</class>
    <file>BenchmarkTest01257.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01257" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01257.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01257" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01257.java"></endNode>
  </finding>


  <finding id="1715" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01258</class>
    <file>BenchmarkTest01258.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01258" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01258.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01258" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01258.java"></endNode>
  </finding>


  <finding id="1743" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01259</class>
    <file>BenchmarkTest01259.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01259" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01259.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01259" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01259.java"></endNode>
  </finding>


  <finding id="1602" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01260</class>
    <file>BenchmarkTest01260.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01260" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01260.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01260" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01260.java"></endNode>
  </finding>


  <finding id="1696" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01261</class>
    <file>BenchmarkTest01261.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01261" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01261.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01261" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01261.java"></endNode>
  </finding>


  <finding id="1644" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01262</class>
    <file>BenchmarkTest01262.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01262" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01262.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01262" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01262.java"></endNode>
  </finding>


  <finding id="1796" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01263</class>
    <file>BenchmarkTest01263.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01263" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01263.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01263" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01263.java"></endNode>
  </finding>


  <finding id="1716" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01266</class>
    <file>BenchmarkTest01266.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01266" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01266.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01266" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01266.java"></endNode>
  </finding>


  <finding id="1742" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01267</class>
    <file>BenchmarkTest01267.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01267" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01267.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01267" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01267.java"></endNode>
  </finding>


  <finding id="1759" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01268</class>
    <file>BenchmarkTest01268.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01268" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01268.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01268" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01268.java"></endNode>
  </finding>


  <finding id="752" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01270</class>
    <file>BenchmarkTest01270.java</file>
    <line>60</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01270" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01270.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01270" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01270.java"></endNode>
  </finding>


  <finding id="182" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01271</class>
    <file>BenchmarkTest01271.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01271" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01271.java"></node>
  </finding>


  <finding id="199" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01272</class>
    <file>BenchmarkTest01272.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01272" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01272.java"></node>
  </finding>


  <finding id="155" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01273</class>
    <file>BenchmarkTest01273.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01273" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01273.java"></node>
  </finding>


  <finding id="117" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01274</class>
    <file>BenchmarkTest01274.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01274" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01274.java"></node>
  </finding>


  <finding id="128" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01275</class>
    <file>BenchmarkTest01275.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01275" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01275.java"></node>
  </finding>


  <finding id="144" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01276</class>
    <file>BenchmarkTest01276.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01276" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01276.java"></node>
  </finding>


  <finding id="192" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01277</class>
    <file>BenchmarkTest01277.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01277" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01277.java"></node>
  </finding>


  <finding id="150" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01278</class>
    <file>BenchmarkTest01278.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01278" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01278.java"></node>
  </finding>


  <finding id="56" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01279</class>
    <file>BenchmarkTest01279.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01279" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01279.java"></node>
  </finding>


  <finding id="1226" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01280</class>
    <file>BenchmarkTest01280.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01280" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01280" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"></endNode>
  </finding>


  <finding id="1925" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01280</class>
    <file>BenchmarkTest01280.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01280" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01280" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01280.java"></endNode>
  </finding>


  <finding id="1216" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01281</class>
    <file>BenchmarkTest01281.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01281" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01281" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"></endNode>
  </finding>


  <finding id="1915" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01281</class>
    <file>BenchmarkTest01281.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01281" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01281" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01281.java"></endNode>
  </finding>


  <finding id="1209" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01282</class>
    <file>BenchmarkTest01282.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01282" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01282" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"></endNode>
  </finding>


  <finding id="1903" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01282</class>
    <file>BenchmarkTest01282.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01282" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01282" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01282.java"></endNode>
  </finding>


  <finding id="1213" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01283</class>
    <file>BenchmarkTest01283.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01283" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01283.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01283" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01283.java"></endNode>
  </finding>


  <finding id="1760" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01284</class>
    <file>BenchmarkTest01284.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01284" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01284.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01284" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01284.java"></endNode>
  </finding>


  <finding id="840" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01285</class>
    <file>BenchmarkTest01285.java</file>
    <line>57</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01285" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01285.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01285" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01285.java"></endNode>
  </finding>


  <finding id="818" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01286</class>
    <file>BenchmarkTest01286.java</file>
    <line>69</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01286" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01286.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01286" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01286.java"></endNode>
  </finding>


  <finding id="756" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01287</class>
    <file>BenchmarkTest01287.java</file>
    <line>55</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01287" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01287.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01287" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01287.java"></endNode>
  </finding>


  <finding id="762" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01288</class>
    <file>BenchmarkTest01288.java</file>
    <line>55</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01288" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01288.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01288" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01288.java"></endNode>
  </finding>


  <finding id="1302" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01288</class>
    <file>BenchmarkTest01288.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01288" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01288.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01288" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01288.java"></endNode>
  </finding>


  <finding id="738" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01289</class>
    <file>BenchmarkTest01289.java</file>
    <line>58</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01289" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01289.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01289" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01289.java"></endNode>
  </finding>


  <finding id="1473" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01299</class>
    <file>BenchmarkTest01299.java</file>
    <line>49</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01299" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01299.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01299" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01299.java"></endNode>
  </finding>


  <finding id="1478" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01300</class>
    <file>BenchmarkTest01300.java</file>
    <line>49</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01300" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01300.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01300" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01300.java"></endNode>
  </finding>


  <finding id="1145" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01302</class>
    <file>BenchmarkTest01302.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01302" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01302.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01302" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01302.java"></endNode>
  </finding>


  <finding id="903" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01303</class>
    <file>BenchmarkTest01303.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01303" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01303.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01303" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01303.java"></endNode>
  </finding>


  <finding id="962" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01304</class>
    <file>BenchmarkTest01304.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01304.java"></endNode>
  </finding>


  <finding id="1091" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01306</class>
    <file>BenchmarkTest01306.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01306.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01306.java"></endNode>
  </finding>


  <finding id="1059" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01308</class>
    <file>BenchmarkTest01308.java</file>
    <line>50</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01308" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01308" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01308.java"></endNode>
  </finding>


  <finding id="1144" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01310</class>
    <file>BenchmarkTest01310.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01310" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01310.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01310" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01310.java"></endNode>
  </finding>


  <finding id="904" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01311</class>
    <file>BenchmarkTest01311.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01311" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01311" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01311.java"></endNode>
  </finding>


  <finding id="977" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01312</class>
    <file>BenchmarkTest01312.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01312" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01312" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01312.java"></endNode>
  </finding>


  <finding id="965" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01313</class>
    <file>BenchmarkTest01313.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01313" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01313" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01313.java"></endNode>
  </finding>


  <finding id="1094" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01314</class>
    <file>BenchmarkTest01314.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01314" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01314" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01314.java"></endNode>
  </finding>


  <finding id="1188" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01316</class>
    <file>BenchmarkTest01316.java</file>
    <line>64</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01316" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01316" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"></endNode>
  </finding>


  <finding id="1762" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01316</class>
    <file>BenchmarkTest01316.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01316" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01316" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01316.java"></endNode>
  </finding>


  <finding id="374" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01317</class>
    <file>BenchmarkTest01317.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01317" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java"></node>
  </finding>


  <finding id="375" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01317</class>
    <file>BenchmarkTest01317.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01317" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01317.java"></node>
  </finding>


  <finding id="376" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01318</class>
    <file>BenchmarkTest01318.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01318" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java"></node>
  </finding>


  <finding id="377" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01318</class>
    <file>BenchmarkTest01318.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01318" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01318.java"></node>
  </finding>


  <finding id="378" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01320</class>
    <file>BenchmarkTest01320.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01320" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java"></node>
  </finding>


  <finding id="379" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01320</class>
    <file>BenchmarkTest01320.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01320" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01320.java"></node>
  </finding>


  <finding id="380" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01322</class>
    <file>BenchmarkTest01322.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01322" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"></node>
  </finding>


  <finding id="381" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01322</class>
    <file>BenchmarkTest01322.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01322" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01322.java"></node>
  </finding>


  <finding id="382" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01323</class>
    <file>BenchmarkTest01323.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01323" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"></node>
  </finding>


  <finding id="383" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01323</class>
    <file>BenchmarkTest01323.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01323" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01323.java"></node>
  </finding>


  <finding id="384" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01325</class>
    <file>BenchmarkTest01325.java</file>
    <line>57</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01325" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java"></node>
  </finding>


  <finding id="385" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01325</class>
    <file>BenchmarkTest01325.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01325" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01325.java"></node>
  </finding>


  <finding id="705" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01326</class>
    <file>BenchmarkTest01326.java</file>
    <line>63</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"></endNode>
  </finding>


  <finding id="1709" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01326</class>
    <file>BenchmarkTest01326.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01326.java"></endNode>
  </finding>


  <finding id="1406" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01329</class>
    <file>BenchmarkTest01329.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01329" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01329.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01329" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01329.java"></endNode>
  </finding>


  <finding id="1395" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01330</class>
    <file>BenchmarkTest01330.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01330" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01330" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01330.java"></endNode>
  </finding>


  <finding id="1441" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01331</class>
    <file>BenchmarkTest01331.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01331" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01331" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01331.java"></endNode>
  </finding>


  <finding id="614" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01333</class>
    <file>BenchmarkTest01333.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01333" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01333.java"></node>
  </finding>


  <finding id="615" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01334</class>
    <file>BenchmarkTest01334.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01334" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01334.java"></node>
  </finding>


  <finding id="1769" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01335</class>
    <file>BenchmarkTest01335.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01335" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01335.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01335" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01335.java"></endNode>
  </finding>


  <finding id="1798" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01337</class>
    <file>BenchmarkTest01337.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01337" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01337.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01337" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01337.java"></endNode>
  </finding>


  <finding id="1667" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01338</class>
    <file>BenchmarkTest01338.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01338" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01338.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01338" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01338.java"></endNode>
  </finding>


  <finding id="1770" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01343</class>
    <file>BenchmarkTest01343.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01343" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01343.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01343" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01343.java"></endNode>
  </finding>


  <finding id="1665" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01346</class>
    <file>BenchmarkTest01346.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01346" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01346.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01346" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01346.java"></endNode>
  </finding>


  <finding id="1650" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01347</class>
    <file>BenchmarkTest01347.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01347" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01347.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01347" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01347.java"></endNode>
  </finding>


  <finding id="1819" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01349</class>
    <file>BenchmarkTest01349.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01349" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01349.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01349" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01349.java"></endNode>
  </finding>


  <finding id="1713" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01350</class>
    <file>BenchmarkTest01350.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01350" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01350.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01350" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01350.java"></endNode>
  </finding>


  <finding id="77" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01354</class>
    <file>BenchmarkTest01354.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01354" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01354.java"></node>
  </finding>


  <finding id="60" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01355</class>
    <file>BenchmarkTest01355.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01355" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01355.java"></node>
  </finding>


  <finding id="50" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01356</class>
    <file>BenchmarkTest01356.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01356" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01356.java"></node>
  </finding>


  <finding id="204" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01357</class>
    <file>BenchmarkTest01357.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01357" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01357.java"></node>
  </finding>


  <finding id="19" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01358</class>
    <file>BenchmarkTest01358.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01358" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01358.java"></node>
  </finding>


  <finding id="1879" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01359</class>
    <file>BenchmarkTest01359.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01359" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01359.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01359" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01359.java"></endNode>
  </finding>


  <finding id="842" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01360</class>
    <file>BenchmarkTest01360.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01360" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01360.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01360" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01360.java"></endNode>
  </finding>


  <finding id="812" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01361</class>
    <file>BenchmarkTest01361.java</file>
    <line>60</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01361" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01361.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01361" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01361.java"></endNode>
  </finding>


  <finding id="765" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01362</class>
    <file>BenchmarkTest01362.java</file>
    <line>76</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01362.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01362.java"></endNode>
  </finding>


  <finding id="1305" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01362</class>
    <file>BenchmarkTest01362.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01362.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01362.java"></endNode>
  </finding>


  <finding id="758" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01363</class>
    <file>BenchmarkTest01363.java</file>
    <line>59</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01363" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01363.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01363" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01363.java"></endNode>
  </finding>


  <finding id="1427" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01365</class>
    <file>BenchmarkTest01365.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01365" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01365.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01365" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01365.java"></endNode>
  </finding>


  <finding id="1476" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01374</class>
    <file>BenchmarkTest01374.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01374" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01374.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01374" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01374.java"></endNode>
  </finding>


  <finding id="1471" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01375</class>
    <file>BenchmarkTest01375.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01375" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01375.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01375" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01375.java"></endNode>
  </finding>


  <finding id="1511" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01376</class>
    <file>BenchmarkTest01376.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01376" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01376.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01376" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01376.java"></endNode>
  </finding>


  <finding id="1485" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01377</class>
    <file>BenchmarkTest01377.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01377" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01377.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01377" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01377.java"></endNode>
  </finding>


  <finding id="1119" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01379</class>
    <file>BenchmarkTest01379.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01379" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01379" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01379.java"></endNode>
  </finding>


  <finding id="1124" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01381</class>
    <file>BenchmarkTest01381.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01381" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01381" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01381.java"></endNode>
  </finding>


  <finding id="885" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01382</class>
    <file>BenchmarkTest01382.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01382" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01382" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01382.java"></endNode>
  </finding>


  <finding id="871" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01383</class>
    <file>BenchmarkTest01383.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01383" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01383" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01383.java"></endNode>
  </finding>


  <finding id="989" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01384</class>
    <file>BenchmarkTest01384.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01384" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01384" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01384.java"></endNode>
  </finding>


  <finding id="1111" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01386</class>
    <file>BenchmarkTest01386.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01386" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01386.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01386" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01386.java"></endNode>
  </finding>


  <finding id="942" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01388</class>
    <file>BenchmarkTest01388.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01388" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01388" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01388.java"></endNode>
  </finding>


  <finding id="888" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01390</class>
    <file>BenchmarkTest01390.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01390" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01390" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01390.java"></endNode>
  </finding>


  <finding id="873" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01391</class>
    <file>BenchmarkTest01391.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01391" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01391" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01391.java"></endNode>
  </finding>


  <finding id="1135" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01394</class>
    <file>BenchmarkTest01394.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01394" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01394" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01394.java"></endNode>
  </finding>


  <finding id="1120" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01395</class>
    <file>BenchmarkTest01395.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01395" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01395" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01395.java"></endNode>
  </finding>


  <finding id="945" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01396</class>
    <file>BenchmarkTest01396.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01396" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01396" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01396.java"></endNode>
  </finding>


  <finding id="386" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01398</class>
    <file>BenchmarkTest01398.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01398" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java"></node>
  </finding>


  <finding id="387" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01398</class>
    <file>BenchmarkTest01398.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01398" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01398.java"></node>
  </finding>


  <finding id="388" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01401</class>
    <file>BenchmarkTest01401.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01401" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01401.java"></node>
  </finding>


  <finding id="1349" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01403</class>
    <file>BenchmarkTest01403.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01403" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01403.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01403" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01403.java"></endNode>
  </finding>


  <finding id="1296" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01405</class>
    <file>BenchmarkTest01405.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01405" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01405.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01405" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01405.java"></endNode>
  </finding>


  <finding id="1417" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01408</class>
    <file>BenchmarkTest01408.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01408" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01408" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01408.java"></endNode>
  </finding>


  <finding id="616" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01411</class>
    <file>BenchmarkTest01411.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01411" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01411.java"></node>
  </finding>


  <finding id="617" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01414</class>
    <file>BenchmarkTest01414.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01414" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01414.java"></node>
  </finding>


  <finding id="618" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01415</class>
    <file>BenchmarkTest01415.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01415" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01415.java"></node>
  </finding>


  <finding id="619" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01416</class>
    <file>BenchmarkTest01416.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01416" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01416.java"></node>
  </finding>


  <finding id="1589" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01417</class>
    <file>BenchmarkTest01417.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01417" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01417.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01417" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01417.java"></endNode>
  </finding>


  <finding id="1573" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01418</class>
    <file>BenchmarkTest01418.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01418" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01418.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01418" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01418.java"></endNode>
  </finding>


  <finding id="1621" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01423</class>
    <file>BenchmarkTest01423.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01423" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01423.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01423" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01423.java"></endNode>
  </finding>


  <finding id="1808" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01424</class>
    <file>BenchmarkTest01424.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01424" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01424.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01424" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01424.java"></endNode>
  </finding>


  <finding id="1574" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01426</class>
    <file>BenchmarkTest01426.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01426" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01426.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01426" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01426.java"></endNode>
  </finding>


  <finding id="1700" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01427</class>
    <file>BenchmarkTest01427.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01427" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01427.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01427" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01427.java"></endNode>
  </finding>


  <finding id="1612" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01428</class>
    <file>BenchmarkTest01428.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01428" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01428.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01428" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01428.java"></endNode>
  </finding>


  <finding id="1804" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01429</class>
    <file>BenchmarkTest01429.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01429" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01429.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01429" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01429.java"></endNode>
  </finding>


  <finding id="749" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01430</class>
    <file>BenchmarkTest01430.java</file>
    <line>74</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01430" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01430.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01430" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01430.java"></endNode>
  </finding>


  <finding id="40" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01431</class>
    <file>BenchmarkTest01431.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01431" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01431.java"></node>
  </finding>


  <finding id="194" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01432</class>
    <file>BenchmarkTest01432.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01432" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01432.java"></node>
  </finding>


  <finding id="13" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01433</class>
    <file>BenchmarkTest01433.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01433" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01433.java"></node>
  </finding>


  <finding id="4" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01434</class>
    <file>BenchmarkTest01434.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01434" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01434.java"></node>
  </finding>


  <finding id="94" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01435</class>
    <file>BenchmarkTest01435.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01435" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01435.java"></node>
  </finding>


  <finding id="1806" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01437</class>
    <file>BenchmarkTest01437.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01437" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01437.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01437" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01437.java"></endNode>
  </finding>


  <finding id="1789" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01438</class>
    <file>BenchmarkTest01438.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01438" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01438.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01438" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01438.java"></endNode>
  </finding>


  <finding id="732" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01441</class>
    <file>BenchmarkTest01441.java</file>
    <line>83</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01441" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01441.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01441" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01441.java"></endNode>
  </finding>


  <finding id="727" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01442</class>
    <file>BenchmarkTest01442.java</file>
    <line>69</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01442" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01442.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01442" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01442.java"></endNode>
  </finding>


  <finding id="739" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01444</class>
    <file>BenchmarkTest01444.java</file>
    <line>68</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01444" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01444.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01444" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01444.java"></endNode>
  </finding>


  <finding id="833" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01446</class>
    <file>BenchmarkTest01446.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01446" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01446.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01446" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01446.java"></endNode>
  </finding>


  <finding id="1396" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01446</class>
    <file>BenchmarkTest01446.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01446" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01446.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01446" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01446.java"></endNode>
  </finding>


  <finding id="1492" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01455</class>
    <file>BenchmarkTest01455.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01455" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01455.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01455" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01455.java"></endNode>
  </finding>


  <finding id="1509" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01456</class>
    <file>BenchmarkTest01456.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01456" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01456.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01456" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01456.java"></endNode>
  </finding>


  <finding id="1530" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01457</class>
    <file>BenchmarkTest01457.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01457" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01457.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01457" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01457.java"></endNode>
  </finding>


  <finding id="1520" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01458</class>
    <file>BenchmarkTest01458.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01458" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01458.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01458" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01458.java"></endNode>
  </finding>


  <finding id="1011" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01459</class>
    <file>BenchmarkTest01459.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01459" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01459.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01459" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01459.java"></endNode>
  </finding>


  <finding id="911" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01460</class>
    <file>BenchmarkTest01460.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01460" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01460" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01460.java"></endNode>
  </finding>


  <finding id="1099" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01462</class>
    <file>BenchmarkTest01462.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01462" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01462" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01462.java"></endNode>
  </finding>


  <finding id="934" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01463</class>
    <file>BenchmarkTest01463.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01463" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01463" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01463.java"></endNode>
  </finding>


  <finding id="984" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01464</class>
    <file>BenchmarkTest01464.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01464" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01464" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01464.java"></endNode>
  </finding>


  <finding id="1048" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01465</class>
    <file>BenchmarkTest01465.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01465" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01465" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01465.java"></endNode>
  </finding>


  <finding id="1028" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01466</class>
    <file>BenchmarkTest01466.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01466" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01466" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01466.java"></endNode>
  </finding>


  <finding id="1102" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01470</class>
    <file>BenchmarkTest01470.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01470" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01470" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01470.java"></endNode>
  </finding>


  <finding id="935" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01471</class>
    <file>BenchmarkTest01471.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01471" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01471" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01471.java"></endNode>
  </finding>


  <finding id="1050" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01473</class>
    <file>BenchmarkTest01473.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01473" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01473" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01473.java"></endNode>
  </finding>


  <finding id="1032" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01474</class>
    <file>BenchmarkTest01474.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01474" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01474.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01474" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01474.java"></endNode>
  </finding>


  <finding id="1012" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01475</class>
    <file>BenchmarkTest01475.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01475" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01475" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01475.java"></endNode>
  </finding>


  <finding id="1077" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01476</class>
    <file>BenchmarkTest01476.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01476" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01476" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01476.java"></endNode>
  </finding>


  <finding id="980" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01477</class>
    <file>BenchmarkTest01477.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01477" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01477" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01477.java"></endNode>
  </finding>


  <finding id="1180" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01478</class>
    <file>BenchmarkTest01478.java</file>
    <line>78</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01478" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01478" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"></endNode>
  </finding>


  <finding id="1672" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01478</class>
    <file>BenchmarkTest01478.java</file>
    <line>81</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01478" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01478" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01478.java"></endNode>
  </finding>


  <finding id="389" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01480</class>
    <file>BenchmarkTest01480.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01480" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java"></node>
  </finding>


  <finding id="390" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01480</class>
    <file>BenchmarkTest01480.java</file>
    <line>63</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01480" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01480.java"></node>
  </finding>


  <finding id="391" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01483</class>
    <file>BenchmarkTest01483.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01483" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java"></node>
  </finding>


  <finding id="392" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01483</class>
    <file>BenchmarkTest01483.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01483" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01483.java"></node>
  </finding>


  <finding id="393" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01484</class>
    <file>BenchmarkTest01484.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01484" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java"></node>
  </finding>


  <finding id="394" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01484</class>
    <file>BenchmarkTest01484.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01484" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01484.java"></node>
  </finding>


  <finding id="395" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01486</class>
    <file>BenchmarkTest01486.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01486" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"></node>
  </finding>


  <finding id="396" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01486</class>
    <file>BenchmarkTest01486.java</file>
    <line>63</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01486" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01486.java"></node>
  </finding>


  <finding id="397" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01489</class>
    <file>BenchmarkTest01489.java</file>
    <line>53</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01489" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java"></node>
  </finding>


  <finding id="398" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01489</class>
    <file>BenchmarkTest01489.java</file>
    <line>56</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01489" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01489.java"></node>
  </finding>


  <finding id="719" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01490</class>
    <file>BenchmarkTest01490.java</file>
    <line>59</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01490" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01490.java"></endNode>
  </finding>


  <finding id="1860" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01490</class>
    <file>BenchmarkTest01490.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01490" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01490.java"></endNode>
  </finding>


  <finding id="1450" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01494</class>
    <file>BenchmarkTest01494.java</file>
    <line>49</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01494" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01494.java"></endNode>
  </finding>


  <finding id="1443" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01495</class>
    <file>BenchmarkTest01495.java</file>
    <line>60</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01495" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01495.java"></endNode>
  </finding>


  <finding id="1442" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01496</class>
    <file>BenchmarkTest01496.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01496" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01496.java"></endNode>
  </finding>


  <finding id="1457" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01497</class>
    <file>BenchmarkTest01497.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01497" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01497.java"></endNode>
  </finding>


  <finding id="1445" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01498</class>
    <file>BenchmarkTest01498.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01498" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01498.java"></endNode>
  </finding>


  <finding id="1455" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01500</class>
    <file>BenchmarkTest01500.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
static java.nio.file.Path java.nio.file.Paths.get(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01500" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01500.java"></endNode>
  </finding>


  <finding id="1469" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01500</class>
    <file>BenchmarkTest01500.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
static java.io.InputStream java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01500" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01500.java"></endNode>
  </finding>


  <finding id="722" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01501</class>
    <file>BenchmarkTest01501.java</file>
    <line>61</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01501" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01501.java"></endNode>
  </finding>


  <finding id="1846" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01501</class>
    <file>BenchmarkTest01501.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01501" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01501.java"></endNode>
  </finding>


  <finding id="1" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01502</class>
    <file>BenchmarkTest01502.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01502" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01502.java"></node>
  </finding>


  <finding id="620" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01503</class>
    <file>BenchmarkTest01503.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01503" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java"></node>
  </finding>


  <finding id="621" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01503</class>
    <file>BenchmarkTest01503.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01503" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01503.java"></node>
  </finding>


  <finding id="622" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01504</class>
    <file>BenchmarkTest01504.java</file>
    <line>50</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01504" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01504.java"></node>
  </finding>


  <finding id="1867" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01505</class>
    <file>BenchmarkTest01505.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01505" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01505.java"></endNode>
  </finding>


  <finding id="1852" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01506</class>
    <file>BenchmarkTest01506.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01506" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01506.java"></endNode>
  </finding>


  <finding id="1872" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01507</class>
    <file>BenchmarkTest01507.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01507" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01507.java"></endNode>
  </finding>


  <finding id="1870" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01509</class>
    <file>BenchmarkTest01509.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01509" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01509.java"></endNode>
  </finding>


  <finding id="1855" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01510</class>
    <file>BenchmarkTest01510.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01510" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01510.java"></endNode>
  </finding>


  <finding id="1857" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01511</class>
    <file>BenchmarkTest01511.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01511" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01511.java"></endNode>
  </finding>


  <finding id="1876" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01512</class>
    <file>BenchmarkTest01512.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01512" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01512.java"></endNode>
  </finding>


  <finding id="868" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01517</class>
    <file>BenchmarkTest01517.java</file>
    <line>61</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01517" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01517.java"></endNode>
  </finding>


  <finding id="206" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01518</class>
    <file>BenchmarkTest01518.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01518" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01518.java"></node>
  </finding>


  <finding id="102" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01519</class>
    <file>BenchmarkTest01519.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01519" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01519.java"></node>
  </finding>


  <finding id="31" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01520</class>
    <file>BenchmarkTest01520.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01520" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01520.java"></node>
  </finding>


  <finding id="1229" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01521</class>
    <file>BenchmarkTest01521.java</file>
    <line>70</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01521" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01521.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01521" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01521.java"></endNode>
  </finding>


  <finding id="1931" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01521</class>
    <file>BenchmarkTest01521.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01521" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01521.java"></endNode>
  </finding>


  <finding id="1934" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01522</class>
    <file>BenchmarkTest01522.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01522" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01522.java"></endNode>
  </finding>


  <finding id="1935" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01523</class>
    <file>BenchmarkTest01523.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01523" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01523.java"></endNode>
  </finding>


  <finding id="1933" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01524</class>
    <file>BenchmarkTest01524.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01524" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01524.java"></endNode>
  </finding>


  <finding id="1871" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01525</class>
    <file>BenchmarkTest01525.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01525" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01525.java"></endNode>
  </finding>


  <finding id="858" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01530</class>
    <file>BenchmarkTest01530.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01530" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01530.java"></endNode>
  </finding>


  <finding id="864" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01531</class>
    <file>BenchmarkTest01531.java</file>
    <line>56</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01531" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01531.java"></endNode>
  </finding>


  <finding id="1300" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01532</class>
    <file>BenchmarkTest01532.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01532" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01532.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01532" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01532.java"></endNode>
  </finding>


  <finding id="857" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01533</class>
    <file>BenchmarkTest01533.java</file>
    <line>53</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01533" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01533.java"></endNode>
  </finding>


  <finding id="1364" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01533</class>
    <file>BenchmarkTest01533.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01533" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01533.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01533" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01533.java"></endNode>
  </finding>


  <finding id="1555" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01546</class>
    <file>BenchmarkTest01546.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01546" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01546.java"></endNode>
  </finding>


  <finding id="1559" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01547</class>
    <file>BenchmarkTest01547.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01547" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01547.java"></endNode>
  </finding>


  <finding id="1557" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01548</class>
    <file>BenchmarkTest01548.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01548" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01548.java"></endNode>
  </finding>


  <finding id="1562" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01549</class>
    <file>BenchmarkTest01549.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01549" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01549.java"></endNode>
  </finding>


  <finding id="1556" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01550</class>
    <file>BenchmarkTest01550.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01550" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01550.java"></endNode>
  </finding>


  <finding id="1563" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01551</class>
    <file>BenchmarkTest01551.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01551" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01551.java"></endNode>
  </finding>


  <finding id="1164" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01552</class>
    <file>BenchmarkTest01552.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01552" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01552.java"></endNode>
  </finding>


  <finding id="1163" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01554</class>
    <file>BenchmarkTest01554.java</file>
    <line>51</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01554" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01554.java"></endNode>
  </finding>


  <finding id="1173" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01555</class>
    <file>BenchmarkTest01555.java</file>
    <line>51</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01555" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01555.java"></endNode>
  </finding>


  <finding id="1166" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01557</class>
    <file>BenchmarkTest01557.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01557" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01557.java"></endNode>
  </finding>


  <finding id="1174" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01558</class>
    <file>BenchmarkTest01558.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01558" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01558.java"></endNode>
  </finding>


  <finding id="1160" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01559</class>
    <file>BenchmarkTest01559.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01559" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01559.java"></endNode>
  </finding>


  <finding id="1171" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01560</class>
    <file>BenchmarkTest01560.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01560" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01560.java"></endNode>
  </finding>


  <finding id="1192" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01561</class>
    <file>BenchmarkTest01561.java</file>
    <line>65</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01561" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01561.java"></endNode>
  </finding>


  <finding id="1858" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01561</class>
    <file>BenchmarkTest01561.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01561" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01561.java"></endNode>
  </finding>


  <finding id="399" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01565</class>
    <file>BenchmarkTest01565.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"></node>
  </finding>


  <finding id="400" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01565</class>
    <file>BenchmarkTest01565.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01565.java"></node>
  </finding>


  <finding id="401" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01566</class>
    <file>BenchmarkTest01566.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01566" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java"></node>
  </finding>


  <finding id="402" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01566</class>
    <file>BenchmarkTest01566.java</file>
    <line>58</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01566" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01566.java"></node>
  </finding>


  <finding id="403" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01567</class>
    <file>BenchmarkTest01567.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01567" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01567.java"></node>
  </finding>


  <finding id="692" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01568</class>
    <file>BenchmarkTest01568.java</file>
    <line>61</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01568" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01568" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"></endNode>
  </finding>


  <finding id="1577" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01568</class>
    <file>BenchmarkTest01568.java</file>
    <line>69</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01568" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01568" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01568.java"></endNode>
  </finding>


  <finding id="1391" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01571</class>
    <file>BenchmarkTest01571.java</file>
    <line>51</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01571" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01571.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01571" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01571.java"></endNode>
  </finding>


  <finding id="1390" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01572</class>
    <file>BenchmarkTest01572.java</file>
    <line>56</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01572" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01572.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01572" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01572.java"></endNode>
  </finding>


  <finding id="1304" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01573</class>
    <file>BenchmarkTest01573.java</file>
    <line>56</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01573" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01573.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01573" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01573.java"></endNode>
  </finding>


  <finding id="49" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01575</class>
    <file>BenchmarkTest01575.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01575" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01575.java"></node>
  </finding>


  <finding id="623" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01577</class>
    <file>BenchmarkTest01577.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01577" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01577.java"></node>
  </finding>


  <finding id="624" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01579</class>
    <file>BenchmarkTest01579.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01579" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01579.java"></node>
  </finding>


  <finding id="625" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01580</class>
    <file>BenchmarkTest01580.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01580" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01580.java"></node>
  </finding>


  <finding id="626" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01581</class>
    <file>BenchmarkTest01581.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01581" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01581.java"></node>
  </finding>


  <finding id="627" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01582</class>
    <file>BenchmarkTest01582.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01582" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01582.java"></node>
  </finding>


  <finding id="1628" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01583</class>
    <file>BenchmarkTest01583.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01583" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01583.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01583" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01583.java"></endNode>
  </finding>


  <finding id="1579" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01584</class>
    <file>BenchmarkTest01584.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01584" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01584.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01584" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01584.java"></endNode>
  </finding>


  <finding id="1692" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01587</class>
    <file>BenchmarkTest01587.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01587" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01587.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01587" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01587.java"></endNode>
  </finding>


  <finding id="1797" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01589</class>
    <file>BenchmarkTest01589.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01589" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01589.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01589" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01589.java"></endNode>
  </finding>


  <finding id="1683" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01590</class>
    <file>BenchmarkTest01590.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01590" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01590.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01590" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01590.java"></endNode>
  </finding>


  <finding id="1581" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01592</class>
    <file>BenchmarkTest01592.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01592" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01592.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01592" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01592.java"></endNode>
  </finding>


  <finding id="1603" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01594</class>
    <file>BenchmarkTest01594.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01594" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01594.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01594" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01594.java"></endNode>
  </finding>


  <finding id="1638" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01596</class>
    <file>BenchmarkTest01596.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01596" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01596.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01596" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01596.java"></endNode>
  </finding>


  <finding id="1799" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01597</class>
    <file>BenchmarkTest01597.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01597" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01597.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01597" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01597.java"></endNode>
  </finding>


  <finding id="1800" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01598</class>
    <file>BenchmarkTest01598.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01598" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01598.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01598" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01598.java"></endNode>
  </finding>


  <finding id="827" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01600</class>
    <file>BenchmarkTest01600.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01600" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01600.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01600" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01600.java"></endNode>
  </finding>


  <finding id="845" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01601</class>
    <file>BenchmarkTest01601.java</file>
    <line>63</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01601" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01601.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01601" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01601.java"></endNode>
  </finding>


  <finding id="122" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01602</class>
    <file>BenchmarkTest01602.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01602" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01602.java"></node>
  </finding>


  <finding id="112" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01603</class>
    <file>BenchmarkTest01603.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01603" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01603.java"></node>
  </finding>


  <finding id="1899" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01604</class>
    <file>BenchmarkTest01604.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01604" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01604.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01604" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01604.java"></endNode>
  </finding>


  <finding id="1911" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01605</class>
    <file>BenchmarkTest01605.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01605" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01605.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01605" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01605.java"></endNode>
  </finding>


  <finding id="1275" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01608</class>
    <file>BenchmarkTest01608.java</file>
    <line>58</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01608" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01608.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01608" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01608.java"></endNode>
  </finding>


  <finding id="766" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01609</class>
    <file>BenchmarkTest01609.java</file>
    <line>61</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01609" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01609.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01609" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01609.java"></endNode>
  </finding>


  <finding id="1307" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01609</class>
    <file>BenchmarkTest01609.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01609" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01609.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01609" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01609.java"></endNode>
  </finding>


  <finding id="800" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01610</class>
    <file>BenchmarkTest01610.java</file>
    <line>61</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01610.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01610.java"></endNode>
  </finding>


  <finding id="1357" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01610</class>
    <file>BenchmarkTest01610.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01610.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01610.java"></endNode>
  </finding>


  <finding id="1543" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01615</class>
    <file>BenchmarkTest01615.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01615" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01615.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01615" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01615.java"></endNode>
  </finding>


  <finding id="1488" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01616</class>
    <file>BenchmarkTest01616.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01616" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01616.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01616" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01616.java"></endNode>
  </finding>


  <finding id="1504" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01617</class>
    <file>BenchmarkTest01617.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01617" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01617.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01617" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01617.java"></endNode>
  </finding>


  <finding id="1487" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01618</class>
    <file>BenchmarkTest01618.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01618" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01618.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01618" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01618.java"></endNode>
  </finding>


  <finding id="1481" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01619</class>
    <file>BenchmarkTest01619.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01619" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01619.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01619" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01619.java"></endNode>
  </finding>


  <finding id="993" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01620</class>
    <file>BenchmarkTest01620.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01620" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01620" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01620.java"></endNode>
  </finding>


  <finding id="1049" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01621</class>
    <file>BenchmarkTest01621.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01621" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01621" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01621.java"></endNode>
  </finding>


  <finding id="1109" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01622</class>
    <file>BenchmarkTest01622.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01622" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01622.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01622" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01622.java"></endNode>
  </finding>


  <finding id="1083" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01623</class>
    <file>BenchmarkTest01623.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01623" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01623" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01623.java"></endNode>
  </finding>


  <finding id="915" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01624</class>
    <file>BenchmarkTest01624.java</file>
    <line>54</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01624" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01624" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01624.java"></endNode>
  </finding>


  <finding id="1004" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01625</class>
    <file>BenchmarkTest01625.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01625" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01625" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01625.java"></endNode>
  </finding>


  <finding id="913" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01626</class>
    <file>BenchmarkTest01626.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01626" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01626" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01626.java"></endNode>
  </finding>


  <finding id="893" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01627</class>
    <file>BenchmarkTest01627.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01627" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01627" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01627.java"></endNode>
  </finding>


  <finding id="1105" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01630</class>
    <file>BenchmarkTest01630.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01630" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01630.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01630" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01630.java"></endNode>
  </finding>


  <finding id="1082" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01631</class>
    <file>BenchmarkTest01631.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01631" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01631" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01631.java"></endNode>
  </finding>


  <finding id="404" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01634</class>
    <file>BenchmarkTest01634.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01634" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java"></node>
  </finding>


  <finding id="405" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01634</class>
    <file>BenchmarkTest01634.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01634" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01634.java"></node>
  </finding>


  <finding id="406" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01637</class>
    <file>BenchmarkTest01637.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01637" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java"></node>
  </finding>


  <finding id="407" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01637</class>
    <file>BenchmarkTest01637.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01637" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01637.java"></node>
  </finding>


  <finding id="408" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01638</class>
    <file>BenchmarkTest01638.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01638" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"></node>
  </finding>


  <finding id="409" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01638</class>
    <file>BenchmarkTest01638.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01638" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01638.java"></node>
  </finding>


  <finding id="410" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01639</class>
    <file>BenchmarkTest01639.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01639" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"></node>
  </finding>


  <finding id="411" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01639</class>
    <file>BenchmarkTest01639.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01639" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01639.java"></node>
  </finding>


  <finding id="412" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01641</class>
    <file>BenchmarkTest01641.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01641" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java"></node>
  </finding>


  <finding id="413" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01641</class>
    <file>BenchmarkTest01641.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01641" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01641.java"></node>
  </finding>


  <finding id="1268" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01642</class>
    <file>BenchmarkTest01642.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01642" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01642.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01642" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01642.java"></endNode>
  </finding>


  <finding id="1249" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01643</class>
    <file>BenchmarkTest01643.java</file>
    <line>73</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01643" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01643.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01643" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01643.java"></endNode>
  </finding>


  <finding id="1285" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01645</class>
    <file>BenchmarkTest01645.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01645" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01645.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01645" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01645.java"></endNode>
  </finding>


  <finding id="1299" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01647</class>
    <file>BenchmarkTest01647.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01647" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01647" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01647.java"></endNode>
  </finding>


  <finding id="167" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01648</class>
    <file>BenchmarkTest01648.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01648" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01648.java"></node>
  </finding>


  <finding id="628" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01649</class>
    <file>BenchmarkTest01649.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01649" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01649.java"></node>
  </finding>


  <finding id="629" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01650</class>
    <file>BenchmarkTest01650.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01650" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01650.java"></node>
  </finding>


  <finding id="630" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01651</class>
    <file>BenchmarkTest01651.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01651" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01651.java"></node>
  </finding>


  <finding id="631" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01653</class>
    <file>BenchmarkTest01653.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01653" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01653.java"></node>
  </finding>


  <finding id="632" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01654</class>
    <file>BenchmarkTest01654.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01654" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01654.java"></node>
  </finding>


  <finding id="633" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01655</class>
    <file>BenchmarkTest01655.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01655" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01655.java"></node>
  </finding>


  <finding id="634" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01656</class>
    <file>BenchmarkTest01656.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01656" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01656.java"></node>
  </finding>


  <finding id="1832" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01657</class>
    <file>BenchmarkTest01657.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01657" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01657.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01657" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01657.java"></endNode>
  </finding>


  <finding id="1747" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01658</class>
    <file>BenchmarkTest01658.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01658" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01658.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01658" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01658.java"></endNode>
  </finding>


  <finding id="1575" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01660</class>
    <file>BenchmarkTest01660.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01660" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01660.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01660" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01660.java"></endNode>
  </finding>


  <finding id="1678" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01662</class>
    <file>BenchmarkTest01662.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01662" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01662.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01662" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01662.java"></endNode>
  </finding>


  <finding id="1828" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01665</class>
    <file>BenchmarkTest01665.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01665" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01665.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01665" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01665.java"></endNode>
  </finding>


  <finding id="1783" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01666</class>
    <file>BenchmarkTest01666.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01666" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01666.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01666" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01666.java"></endNode>
  </finding>


  <finding id="1686" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01667</class>
    <file>BenchmarkTest01667.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01667" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01667.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01667" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01667.java"></endNode>
  </finding>


  <finding id="1679" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01670</class>
    <file>BenchmarkTest01670.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01670" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01670.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01670" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01670.java"></endNode>
  </finding>


  <finding id="846" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01673</class>
    <file>BenchmarkTest01673.java</file>
    <line>74</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01673" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01673.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01673" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01673.java"></endNode>
  </finding>


  <finding id="826" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01674</class>
    <file>BenchmarkTest01674.java</file>
    <line>74</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01674" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01674.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01674" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01674.java"></endNode>
  </finding>


  <finding id="87" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01675</class>
    <file>BenchmarkTest01675.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01675" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01675.java"></node>
  </finding>


  <finding id="125" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01676</class>
    <file>BenchmarkTest01676.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01676" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01676.java"></node>
  </finding>


  <finding id="114" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01677</class>
    <file>BenchmarkTest01677.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01677" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01677.java"></node>
  </finding>


  <finding id="211" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01678</class>
    <file>BenchmarkTest01678.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01678" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01678.java"></node>
  </finding>


  <finding id="138" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01679</class>
    <file>BenchmarkTest01679.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01679" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01679.java"></node>
  </finding>


  <finding id="160" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01680</class>
    <file>BenchmarkTest01680.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01680" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01680.java"></node>
  </finding>


  <finding id="173" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01681</class>
    <file>BenchmarkTest01681.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01681" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01681.java"></node>
  </finding>


  <finding id="1217" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01682</class>
    <file>BenchmarkTest01682.java</file>
    <line>83</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01682" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01682" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"></endNode>
  </finding>


  <finding id="1916" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01682</class>
    <file>BenchmarkTest01682.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01682" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01682" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01682.java"></endNode>
  </finding>


  <finding id="1205" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01683</class>
    <file>BenchmarkTest01683.java</file>
    <line>83</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01683" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01683" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"></endNode>
  </finding>


  <finding id="1898" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01683</class>
    <file>BenchmarkTest01683.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01683" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01683" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01683.java"></endNode>
  </finding>


  <finding id="1907" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01684</class>
    <file>BenchmarkTest01684.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01684" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01684.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01684" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01684.java"></endNode>
  </finding>


  <finding id="789" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01685</class>
    <file>BenchmarkTest01685.java</file>
    <line>85</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01685" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01685.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01685" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01685.java"></endNode>
  </finding>


  <finding id="1369" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01687</class>
    <file>BenchmarkTest01687.java</file>
    <line>85</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01687" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01687.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01687" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01687.java"></endNode>
  </finding>


  <finding id="751" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01689</class>
    <file>BenchmarkTest01689.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01689" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01689.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01689" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01689.java"></endNode>
  </finding>


  <finding id="823" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01690</class>
    <file>BenchmarkTest01690.java</file>
    <line>68</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01690" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01690.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01690" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01690.java"></endNode>
  </finding>


  <finding id="771" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01691</class>
    <file>BenchmarkTest01691.java</file>
    <line>68</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01691" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01691.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01691" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01691.java"></endNode>
  </finding>


  <finding id="1356" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01692</class>
    <file>BenchmarkTest01692.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01692" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01692.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01692" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01692.java"></endNode>
  </finding>


  <finding id="1344" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01693</class>
    <file>BenchmarkTest01693.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01693" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01693.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01693" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01693.java"></endNode>
  </finding>


  <finding id="1554" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01708</class>
    <file>BenchmarkTest01708.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01708" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01708.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01708" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01708.java"></endNode>
  </finding>


  <finding id="1534" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01709</class>
    <file>BenchmarkTest01709.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01709" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01709.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01709" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01709.java"></endNode>
  </finding>


  <finding id="1480" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01710</class>
    <file>BenchmarkTest01710.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01710" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01710.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01710" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01710.java"></endNode>
  </finding>


  <finding id="1472" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01711</class>
    <file>BenchmarkTest01711.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01711" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01711.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01711" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01711.java"></endNode>
  </finding>


  <finding id="916" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01712</class>
    <file>BenchmarkTest01712.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01712" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01712" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01712.java"></endNode>
  </finding>


  <finding id="1095" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01715</class>
    <file>BenchmarkTest01715.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01715" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01715" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01715.java"></endNode>
  </finding>


  <finding id="1158" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01716</class>
    <file>BenchmarkTest01716.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01716" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01716" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01716.java"></endNode>
  </finding>


  <finding id="1056" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01717</class>
    <file>BenchmarkTest01717.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01717" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01717.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01717" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01717.java"></endNode>
  </finding>


  <finding id="1036" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01718</class>
    <file>BenchmarkTest01718.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01718" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01718" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01718.java"></endNode>
  </finding>


  <finding id="1015" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01719</class>
    <file>BenchmarkTest01719.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01719" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01719.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01719" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01719.java"></endNode>
  </finding>


  <finding id="919" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01720</class>
    <file>BenchmarkTest01720.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01720" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01720" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01720.java"></endNode>
  </finding>


  <finding id="970" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01721</class>
    <file>BenchmarkTest01721.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01721" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01721" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01721.java"></endNode>
  </finding>


  <finding id="1100" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01723</class>
    <file>BenchmarkTest01723.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01723" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01723" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01723.java"></endNode>
  </finding>


  <finding id="1155" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01724</class>
    <file>BenchmarkTest01724.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01724" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01724" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01724.java"></endNode>
  </finding>


  <finding id="1054" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01725</class>
    <file>BenchmarkTest01725.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **, **)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01725" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01725" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01725.java"></endNode>
  </finding>


  <finding id="1035" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01726</class>
    <file>BenchmarkTest01726.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01726" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01726" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01726.java"></endNode>
  </finding>


  <finding id="1031" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01727</class>
    <file>BenchmarkTest01727.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01727" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01727" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01727.java"></endNode>
  </finding>


  <finding id="1014" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01728</class>
    <file>BenchmarkTest01728.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01728" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01728" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01728.java"></endNode>
  </finding>


  <finding id="966" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01730</class>
    <file>BenchmarkTest01730.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01730" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01730" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01730.java"></endNode>
  </finding>


  <finding id="1098" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01731</class>
    <file>BenchmarkTest01731.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01731" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01731" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01731.java"></endNode>
  </finding>


  <finding id="1058" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01733</class>
    <file>BenchmarkTest01733.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01733" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01733" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01733.java"></endNode>
  </finding>


  <finding id="1187" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01734</class>
    <file>BenchmarkTest01734.java</file>
    <line>78</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01734" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01734" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"></endNode>
  </finding>


  <finding id="1738" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01734</class>
    <file>BenchmarkTest01734.java</file>
    <line>81</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01734" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01734" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01734.java"></endNode>
  </finding>


  <finding id="1184" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01736</class>
    <file>BenchmarkTest01736.java</file>
    <line>78</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"></endNode>
  </finding>


  <finding id="1711" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01736</class>
    <file>BenchmarkTest01736.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01736" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01736.java"></endNode>
  </finding>


  <finding id="414" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01740</class>
    <file>BenchmarkTest01740.java</file>
    <line>52</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01740" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java"></node>
  </finding>


  <finding id="415" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01740</class>
    <file>BenchmarkTest01740.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01740" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01740.java"></node>
  </finding>


  <finding id="416" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01741</class>
    <file>BenchmarkTest01741.java</file>
    <line>52</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01741" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java"></node>
  </finding>


  <finding id="417" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01741</class>
    <file>BenchmarkTest01741.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01741" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01741.java"></node>
  </finding>


  <finding id="418" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01742</class>
    <file>BenchmarkTest01742.java</file>
    <line>52</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01742" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java"></node>
  </finding>


  <finding id="419" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01742</class>
    <file>BenchmarkTest01742.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01742" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01742.java"></node>
  </finding>


  <finding id="635" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01757</class>
    <file>BenchmarkTest01757.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01757" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java"></node>
  </finding>


  <finding id="636" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01757</class>
    <file>BenchmarkTest01757.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01757" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01757.java"></node>
  </finding>


  <finding id="637" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01761</class>
    <file>BenchmarkTest01761.java</file>
    <line>49</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01761" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01761.java"></node>
  </finding>


  <finding id="638" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01765</class>
    <file>BenchmarkTest01765.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01765" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01765.java"></node>
  </finding>


  <finding id="639" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01766</class>
    <file>BenchmarkTest01766.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01766" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01766.java"></node>
  </finding>


  <finding id="46" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01781</class>
    <file>BenchmarkTest01781.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01781" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01781.java"></node>
  </finding>


  <finding id="197" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01782</class>
    <file>BenchmarkTest01782.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01782" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01782.java"></node>
  </finding>


  <finding id="28" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01783</class>
    <file>BenchmarkTest01783.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01783" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01783.java"></node>
  </finding>


  <finding id="14" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01784</class>
    <file>BenchmarkTest01784.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01784" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01784.java"></node>
  </finding>


  <finding id="3" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01785</class>
    <file>BenchmarkTest01785.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01785" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01785.java"></node>
  </finding>


  <finding id="36" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01786</class>
    <file>BenchmarkTest01786.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01786" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01786.java"></node>
  </finding>


  <finding id="193" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01787</class>
    <file>BenchmarkTest01787.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01787" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01787.java"></node>
  </finding>


  <finding id="175" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01788</class>
    <file>BenchmarkTest01788.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01788" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01788.java"></node>
  </finding>


  <finding id="1200" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01789</class>
    <file>BenchmarkTest01789.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01789" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01789.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01789" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01789.java"></endNode>
  </finding>


  <finding id="1276" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01794</class>
    <file>BenchmarkTest01794.java</file>
    <line>71</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01794" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01794.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01794" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01794.java"></endNode>
  </finding>


  <finding id="1413" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01795</class>
    <file>BenchmarkTest01795.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01795" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01795.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01795" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01795.java"></endNode>
  </finding>


  <finding id="1412" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01796</class>
    <file>BenchmarkTest01796.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01796" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01796.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01796" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01796.java"></endNode>
  </finding>


  <finding id="420" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01822</class>
    <file>BenchmarkTest01822.java</file>
    <line>74</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01822" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"></node>
  </finding>


  <finding id="421" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01822</class>
    <file>BenchmarkTest01822.java</file>
    <line>77</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01822" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01822.java"></node>
  </finding>


  <finding id="422" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01823</class>
    <file>BenchmarkTest01823.java</file>
    <line>74</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01823" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"></node>
  </finding>


  <finding id="423" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01823</class>
    <file>BenchmarkTest01823.java</file>
    <line>77</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01823" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01823.java"></node>
  </finding>


  <finding id="424" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01829</class>
    <file>BenchmarkTest01829.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01829" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"></node>
  </finding>


  <finding id="425" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01829</class>
    <file>BenchmarkTest01829.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01829" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01829.java"></node>
  </finding>


  <finding id="426" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01830</class>
    <file>BenchmarkTest01830.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01830" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"></node>
  </finding>


  <finding id="427" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01830</class>
    <file>BenchmarkTest01830.java</file>
    <line>70</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01830" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01830.java"></node>
  </finding>


  <finding id="701" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01831</class>
    <file>BenchmarkTest01831.java</file>
    <line>73</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01831" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01831" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"></endNode>
  </finding>


  <finding id="1693" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01831</class>
    <file>BenchmarkTest01831.java</file>
    <line>81</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01831" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01831" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01831.java"></endNode>
  </finding>


  <finding id="699" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01832</class>
    <file>BenchmarkTest01832.java</file>
    <line>73</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01832" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01832" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"></endNode>
  </finding>


  <finding id="1637" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01832</class>
    <file>BenchmarkTest01832.java</file>
    <line>81</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01832" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01832" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01832.java"></endNode>
  </finding>


  <finding id="1404" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01833</class>
    <file>BenchmarkTest01833.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01833" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01833" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01833.java"></endNode>
  </finding>


  <finding id="1273" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01835</class>
    <file>BenchmarkTest01835.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01835" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01835" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01835.java"></endNode>
  </finding>


  <finding id="1233" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01836</class>
    <file>BenchmarkTest01836.java</file>
    <line>74</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01836" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01836" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01836.java"></endNode>
  </finding>


  <finding id="1426" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01839</class>
    <file>BenchmarkTest01839.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01839" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01839" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01839.java"></endNode>
  </finding>


  <finding id="1294" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01840</class>
    <file>BenchmarkTest01840.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01840" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01840" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01840.java"></endNode>
  </finding>


  <finding id="187" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01842</class>
    <file>BenchmarkTest01842.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01842" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01842.java"></node>
  </finding>


  <finding id="39" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01843</class>
    <file>BenchmarkTest01843.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01843" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01843.java"></node>
  </finding>


  <finding id="640" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01844</class>
    <file>BenchmarkTest01844.java</file>
    <line>69</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01844" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"></node>
  </finding>


  <finding id="641" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01844</class>
    <file>BenchmarkTest01844.java</file>
    <line>71</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01844" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01844.java"></node>
  </finding>


  <finding id="642" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01845</class>
    <file>BenchmarkTest01845.java</file>
    <line>69</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01845" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"></node>
  </finding>


  <finding id="643" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01845</class>
    <file>BenchmarkTest01845.java</file>
    <line>71</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01845" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01845.java"></node>
  </finding>


  <finding id="644" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01846</class>
    <file>BenchmarkTest01846.java</file>
    <line>69</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01846" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"></node>
  </finding>


  <finding id="645" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01846</class>
    <file>BenchmarkTest01846.java</file>
    <line>71</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01846" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01846.java"></node>
  </finding>


  <finding id="838" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01850</class>
    <file>BenchmarkTest01850.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01850" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01850" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01850.java"></endNode>
  </finding>


  <finding id="740" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01851</class>
    <file>BenchmarkTest01851.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01851" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01851" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01851.java"></endNode>
  </finding>


  <finding id="779" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01852</class>
    <file>BenchmarkTest01852.java</file>
    <line>75</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01852" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01852" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01852.java"></endNode>
  </finding>


  <finding id="9" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01853</class>
    <file>BenchmarkTest01853.java</file>
    <line>64</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01853" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01853.java"></node>
  </finding>


  <finding id="20" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01854</class>
    <file>BenchmarkTest01854.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01854" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01854.java"></node>
  </finding>


  <finding id="196" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01855</class>
    <file>BenchmarkTest01855.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01855" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01855.java"></node>
  </finding>


  <finding id="47" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01856</class>
    <file>BenchmarkTest01856.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01856" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01856.java"></node>
  </finding>


  <finding id="58" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01857</class>
    <file>BenchmarkTest01857.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01857" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01857.java"></node>
  </finding>


  <finding id="68" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01858</class>
    <file>BenchmarkTest01858.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01858" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01858.java"></node>
  </finding>


  <finding id="134" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01859</class>
    <file>BenchmarkTest01859.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01859" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01859.java"></node>
  </finding>


  <finding id="97" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01860</class>
    <file>BenchmarkTest01860.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01860" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01860.java"></node>
  </finding>


  <finding id="1194" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01861</class>
    <file>BenchmarkTest01861.java</file>
    <line>84</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01861" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"></startNode>
    <endNode lineNo="84" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01861" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"></endNode>
  </finding>


  <finding id="1880" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01861</class>
    <file>BenchmarkTest01861.java</file>
    <line>78</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01861" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01861" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01861.java"></endNode>
  </finding>


  <finding id="1883" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01862</class>
    <file>BenchmarkTest01862.java</file>
    <line>78</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01862" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01862.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01862" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01862.java"></endNode>
  </finding>


  <finding id="1926" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01863</class>
    <file>BenchmarkTest01863.java</file>
    <line>78</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01863" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01863.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01863" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01863.java"></endNode>
  </finding>


  <finding id="746" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01864</class>
    <file>BenchmarkTest01864.java</file>
    <line>73</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01864" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01864.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01864" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01864.java"></endNode>
  </finding>


  <finding id="753" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01865</class>
    <file>BenchmarkTest01865.java</file>
    <line>73</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01865" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01865.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01865" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01865.java"></endNode>
  </finding>


  <finding id="1489" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01872</class>
    <file>BenchmarkTest01872.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01872" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01872" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01872.java"></endNode>
  </finding>


  <finding id="1493" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01873</class>
    <file>BenchmarkTest01873.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01873" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01873" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01873.java"></endNode>
  </finding>


  <finding id="1499" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01874</class>
    <file>BenchmarkTest01874.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01874" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01874" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01874.java"></endNode>
  </finding>


  <finding id="1528" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01875</class>
    <file>BenchmarkTest01875.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01875" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01875" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01875.java"></endNode>
  </finding>


  <finding id="1550" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01876</class>
    <file>BenchmarkTest01876.java</file>
    <line>64</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01876" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01876" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01876.java"></endNode>
  </finding>


  <finding id="1041" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01879</class>
    <file>BenchmarkTest01879.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01879" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01879" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01879.java"></endNode>
  </finding>


  <finding id="941" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01881</class>
    <file>BenchmarkTest01881.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01881" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01881" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01881.java"></endNode>
  </finding>


  <finding id="961" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01882</class>
    <file>BenchmarkTest01882.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01882" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01882" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01882.java"></endNode>
  </finding>


  <finding id="1043" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01883</class>
    <file>BenchmarkTest01883.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01883" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01883" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01883.java"></endNode>
  </finding>


  <finding id="1080" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01885</class>
    <file>BenchmarkTest01885.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01885" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01885" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01885.java"></endNode>
  </finding>


  <finding id="1040" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01887</class>
    <file>BenchmarkTest01887.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01887" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01887" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01887.java"></endNode>
  </finding>


  <finding id="1057" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01888</class>
    <file>BenchmarkTest01888.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01888" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01888" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01888.java"></endNode>
  </finding>


  <finding id="1147" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01889</class>
    <file>BenchmarkTest01889.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01889" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01889" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01889.java"></endNode>
  </finding>


  <finding id="953" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01890</class>
    <file>BenchmarkTest01890.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01890" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01890" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01890.java"></endNode>
  </finding>


  <finding id="1046" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01891</class>
    <file>BenchmarkTest01891.java</file>
    <line>67</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01891" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01891" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01891.java"></endNode>
  </finding>


  <finding id="1190" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01892</class>
    <file>BenchmarkTest01892.java</file>
    <line>79</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01892" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"></startNode>
    <endNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01892" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"></endNode>
  </finding>


  <finding id="1831" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01892</class>
    <file>BenchmarkTest01892.java</file>
    <line>82</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01892" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"></startNode>
    <endNode lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01892" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01892.java"></endNode>
  </finding>


  <finding id="1186" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01894</class>
    <file>BenchmarkTest01894.java</file>
    <line>79</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01894" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"></startNode>
    <endNode lineNo="79" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01894" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"></endNode>
  </finding>


  <finding id="1726" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01894</class>
    <file>BenchmarkTest01894.java</file>
    <line>78</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
javax.servlet.http.Cookie[] javax.servlet.ServletRequest.getCookies()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01894" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01894" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01894.java"></endNode>
  </finding>


  <finding id="428" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01895</class>
    <file>BenchmarkTest01895.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01895" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java"></node>
  </finding>


  <finding id="429" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01895</class>
    <file>BenchmarkTest01895.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01895" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01895.java"></node>
  </finding>


  <finding id="430" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01897</class>
    <file>BenchmarkTest01897.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01897" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"></node>
  </finding>


  <finding id="431" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01897</class>
    <file>BenchmarkTest01897.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01897" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01897.java"></node>
  </finding>


  <finding id="432" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01898</class>
    <file>BenchmarkTest01898.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01898" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"></node>
  </finding>


  <finding id="433" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01898</class>
    <file>BenchmarkTest01898.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01898" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01898.java"></node>
  </finding>


  <finding id="434" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01900</class>
    <file>BenchmarkTest01900.java</file>
    <line>57</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01900" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java"></node>
  </finding>


  <finding id="435" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01900</class>
    <file>BenchmarkTest01900.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01900" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01900.java"></node>
  </finding>


  <finding id="436" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01901</class>
    <file>BenchmarkTest01901.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01901" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01901.java"></node>
  </finding>


  <finding id="698" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01902</class>
    <file>BenchmarkTest01902.java</file>
    <line>63</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01902" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01902" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"></endNode>
  </finding>


  <finding id="1632" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01902</class>
    <file>BenchmarkTest01902.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01902" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01902" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01902.java"></endNode>
  </finding>


  <finding id="1251" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01904</class>
    <file>BenchmarkTest01904.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01904" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01904.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01904" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01904.java"></endNode>
  </finding>


  <finding id="1420" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01906</class>
    <file>BenchmarkTest01906.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01906" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01906" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01906.java"></endNode>
  </finding>


  <finding id="1282" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01907</class>
    <file>BenchmarkTest01907.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01907" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01907" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01907.java"></endNode>
  </finding>


  <finding id="1289" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01908</class>
    <file>BenchmarkTest01908.java</file>
    <line>57</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
static java.nio.file.Path java.nio.file.Paths.get(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01908" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01908.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01908" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01908.java"></endNode>
  </finding>


  <finding id="1464" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01908</class>
    <file>BenchmarkTest01908.java</file>
    <line>58</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
static java.io.InputStream java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01908" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01908.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01908" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01908.java"></endNode>
  </finding>


  <finding id="53" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01910</class>
    <file>BenchmarkTest01910.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01910" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01910.java"></node>
  </finding>


  <finding id="646" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01911</class>
    <file>BenchmarkTest01911.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01911" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java"></node>
  </finding>


  <finding id="647" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01911</class>
    <file>BenchmarkTest01911.java</file>
    <line>61</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01911" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01911.java"></node>
  </finding>


  <finding id="1633" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01916</class>
    <file>BenchmarkTest01916.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01916" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01916.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01916" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01916.java"></endNode>
  </finding>


  <finding id="1842" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01919</class>
    <file>BenchmarkTest01919.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01919" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01919.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01919" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01919.java"></endNode>
  </finding>


  <finding id="1570" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01920</class>
    <file>BenchmarkTest01920.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01920" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01920.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01920" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01920.java"></endNode>
  </finding>


  <finding id="1590" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01921</class>
    <file>BenchmarkTest01921.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01921" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01921.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01921" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01921.java"></endNode>
  </finding>


  <finding id="1811" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01922</class>
    <file>BenchmarkTest01922.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01922" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01922.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01922" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01922.java"></endNode>
  </finding>


  <finding id="1617" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01923</class>
    <file>BenchmarkTest01923.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01923" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01923.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01923" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01923.java"></endNode>
  </finding>


  <finding id="1661" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01925</class>
    <file>BenchmarkTest01925.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01925" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01925.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01925" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01925.java"></endNode>
  </finding>


  <finding id="1761" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01926</class>
    <file>BenchmarkTest01926.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01926" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01926.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01926" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01926.java"></endNode>
  </finding>


  <finding id="1844" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01927</class>
    <file>BenchmarkTest01927.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01927" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01927.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01927" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01927.java"></endNode>
  </finding>


  <finding id="784" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01928</class>
    <file>BenchmarkTest01928.java</file>
    <line>67</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01928" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01928.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01928" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01928.java"></endNode>
  </finding>


  <finding id="796" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01929</class>
    <file>BenchmarkTest01929.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01929" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01929.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01929" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01929.java"></endNode>
  </finding>


  <finding id="186" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01930</class>
    <file>BenchmarkTest01930.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01930" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01930.java"></node>
  </finding>


  <finding id="35" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01931</class>
    <file>BenchmarkTest01931.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01931" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01931.java"></node>
  </finding>


  <finding id="57" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01932</class>
    <file>BenchmarkTest01932.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01932" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01932.java"></node>
  </finding>


  <finding id="79" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01933</class>
    <file>BenchmarkTest01933.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01933" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01933.java"></node>
  </finding>


  <finding id="143" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01934</class>
    <file>BenchmarkTest01934.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01934" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01934.java"></node>
  </finding>


  <finding id="1929" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01935</class>
    <file>BenchmarkTest01935.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01935" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01935.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01935" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01935.java"></endNode>
  </finding>


  <finding id="786" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01936</class>
    <file>BenchmarkTest01936.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01936" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01936.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01936" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01936.java"></endNode>
  </finding>


  <finding id="799" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01937</class>
    <file>BenchmarkTest01937.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01937" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01937.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01937" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01937.java"></endNode>
  </finding>


  <finding id="770" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01938</class>
    <file>BenchmarkTest01938.java</file>
    <line>76</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01938" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01938.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01938" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01938.java"></endNode>
  </finding>


  <finding id="1318" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01938</class>
    <file>BenchmarkTest01938.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01938" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01938.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01938" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01938.java"></endNode>
  </finding>


  <finding id="1366" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01939</class>
    <file>BenchmarkTest01939.java</file>
    <line>60</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01939" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01939.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01939" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01939.java"></endNode>
  </finding>


  <finding id="750" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01940</class>
    <file>BenchmarkTest01940.java</file>
    <line>63</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01940" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01940.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01940" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01940.java"></endNode>
  </finding>


  <finding id="817" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01942</class>
    <file>BenchmarkTest01942.java</file>
    <line>63</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01942" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01942.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01942" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01942.java"></endNode>
  </finding>


  <finding id="1375" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01942</class>
    <file>BenchmarkTest01942.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01942" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01942.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01942" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01942.java"></endNode>
  </finding>


  <finding id="1437" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01943</class>
    <file>BenchmarkTest01943.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01943" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01943.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01943" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01943.java"></endNode>
  </finding>


  <finding id="787" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01944</class>
    <file>BenchmarkTest01944.java</file>
    <line>63</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01944" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01944.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01944" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01944.java"></endNode>
  </finding>


  <finding id="1343" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01944</class>
    <file>BenchmarkTest01944.java</file>
    <line>63</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01944" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01944.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01944" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01944.java"></endNode>
  </finding>


  <finding id="1531" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01955</class>
    <file>BenchmarkTest01955.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01955" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01955.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01955" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01955.java"></endNode>
  </finding>


  <finding id="1497" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01958</class>
    <file>BenchmarkTest01958.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01958" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01958.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01958" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01958.java"></endNode>
  </finding>


  <finding id="1516" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01960</class>
    <file>BenchmarkTest01960.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01960" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01960.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01960" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01960.java"></endNode>
  </finding>


  <finding id="1029" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01962</class>
    <file>BenchmarkTest01962.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01962" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01962.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01962" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01962.java"></endNode>
  </finding>


  <finding id="1052" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01963</class>
    <file>BenchmarkTest01963.java</file>
    <line>56</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01963" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01963" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01963.java"></endNode>
  </finding>


  <finding id="1139" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01964</class>
    <file>BenchmarkTest01964.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01964" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01964" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01964.java"></endNode>
  </finding>


  <finding id="932" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01968</class>
    <file>BenchmarkTest01968.java</file>
    <line>56</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01968" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01968.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01968" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01968.java"></endNode>
  </finding>


  <finding id="1030" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01970</class>
    <file>BenchmarkTest01970.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01970" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01970" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01970.java"></endNode>
  </finding>


  <finding id="1051" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01971</class>
    <file>BenchmarkTest01971.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01971" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01971" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01971.java"></endNode>
  </finding>


  <finding id="1143" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01972</class>
    <file>BenchmarkTest01972.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01972" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01972" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01972.java"></endNode>
  </finding>


  <finding id="1179" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01974</class>
    <file>BenchmarkTest01974.java</file>
    <line>69</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01974" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01974" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"></endNode>
  </finding>


  <finding id="1671" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01974</class>
    <file>BenchmarkTest01974.java</file>
    <line>72</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getHeader(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01974" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01974" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01974.java"></endNode>
  </finding>


  <finding id="437" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01978</class>
    <file>BenchmarkTest01978.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01978" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"></node>
  </finding>


  <finding id="438" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01978</class>
    <file>BenchmarkTest01978.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01978" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01978.java"></node>
  </finding>


  <finding id="439" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01980</class>
    <file>BenchmarkTest01980.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01980" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java"></node>
  </finding>


  <finding id="440" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01980</class>
    <file>BenchmarkTest01980.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01980" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01980.java"></node>
  </finding>


  <finding id="441" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01981</class>
    <file>BenchmarkTest01981.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01981" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java"></node>
  </finding>


  <finding id="442" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01981</class>
    <file>BenchmarkTest01981.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01981" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01981.java"></node>
  </finding>


  <finding id="443" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01982</class>
    <file>BenchmarkTest01982.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01982" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01982.java"></node>
  </finding>


  <finding id="1321" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01983</class>
    <file>BenchmarkTest01983.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01983" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01983.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01983" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01983.java"></endNode>
  </finding>


  <finding id="1240" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01985</class>
    <file>BenchmarkTest01985.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01985" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01985.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01985" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01985.java"></endNode>
  </finding>


  <finding id="1247" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01987</class>
    <file>BenchmarkTest01987.java</file>
    <line>73</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01987" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01987.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01987" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01987.java"></endNode>
  </finding>


  <finding id="1314" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01988</class>
    <file>BenchmarkTest01988.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01988" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01988.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01988" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01988.java"></endNode>
  </finding>


  <finding id="1279" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01989</class>
    <file>BenchmarkTest01989.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01989" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01989" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01989.java"></endNode>
  </finding>


  <finding id="42" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01992</class>
    <file>BenchmarkTest01992.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01992" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01992.java"></node>
  </finding>


  <finding id="648" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01996</class>
    <file>BenchmarkTest01996.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01996" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01996.java"></node>
  </finding>


  <finding id="649" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01997</class>
    <file>BenchmarkTest01997.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01997" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01997.java"></node>
  </finding>


  <finding id="650" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01998</class>
    <file>BenchmarkTest01998.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01998" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01998.java"></node>
  </finding>


  <finding id="180" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest01999</class>
    <file>BenchmarkTest01999.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest01999" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest01999.java"></node>
  </finding>


  <finding id="59" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02000</class>
    <file>BenchmarkTest02000.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02000" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02000.java"></node>
  </finding>


  <finding id="96" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02001</class>
    <file>BenchmarkTest02001.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02001" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02001.java"></node>
  </finding>


  <finding id="30" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02002</class>
    <file>BenchmarkTest02002.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02002" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02002.java"></node>
  </finding>


  <finding id="18" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02003</class>
    <file>BenchmarkTest02003.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02003" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02003.java"></node>
  </finding>


  <finding id="10" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02004</class>
    <file>BenchmarkTest02004.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02004" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02004.java"></node>
  </finding>


  <finding id="1198" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02005</class>
    <file>BenchmarkTest02005.java</file>
    <line>83</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"></endNode>
  </finding>


  <finding id="1888" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02005</class>
    <file>BenchmarkTest02005.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02005" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02005.java"></endNode>
  </finding>


  <finding id="1894" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02006</class>
    <file>BenchmarkTest02006.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02006" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02006.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02006" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02006.java"></endNode>
  </finding>


  <finding id="1498" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02015</class>
    <file>BenchmarkTest02015.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02015" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02015.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02015" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02015.java"></endNode>
  </finding>


  <finding id="1544" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02016</class>
    <file>BenchmarkTest02016.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.http.HttpServletRequest.getHeaderNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02016" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02016.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02016" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02016.java"></endNode>
  </finding>


  <finding id="444" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02017</class>
    <file>BenchmarkTest02017.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02017" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java"></node>
  </finding>


  <finding id="445" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02017</class>
    <file>BenchmarkTest02017.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02017" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02017.java"></node>
  </finding>


  <finding id="446" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02018</class>
    <file>BenchmarkTest02018.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02018" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java"></node>
  </finding>


  <finding id="447" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02018</class>
    <file>BenchmarkTest02018.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02018" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02018.java"></node>
  </finding>


  <finding id="448" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02019</class>
    <file>BenchmarkTest02019.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02019" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java"></node>
  </finding>


  <finding id="449" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02019</class>
    <file>BenchmarkTest02019.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02019" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02019.java"></node>
  </finding>


  <finding id="450" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02020</class>
    <file>BenchmarkTest02020.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02020" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java"></node>
  </finding>


  <finding id="451" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02020</class>
    <file>BenchmarkTest02020.java</file>
    <line>68</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02020" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02020.java"></node>
  </finding>


  <finding id="452" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02022</class>
    <file>BenchmarkTest02022.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02022" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java"></node>
  </finding>


  <finding id="453" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02022</class>
    <file>BenchmarkTest02022.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02022" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02022.java"></node>
  </finding>


  <finding id="454" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02023</class>
    <file>BenchmarkTest02023.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02023" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java"></node>
  </finding>


  <finding id="455" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02023</class>
    <file>BenchmarkTest02023.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02023" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02023.java"></node>
  </finding>


  <finding id="456" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02024</class>
    <file>BenchmarkTest02024.java</file>
    <line>69</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02024" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02024.java"></node>
  </finding>


  <finding id="1382" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02026</class>
    <file>BenchmarkTest02026.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02026" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02026.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02026" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02026.java"></endNode>
  </finding>


  <finding id="1319" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02027</class>
    <file>BenchmarkTest02027.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02027" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02027.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02027" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02027.java"></endNode>
  </finding>


  <finding id="1389" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02032</class>
    <file>BenchmarkTest02032.java</file>
    <line>60</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02032" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02032.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02032" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02032.java"></endNode>
  </finding>


  <finding id="1381" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02034</class>
    <file>BenchmarkTest02034.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02034" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02034" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02034.java"></endNode>
  </finding>


  <finding id="709" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02036</class>
    <file>BenchmarkTest02036.java</file>
    <line>67</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02036" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02036" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"></endNode>
  </finding>


  <finding id="1740" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02036</class>
    <file>BenchmarkTest02036.java</file>
    <line>75</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02036" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02036" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02036.java"></endNode>
  </finding>


  <finding id="707" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02037</class>
    <file>BenchmarkTest02037.java</file>
    <line>67</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02037" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02037" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"></endNode>
  </finding>


  <finding id="1719" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02037</class>
    <file>BenchmarkTest02037.java</file>
    <line>75</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02037" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02037" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02037.java"></endNode>
  </finding>


  <finding id="217" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02038</class>
    <file>BenchmarkTest02038.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02038" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02038.java"></node>
  </finding>


  <finding id="132" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02039</class>
    <file>BenchmarkTest02039.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02039" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02039.java"></node>
  </finding>


  <finding id="169" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02040</class>
    <file>BenchmarkTest02040.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02040" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02040.java"></node>
  </finding>


  <finding id="651" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02042</class>
    <file>BenchmarkTest02042.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02042" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02042.java"></node>
  </finding>


  <finding id="652" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02043</class>
    <file>BenchmarkTest02043.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02043" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02043.java"></node>
  </finding>


  <finding id="653" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02044</class>
    <file>BenchmarkTest02044.java</file>
    <line>59</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02044" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02044.java"></node>
  </finding>


  <finding id="1827" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02046</class>
    <file>BenchmarkTest02046.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02046" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02046.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02046" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02046.java"></endNode>
  </finding>


  <finding id="1752" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02047</class>
    <file>BenchmarkTest02047.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02047" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02047.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02047" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02047.java"></endNode>
  </finding>


  <finding id="1779" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02050</class>
    <file>BenchmarkTest02050.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02050" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02050.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02050" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02050.java"></endNode>
  </finding>


  <finding id="1684" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02051</class>
    <file>BenchmarkTest02051.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02051" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02051.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02051" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02051.java"></endNode>
  </finding>


  <finding id="1826" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02054</class>
    <file>BenchmarkTest02054.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02054" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02054.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02054" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02054.java"></endNode>
  </finding>


  <finding id="1748" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02055</class>
    <file>BenchmarkTest02055.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02055" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02055.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02055" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02055.java"></endNode>
  </finding>


  <finding id="1656" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02056</class>
    <file>BenchmarkTest02056.java</file>
    <line>56</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02056" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02056.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02056" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02056.java"></endNode>
  </finding>


  <finding id="1640" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02057</class>
    <file>BenchmarkTest02057.java</file>
    <line>59</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02057" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02057.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02057" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02057.java"></endNode>
  </finding>


  <finding id="742" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02058</class>
    <file>BenchmarkTest02058.java</file>
    <line>67</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02058" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02058.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02058" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02058.java"></endNode>
  </finding>


  <finding id="854" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02059</class>
    <file>BenchmarkTest02059.java</file>
    <line>67</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.lang.String[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02059" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02059.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02059" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02059.java"></endNode>
  </finding>


  <finding id="129" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02060</class>
    <file>BenchmarkTest02060.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02060" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02060.java"></node>
  </finding>


  <finding id="100" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02061</class>
    <file>BenchmarkTest02061.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02061" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02061.java"></node>
  </finding>


  <finding id="205" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02062</class>
    <file>BenchmarkTest02062.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02062" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02062.java"></node>
  </finding>


  <finding id="130" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02063</class>
    <file>BenchmarkTest02063.java</file>
    <line>55</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02063" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02063.java"></node>
  </finding>


  <finding id="1893" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02064</class>
    <file>BenchmarkTest02064.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02064" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02064.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02064" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02064.java"></endNode>
  </finding>


  <finding id="1890" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02065</class>
    <file>BenchmarkTest02065.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02065" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02065.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02065" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02065.java"></endNode>
  </finding>


  <finding id="1889" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02066</class>
    <file>BenchmarkTest02066.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02066" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02066.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02066" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02066.java"></endNode>
  </finding>


  <finding id="1265" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02068</class>
    <file>BenchmarkTest02068.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02068" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02068.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02068" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02068.java"></endNode>
  </finding>


  <finding id="847" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02070</class>
    <file>BenchmarkTest02070.java</file>
    <line>59</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02070" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02070.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02070" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02070.java"></endNode>
  </finding>


  <finding id="1429" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02070</class>
    <file>BenchmarkTest02070.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02070" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02070.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02070" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02070.java"></endNode>
  </finding>


  <finding id="1486" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02084</class>
    <file>BenchmarkTest02084.java</file>
    <line>56</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02084" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02084.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02084" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02084.java"></endNode>
  </finding>


  <finding id="1483" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02085</class>
    <file>BenchmarkTest02085.java</file>
    <line>56</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02085" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02085.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02085" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02085.java"></endNode>
  </finding>


  <finding id="918" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02087</class>
    <file>BenchmarkTest02087.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02087" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02087.java"></endNode>
  </finding>


  <finding id="1128" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02088</class>
    <file>BenchmarkTest02088.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02088" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02088" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02088.java"></endNode>
  </finding>


  <finding id="1093" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02090</class>
    <file>BenchmarkTest02090.java</file>
    <line>58</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02090" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02090" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02090.java"></endNode>
  </finding>


  <finding id="1149" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02091</class>
    <file>BenchmarkTest02091.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02091" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02091" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02091.java"></endNode>
  </finding>


  <finding id="912" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02092</class>
    <file>BenchmarkTest02092.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02092" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02092" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02092.java"></endNode>
  </finding>


  <finding id="880" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02094</class>
    <file>BenchmarkTest02094.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02094" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02094" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02094.java"></endNode>
  </finding>


  <finding id="1121" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02096</class>
    <file>BenchmarkTest02096.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02096" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02096.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02096" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02096.java"></endNode>
  </finding>


  <finding id="986" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02099</class>
    <file>BenchmarkTest02099.java</file>
    <line>59</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02099" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02099.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02099" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02099.java"></endNode>
  </finding>


  <finding id="1191" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02100</class>
    <file>BenchmarkTest02100.java</file>
    <line>71</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02100" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02100" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"></endNode>
  </finding>


  <finding id="1843" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02100</class>
    <file>BenchmarkTest02100.java</file>
    <line>74</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getHeaders(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="44" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02100" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02100" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02100.java"></endNode>
  </finding>


  <finding id="457" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02101</class>
    <file>BenchmarkTest02101.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02101" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java"></node>
  </finding>


  <finding id="458" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02101</class>
    <file>BenchmarkTest02101.java</file>
    <line>61</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02101" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02101.java"></node>
  </finding>


  <finding id="459" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02103</class>
    <file>BenchmarkTest02103.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02103" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02103.java"></node>
  </finding>


  <finding id="706" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02104</class>
    <file>BenchmarkTest02104.java</file>
    <line>58</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02104" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02104" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"></endNode>
  </finding>


  <finding id="1710" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02104</class>
    <file>BenchmarkTest02104.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02104" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02104" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02104.java"></endNode>
  </finding>


  <finding id="1434" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02105</class>
    <file>BenchmarkTest02105.java</file>
    <line>48</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02105" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02105.java"></startNode>
    <endNode lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02105" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02105.java"></endNode>
  </finding>


  <finding id="1367" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02106</class>
    <file>BenchmarkTest02106.java</file>
    <line>48</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02106" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02106.java"></startNode>
    <endNode lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02106" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02106.java"></endNode>
  </finding>


  <finding id="1287" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02109</class>
    <file>BenchmarkTest02109.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02109" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02109" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02109.java"></endNode>
  </finding>


  <finding id="1310" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02110</class>
    <file>BenchmarkTest02110.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02110" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02110" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02110.java"></endNode>
  </finding>


  <finding id="1348" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02111</class>
    <file>BenchmarkTest02111.java</file>
    <line>61</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02111" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02111" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02111.java"></endNode>
  </finding>


  <finding id="1338" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02112</class>
    <file>BenchmarkTest02112.java</file>
    <line>54</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02112" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02112" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02112.java"></endNode>
  </finding>


  <finding id="1436" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02113</class>
    <file>BenchmarkTest02113.java</file>
    <line>52</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
static java.nio.file.Path java.nio.file.Paths.get(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02113" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02113.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02113" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02113.java"></endNode>
  </finding>


  <finding id="1468" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02113</class>
    <file>BenchmarkTest02113.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
static java.io.InputStream java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02113" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02113.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02113" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02113.java"></endNode>
  </finding>


  <finding id="711" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02114</class>
    <file>BenchmarkTest02114.java</file>
    <line>60</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02114" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02114" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"></endNode>
  </finding>


  <finding id="1756" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02114</class>
    <file>BenchmarkTest02114.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02114" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02114" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02114.java"></endNode>
  </finding>


  <finding id="45" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02117</class>
    <file>BenchmarkTest02117.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02117" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02117.java"></node>
  </finding>


  <finding id="654" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02118</class>
    <file>BenchmarkTest02118.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02118" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java"></node>
  </finding>


  <finding id="655" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02118</class>
    <file>BenchmarkTest02118.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02118" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02118.java"></node>
  </finding>


  <finding id="656" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02121</class>
    <file>BenchmarkTest02121.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02121" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02121.java"></node>
  </finding>


  <finding id="1758" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02122</class>
    <file>BenchmarkTest02122.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02122" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02122.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02122" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02122.java"></endNode>
  </finding>


  <finding id="1666" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02123</class>
    <file>BenchmarkTest02123.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02123" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02123.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02123" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02123.java"></endNode>
  </finding>


  <finding id="1652" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02124</class>
    <file>BenchmarkTest02124.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02124" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02124.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02124" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02124.java"></endNode>
  </finding>


  <finding id="1823" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02126</class>
    <file>BenchmarkTest02126.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02126" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02126.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02126" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02126.java"></endNode>
  </finding>


  <finding id="1600" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02127</class>
    <file>BenchmarkTest02127.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02127" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02127.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02127" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02127.java"></endNode>
  </finding>


  <finding id="1587" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02128</class>
    <file>BenchmarkTest02128.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02128" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02128.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02128" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02128.java"></endNode>
  </finding>


  <finding id="1569" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02129</class>
    <file>BenchmarkTest02129.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02129" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02129.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02129" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02129.java"></endNode>
  </finding>


  <finding id="1757" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02130</class>
    <file>BenchmarkTest02130.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02130" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02130.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02130" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02130.java"></endNode>
  </finding>


  <finding id="1668" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02131</class>
    <file>BenchmarkTest02131.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02131" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02131.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02131" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02131.java"></endNode>
  </finding>


  <finding id="1649" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02132</class>
    <file>BenchmarkTest02132.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02132" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02132.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02132" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02132.java"></endNode>
  </finding>


  <finding id="1627" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02133</class>
    <file>BenchmarkTest02133.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02133" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02133.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02133" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02133.java"></endNode>
  </finding>


  <finding id="1822" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02134</class>
    <file>BenchmarkTest02134.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02134.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02134" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02134.java"></endNode>
  </finding>


  <finding id="1582" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02136</class>
    <file>BenchmarkTest02136.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02136" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02136.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02136" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02136.java"></endNode>
  </finding>


  <finding id="724" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02137</class>
    <file>BenchmarkTest02137.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02137" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02137.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02137" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02137.java"></endNode>
  </finding>


  <finding id="41" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02138</class>
    <file>BenchmarkTest02138.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02138" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02138.java"></node>
  </finding>


  <finding id="195" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02139</class>
    <file>BenchmarkTest02139.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02139" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02139.java"></node>
  </finding>


  <finding id="63" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02140</class>
    <file>BenchmarkTest02140.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02140" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02140.java"></node>
  </finding>


  <finding id="51" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02141</class>
    <file>BenchmarkTest02141.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02141" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02141.java"></node>
  </finding>


  <finding id="1227" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02142</class>
    <file>BenchmarkTest02142.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02142" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02142" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"></endNode>
  </finding>


  <finding id="1927" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02142</class>
    <file>BenchmarkTest02142.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02142" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02142" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02142.java"></endNode>
  </finding>


  <finding id="1885" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02143</class>
    <file>BenchmarkTest02143.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02143" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02143.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02143" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02143.java"></endNode>
  </finding>


  <finding id="1882" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02144</class>
    <file>BenchmarkTest02144.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02144" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02144.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02144" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02144.java"></endNode>
  </finding>


  <finding id="1568" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02145</class>
    <file>BenchmarkTest02145.java</file>
    <line>49</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02145" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02145.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02145" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02145.java"></endNode>
  </finding>


  <finding id="741" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02146</class>
    <file>BenchmarkTest02146.java</file>
    <line>57</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02146" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02146.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02146" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02146.java"></endNode>
  </finding>


  <finding id="843" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02147</class>
    <file>BenchmarkTest02147.java</file>
    <line>57</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02147" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02147.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02147" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02147.java"></endNode>
  </finding>


  <finding id="848" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02150</class>
    <file>BenchmarkTest02150.java</file>
    <line>71</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02150" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02150.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02150" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02150.java"></endNode>
  </finding>


  <finding id="734" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02151</class>
    <file>BenchmarkTest02151.java</file>
    <line>71</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02151" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02151.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02151" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02151.java"></endNode>
  </finding>


  <finding id="1256" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02151</class>
    <file>BenchmarkTest02151.java</file>
    <line>71</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02151" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02151.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02151" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02151.java"></endNode>
  </finding>


  <finding id="731" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02152</class>
    <file>BenchmarkTest02152.java</file>
    <line>71</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02152" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02152.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02152" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02152.java"></endNode>
  </finding>


  <finding id="1244" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02152</class>
    <file>BenchmarkTest02152.java</file>
    <line>71</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02152" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02152.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02152" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02152.java"></endNode>
  </finding>


  <finding id="1236" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02153</class>
    <file>BenchmarkTest02153.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02153" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02153.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02153" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02153.java"></endNode>
  </finding>


  <finding id="744" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02154</class>
    <file>BenchmarkTest02154.java</file>
    <line>58</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02154" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02154.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02154" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02154.java"></endNode>
  </finding>


  <finding id="1281" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02154</class>
    <file>BenchmarkTest02154.java</file>
    <line>58</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02154" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02154.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02154" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02154.java"></endNode>
  </finding>


  <finding id="841" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02155</class>
    <file>BenchmarkTest02155.java</file>
    <line>52</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02155.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02155.java"></endNode>
  </finding>


  <finding id="1421" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02155</class>
    <file>BenchmarkTest02155.java</file>
    <line>52</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02155.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02155" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02155.java"></endNode>
  </finding>


  <finding id="1409" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02156</class>
    <file>BenchmarkTest02156.java</file>
    <line>52</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02156" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02156.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02156" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02156.java"></endNode>
  </finding>


  <finding id="1494" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02165</class>
    <file>BenchmarkTest02165.java</file>
    <line>49</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02165" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02165.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02165" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02165.java"></endNode>
  </finding>


  <finding id="1537" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02167</class>
    <file>BenchmarkTest02167.java</file>
    <line>49</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02167" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02167.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02167" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02167.java"></endNode>
  </finding>


  <finding id="1527" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02168</class>
    <file>BenchmarkTest02168.java</file>
    <line>49</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02168" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02168.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02168" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02168.java"></endNode>
  </finding>


  <finding id="1024" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02169</class>
    <file>BenchmarkTest02169.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02169" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02169" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02169.java"></endNode>
  </finding>


  <finding id="924" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02170</class>
    <file>BenchmarkTest02170.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02170" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02170.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02170" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02170.java"></endNode>
  </finding>


  <finding id="1134" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02171</class>
    <file>BenchmarkTest02171.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02171" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02171.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02171" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02171.java"></endNode>
  </finding>


  <finding id="1066" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02175</class>
    <file>BenchmarkTest02175.java</file>
    <line>51</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02175" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02175.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02175" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02175.java"></endNode>
  </finding>


  <finding id="1022" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02177</class>
    <file>BenchmarkTest02177.java</file>
    <line>50</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02177" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02177" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02177.java"></endNode>
  </finding>


  <finding id="1010" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02178</class>
    <file>BenchmarkTest02178.java</file>
    <line>50</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02178" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02178" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02178.java"></endNode>
  </finding>


  <finding id="990" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02179</class>
    <file>BenchmarkTest02179.java</file>
    <line>50</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02179" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02179" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02179.java"></endNode>
  </finding>


  <finding id="950" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02181</class>
    <file>BenchmarkTest02181.java</file>
    <line>50</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02181" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02181" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02181.java"></endNode>
  </finding>


  <finding id="1001" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02182</class>
    <file>BenchmarkTest02182.java</file>
    <line>50</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02182" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02182.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02182" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02182.java"></endNode>
  </finding>


  <finding id="1125" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02184</class>
    <file>BenchmarkTest02184.java</file>
    <line>51</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02184" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02184.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02184" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02184.java"></endNode>
  </finding>


  <finding id="1026" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02185</class>
    <file>BenchmarkTest02185.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02185" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02185.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02185" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02185.java"></endNode>
  </finding>


  <finding id="1009" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02186</class>
    <file>BenchmarkTest02186.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02186" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02186" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02186.java"></endNode>
  </finding>


  <finding id="988" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02187</class>
    <file>BenchmarkTest02187.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02187" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02187" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02187.java"></endNode>
  </finding>


  <finding id="1189" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02189</class>
    <file>BenchmarkTest02189.java</file>
    <line>64</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02189" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02189" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"></endNode>
  </finding>


  <finding id="1803" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02189</class>
    <file>BenchmarkTest02189.java</file>
    <line>67</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02189" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02189" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02189.java"></endNode>
  </finding>


  <finding id="460" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02192</class>
    <file>BenchmarkTest02192.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02192" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java"></node>
  </finding>


  <finding id="461" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02192</class>
    <file>BenchmarkTest02192.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02192" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02192.java"></node>
  </finding>


  <finding id="462" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02193</class>
    <file>BenchmarkTest02193.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02193" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java"></node>
  </finding>


  <finding id="463" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02193</class>
    <file>BenchmarkTest02193.java</file>
    <line>66</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02193" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02193.java"></node>
  </finding>


  <finding id="464" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02194</class>
    <file>BenchmarkTest02194.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02194" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"></node>
  </finding>


  <finding id="465" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02194</class>
    <file>BenchmarkTest02194.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02194" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02194.java"></node>
  </finding>


  <finding id="466" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02195</class>
    <file>BenchmarkTest02195.java</file>
    <line>64</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02195" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"></node>
  </finding>


  <finding id="467" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02195</class>
    <file>BenchmarkTest02195.java</file>
    <line>67</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02195" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02195.java"></node>
  </finding>


  <finding id="710" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02196</class>
    <file>BenchmarkTest02196.java</file>
    <line>63</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02196" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02196" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"></endNode>
  </finding>


  <finding id="1754" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02196</class>
    <file>BenchmarkTest02196.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02196" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02196" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02196.java"></endNode>
  </finding>


  <finding id="1408" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02197</class>
    <file>BenchmarkTest02197.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.io.File,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02197" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02197.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02197" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02197.java"></endNode>
  </finding>


  <finding id="1394" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02198</class>
    <file>BenchmarkTest02198.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02198" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02198.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02198" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02198.java"></endNode>
  </finding>


  <finding id="1286" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02199</class>
    <file>BenchmarkTest02199.java</file>
    <line>53</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02199" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02199.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02199" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02199.java"></endNode>
  </finding>


  <finding id="1329" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02204</class>
    <file>BenchmarkTest02204.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02204" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02204" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02204.java"></endNode>
  </finding>


  <finding id="1235" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02205</class>
    <file>BenchmarkTest02205.java</file>
    <line>59</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02205" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java"></startNode>
    <endNode lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02205" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02205.java"></endNode>
  </finding>


  <finding id="697" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02208</class>
    <file>BenchmarkTest02208.java</file>
    <line>65</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"></endNode>
  </finding>


  <finding id="1618" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02208</class>
    <file>BenchmarkTest02208.java</file>
    <line>73</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02208" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02208.java"></endNode>
  </finding>


  <finding id="65" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02209</class>
    <file>BenchmarkTest02209.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02209" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02209.java"></node>
  </finding>


  <finding id="657" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02211</class>
    <file>BenchmarkTest02211.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02211" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02211.java"></node>
  </finding>


  <finding id="658" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02212</class>
    <file>BenchmarkTest02212.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02212" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02212.java"></node>
  </finding>


  <finding id="659" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02213</class>
    <file>BenchmarkTest02213.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02213" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02213.java"></node>
  </finding>


  <finding id="660" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02217</class>
    <file>BenchmarkTest02217.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02217" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02217.java"></node>
  </finding>


  <finding id="661" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02219</class>
    <file>BenchmarkTest02219.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02219" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02219.java"></node>
  </finding>


  <finding id="662" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02220</class>
    <file>BenchmarkTest02220.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02220" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02220.java"></node>
  </finding>


  <finding id="1571" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02221</class>
    <file>BenchmarkTest02221.java</file>
    <line>57</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02221" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02221.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02221" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02221.java"></endNode>
  </finding>


  <finding id="1807" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02223</class>
    <file>BenchmarkTest02223.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02223.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02223" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02223.java"></endNode>
  </finding>


  <finding id="1631" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02224</class>
    <file>BenchmarkTest02224.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02224" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02224.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02224" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02224.java"></endNode>
  </finding>


  <finding id="1634" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02225</class>
    <file>BenchmarkTest02225.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02225" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02225.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02225" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02225.java"></endNode>
  </finding>


  <finding id="1753" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02227</class>
    <file>BenchmarkTest02227.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02227" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02227.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02227" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02227.java"></endNode>
  </finding>


  <finding id="1838" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02228</class>
    <file>BenchmarkTest02228.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02228" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02228.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02228" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02228.java"></endNode>
  </finding>


  <finding id="1586" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02230</class>
    <file>BenchmarkTest02230.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02230" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02230.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02230" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02230.java"></endNode>
  </finding>


  <finding id="1630" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02232</class>
    <file>BenchmarkTest02232.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02232" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02232.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02232" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02232.java"></endNode>
  </finding>


  <finding id="1635" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02233</class>
    <file>BenchmarkTest02233.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02233" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02233.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02233" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02233.java"></endNode>
  </finding>


  <finding id="1660" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02234</class>
    <file>BenchmarkTest02234.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02234" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02234.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02234" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02234.java"></endNode>
  </finding>


  <finding id="1739" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02239</class>
    <file>BenchmarkTest02239.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02239" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02239.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02239" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02239.java"></endNode>
  </finding>


  <finding id="1636" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02241</class>
    <file>BenchmarkTest02241.java</file>
    <line>54</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02241.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02241" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02241.java"></endNode>
  </finding>


  <finding id="807" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02243</class>
    <file>BenchmarkTest02243.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02243" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02243.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02243" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02243.java"></endNode>
  </finding>


  <finding id="853" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02244</class>
    <file>BenchmarkTest02244.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02244" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02244.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02244" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02244.java"></endNode>
  </finding>


  <finding id="156" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02245</class>
    <file>BenchmarkTest02245.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02245" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02245.java"></node>
  </finding>


  <finding id="113" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02246</class>
    <file>BenchmarkTest02246.java</file>
    <line>53</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02246" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02246.java"></node>
  </finding>


  <finding id="1908" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02247</class>
    <file>BenchmarkTest02247.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02247" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02247.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02247" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02247.java"></endNode>
  </finding>


  <finding id="1913" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02248</class>
    <file>BenchmarkTest02248.java</file>
    <line>68</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02248" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02248.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02248" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02248.java"></endNode>
  </finding>


  <finding id="856" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02249</class>
    <file>BenchmarkTest02249.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02249" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02249.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02249" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02249.java"></endNode>
  </finding>


  <finding id="760" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02250</class>
    <file>BenchmarkTest02250.java</file>
    <line>62</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02250" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02250.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02250" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02250.java"></endNode>
  </finding>


  <finding id="809" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02251</class>
    <file>BenchmarkTest02251.java</file>
    <line>74</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02251" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02251.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02251" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02251.java"></endNode>
  </finding>


  <finding id="1423" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02252</class>
    <file>BenchmarkTest02252.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02252" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02252.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02252" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02252.java"></endNode>
  </finding>


  <finding id="1383" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02253</class>
    <file>BenchmarkTest02253.java</file>
    <line>76</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02253" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02253.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02253" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02253.java"></endNode>
  </finding>


  <finding id="1541" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02261</class>
    <file>BenchmarkTest02261.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02261" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02261.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02261" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02261.java"></endNode>
  </finding>


  <finding id="1518" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02262</class>
    <file>BenchmarkTest02262.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02262" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02262.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02262" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02262.java"></endNode>
  </finding>


  <finding id="1526" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02263</class>
    <file>BenchmarkTest02263.java</file>
    <line>54</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02263" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02263.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02263" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02263.java"></endNode>
  </finding>


  <finding id="1062" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02264</class>
    <file>BenchmarkTest02264.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02264" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02264" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02264.java"></endNode>
  </finding>


  <finding id="1141" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02265</class>
    <file>BenchmarkTest02265.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02265" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02265.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02265" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02265.java"></endNode>
  </finding>


  <finding id="958" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02267</class>
    <file>BenchmarkTest02267.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02267" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02267.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02267" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02267.java"></endNode>
  </finding>


  <finding id="925" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02269</class>
    <file>BenchmarkTest02269.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02269" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02269" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02269.java"></endNode>
  </finding>


  <finding id="1019" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02270</class>
    <file>BenchmarkTest02270.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02270" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02270" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02270.java"></endNode>
  </finding>


  <finding id="1064" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02272</class>
    <file>BenchmarkTest02272.java</file>
    <line>56</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02272" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02272" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02272.java"></endNode>
  </finding>


  <finding id="1140" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02273</class>
    <file>BenchmarkTest02273.java</file>
    <line>56</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02273" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02273" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02273.java"></endNode>
  </finding>


  <finding id="957" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02275</class>
    <file>BenchmarkTest02275.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02275" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02275" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02275.java"></endNode>
  </finding>


  <finding id="923" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02277</class>
    <file>BenchmarkTest02277.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02277" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02277.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02277" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02277.java"></endNode>
  </finding>


  <finding id="1142" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02281</class>
    <file>BenchmarkTest02281.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02281" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02281" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02281.java"></endNode>
  </finding>


  <finding id="960" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02283</class>
    <file>BenchmarkTest02283.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02283" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02283.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02283" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02283.java"></endNode>
  </finding>


  <finding id="975" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02284</class>
    <file>BenchmarkTest02284.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02284" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02284" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02284.java"></endNode>
  </finding>


  <finding id="1148" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02286</class>
    <file>BenchmarkTest02286.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02286" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02286.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02286" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02286.java"></endNode>
  </finding>


  <finding id="876" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02287</class>
    <file>BenchmarkTest02287.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02287" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02287" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02287.java"></endNode>
  </finding>


  <finding id="892" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02288</class>
    <file>BenchmarkTest02288.java</file>
    <line>57</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Map javax.servlet.ServletRequest.getParameterMap()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02288" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02288" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02288.java"></endNode>
  </finding>


  <finding id="468" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02290</class>
    <file>BenchmarkTest02290.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02290" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java"></node>
  </finding>


  <finding id="469" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02290</class>
    <file>BenchmarkTest02290.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02290" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02290.java"></node>
  </finding>


  <finding id="470" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02291</class>
    <file>BenchmarkTest02291.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02291" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java"></node>
  </finding>


  <finding id="471" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02291</class>
    <file>BenchmarkTest02291.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02291" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02291.java"></node>
  </finding>


  <finding id="472" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02292</class>
    <file>BenchmarkTest02292.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02292" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java"></node>
  </finding>


  <finding id="473" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02292</class>
    <file>BenchmarkTest02292.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02292" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02292.java"></node>
  </finding>


  <finding id="474" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02293</class>
    <file>BenchmarkTest02293.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02293" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"></node>
  </finding>


  <finding id="475" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02293</class>
    <file>BenchmarkTest02293.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02293" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02293.java"></node>
  </finding>


  <finding id="476" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02294</class>
    <file>BenchmarkTest02294.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02294" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"></node>
  </finding>


  <finding id="477" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02294</class>
    <file>BenchmarkTest02294.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02294" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02294.java"></node>
  </finding>


  <finding id="478" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02295</class>
    <file>BenchmarkTest02295.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02295" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"></node>
  </finding>


  <finding id="479" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02295</class>
    <file>BenchmarkTest02295.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02295" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02295.java"></node>
  </finding>


  <finding id="480" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02296</class>
    <file>BenchmarkTest02296.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02296" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02296.java"></node>
  </finding>


  <finding id="481" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02297</class>
    <file>BenchmarkTest02297.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02297" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02297.java"></node>
  </finding>


  <finding id="482" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02298</class>
    <file>BenchmarkTest02298.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02298" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02298.java"></node>
  </finding>


  <finding id="715" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02299</class>
    <file>BenchmarkTest02299.java</file>
    <line>72</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02299" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02299" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"></endNode>
  </finding>


  <finding id="1784" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02299</class>
    <file>BenchmarkTest02299.java</file>
    <line>80</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02299" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"></startNode>
    <endNode lineNo="80" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02299" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02299.java"></endNode>
  </finding>


  <finding id="1293" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02301</class>
    <file>BenchmarkTest02301.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02301" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02301.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02301" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02301.java"></endNode>
  </finding>


  <finding id="1378" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02302</class>
    <file>BenchmarkTest02302.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02302" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02302.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02302" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02302.java"></endNode>
  </finding>


  <finding id="1416" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02303</class>
    <file>BenchmarkTest02303.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02303" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02303.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02303" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02303.java"></endNode>
  </finding>


  <finding id="1347" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02304</class>
    <file>BenchmarkTest02304.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02304.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02304" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02304.java"></endNode>
  </finding>


  <finding id="704" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02305</class>
    <file>BenchmarkTest02305.java</file>
    <line>74</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02305" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02305" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"></endNode>
  </finding>


  <finding id="1707" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02305</class>
    <file>BenchmarkTest02305.java</file>
    <line>82</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02305" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"></startNode>
    <endNode lineNo="82" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02305" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02305.java"></endNode>
  </finding>


  <finding id="708" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02306</class>
    <file>BenchmarkTest02306.java</file>
    <line>74</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"></endNode>
  </finding>


  <finding id="1728" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02306</class>
    <file>BenchmarkTest02306.java</file>
    <line>83</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02306" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02306.java"></endNode>
  </finding>


  <finding id="663" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02307</class>
    <file>BenchmarkTest02307.java</file>
    <line>68</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02307" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java"></node>
  </finding>


  <finding id="664" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02307</class>
    <file>BenchmarkTest02307.java</file>
    <line>70</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02307" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02307.java"></node>
  </finding>


  <finding id="665" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02308</class>
    <file>BenchmarkTest02308.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02308" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02308.java"></node>
  </finding>


  <finding id="666" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02311</class>
    <file>BenchmarkTest02311.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02311" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02311.java"></node>
  </finding>


  <finding id="1724" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02314</class>
    <file>BenchmarkTest02314.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02314" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02314.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02314" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02314.java"></endNode>
  </finding>


  <finding id="1782" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02315</class>
    <file>BenchmarkTest02315.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02315" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02315.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02315" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02315.java"></endNode>
  </finding>


  <finding id="1818" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02316</class>
    <file>BenchmarkTest02316.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02316" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02316.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02316" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02316.java"></endNode>
  </finding>


  <finding id="1802" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02317</class>
    <file>BenchmarkTest02317.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02317" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02317.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02317" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02317.java"></endNode>
  </finding>


  <finding id="1745" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02321</class>
    <file>BenchmarkTest02321.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02321" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02321.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02321" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02321.java"></endNode>
  </finding>


  <finding id="1722" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02322</class>
    <file>BenchmarkTest02322.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02322" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02322.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02322" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02322.java"></endNode>
  </finding>


  <finding id="1780" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02323</class>
    <file>BenchmarkTest02323.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02323" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02323.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02323" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02323.java"></endNode>
  </finding>


  <finding id="1817" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02324</class>
    <file>BenchmarkTest02324.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02324" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02324.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02324" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02324.java"></endNode>
  </finding>


  <finding id="1641" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02326</class>
    <file>BenchmarkTest02326.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02326.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02326" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02326.java"></endNode>
  </finding>


  <finding id="1697" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02327</class>
    <file>BenchmarkTest02327.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02327" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02327.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02327" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02327.java"></endNode>
  </finding>


  <finding id="1604" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02328</class>
    <file>BenchmarkTest02328.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02328" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02328.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02328" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02328.java"></endNode>
  </finding>


  <finding id="1814" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02332</class>
    <file>BenchmarkTest02332.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02332" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02332.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02332" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02332.java"></endNode>
  </finding>


  <finding id="835" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02333</class>
    <file>BenchmarkTest02333.java</file>
    <line>76</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02333" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02333.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02333" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02333.java"></endNode>
  </finding>


  <finding id="754" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02334</class>
    <file>BenchmarkTest02334.java</file>
    <line>76</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.util.List)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02334" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02334.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02334" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02334.java"></endNode>
  </finding>


  <finding id="777" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02335</class>
    <file>BenchmarkTest02335.java</file>
    <line>76</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02335" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02335.java"></startNode>
    <endNode lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02335" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02335.java"></endNode>
  </finding>


  <finding id="12" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02337</class>
    <file>BenchmarkTest02337.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02337" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02337.java"></node>
  </finding>


  <finding id="2" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02338</class>
    <file>BenchmarkTest02338.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02338" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02338.java"></node>
  </finding>


  <finding id="1195" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02339</class>
    <file>BenchmarkTest02339.java</file>
    <line>83</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02339" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02339" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"></endNode>
  </finding>


  <finding id="1881" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02339</class>
    <file>BenchmarkTest02339.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02339" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02339" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02339.java"></endNode>
  </finding>


  <finding id="1407" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02341</class>
    <file>BenchmarkTest02341.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02341" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02341.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02341" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02341.java"></endNode>
  </finding>


  <finding id="755" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02342</class>
    <file>BenchmarkTest02342.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02342" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02342.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02342" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02342.java"></endNode>
  </finding>


  <finding id="776" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02343</class>
    <file>BenchmarkTest02343.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02343" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02343.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02343" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02343.java"></endNode>
  </finding>


  <finding id="1327" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02343</class>
    <file>BenchmarkTest02343.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02343" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02343.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02343" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02343.java"></endNode>
  </finding>


  <finding id="737" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02344</class>
    <file>BenchmarkTest02344.java</file>
    <line>66</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02344" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02344.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02344" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02344.java"></endNode>
  </finding>


  <finding id="1261" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02344</class>
    <file>BenchmarkTest02344.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02344" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02344.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02344" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02344.java"></endNode>
  </finding>


  <finding id="1484" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02352</class>
    <file>BenchmarkTest02352.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02352" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02352.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02352" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02352.java"></endNode>
  </finding>


  <finding id="898" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02354</class>
    <file>BenchmarkTest02354.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02354" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02354" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02354.java"></endNode>
  </finding>


  <finding id="883" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02355</class>
    <file>BenchmarkTest02355.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02355" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02355" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02355.java"></endNode>
  </finding>


  <finding id="1002" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02356</class>
    <file>BenchmarkTest02356.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02356" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02356" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02356.java"></endNode>
  </finding>


  <finding id="910" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02357</class>
    <file>BenchmarkTest02357.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02357" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02357" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02357.java"></endNode>
  </finding>


  <finding id="1118" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02358</class>
    <file>BenchmarkTest02358.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02358" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02358" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02358.java"></endNode>
  </finding>


  <finding id="1089" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02359</class>
    <file>BenchmarkTest02359.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02359" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02359" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02359.java"></endNode>
  </finding>


  <finding id="900" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02360</class>
    <file>BenchmarkTest02360.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02360" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02360" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02360.java"></endNode>
  </finding>


  <finding id="894" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02362</class>
    <file>BenchmarkTest02362.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02362" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02362.java"></endNode>
  </finding>


  <finding id="1000" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02364</class>
    <file>BenchmarkTest02364.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02364" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02364" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02364.java"></endNode>
  </finding>


  <finding id="909" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02365</class>
    <file>BenchmarkTest02365.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02365" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02365.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02365" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02365.java"></endNode>
  </finding>


  <finding id="974" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02369</class>
    <file>BenchmarkTest02369.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int[])
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02369" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02369" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02369.java"></endNode>
  </finding>


  <finding id="1177" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02370</class>
    <file>BenchmarkTest02370.java</file>
    <line>78</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XPath Injection':
javax.xml.xpath.XPathExpression javax.xml.xpath.XPath.compile(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02370" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"></startNode>
    <endNode lineNo="78" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02370" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"></endNode>
  </finding>


  <finding id="1599" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02370</class>
    <file>BenchmarkTest02370.java</file>
    <line>81</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.util.Enumeration javax.servlet.ServletRequest.getParameterNames()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="45" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02370" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"></startNode>
    <endNode lineNo="81" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02370" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02370.java"></endNode>
  </finding>


  <finding id="483" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02373</class>
    <file>BenchmarkTest02373.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02373" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"></node>
  </finding>


  <finding id="484" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02373</class>
    <file>BenchmarkTest02373.java</file>
    <line>63</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02373" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02373.java"></node>
  </finding>


  <finding id="485" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02374</class>
    <file>BenchmarkTest02374.java</file>
    <line>60</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02374" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"></node>
  </finding>


  <finding id="486" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02374</class>
    <file>BenchmarkTest02374.java</file>
    <line>63</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02374" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02374.java"></node>
  </finding>


  <finding id="487" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02375</class>
    <file>BenchmarkTest02375.java</file>
    <line>53</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02375" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java"></node>
  </finding>


  <finding id="488" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02375</class>
    <file>BenchmarkTest02375.java</file>
    <line>56</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02375" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02375.java"></node>
  </finding>


  <finding id="1459" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02377</class>
    <file>BenchmarkTest02377.java</file>
    <line>49</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02377" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02377.java"></endNode>
  </finding>


  <finding id="1453" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02378</class>
    <file>BenchmarkTest02378.java</file>
    <line>60</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02378" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02378.java"></endNode>
  </finding>


  <finding id="1449" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02379</class>
    <file>BenchmarkTest02379.java</file>
    <line>60</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="60" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02379" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02379.java"></endNode>
  </finding>


  <finding id="1448" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02383</class>
    <file>BenchmarkTest02383.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02383" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02383.java"></endNode>
  </finding>


  <finding id="720" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02384</class>
    <file>BenchmarkTest02384.java</file>
    <line>61</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02384" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02384.java"></endNode>
  </finding>


  <finding id="1875" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02384</class>
    <file>BenchmarkTest02384.java</file>
    <line>70</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02384" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02384.java"></endNode>
  </finding>


  <finding id="667" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02385</class>
    <file>BenchmarkTest02385.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02385" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java"></node>
  </finding>


  <finding id="668" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02385</class>
    <file>BenchmarkTest02385.java</file>
    <line>57</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02385" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02385.java"></node>
  </finding>


  <finding id="669" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02386</class>
    <file>BenchmarkTest02386.java</file>
    <line>50</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02386" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02386.java"></node>
  </finding>


  <finding id="670" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02387</class>
    <file>BenchmarkTest02387.java</file>
    <line>50</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02387" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02387.java"></node>
  </finding>


  <finding id="671" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02388</class>
    <file>BenchmarkTest02388.java</file>
    <line>50</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02388" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02388.java"></node>
  </finding>


  <finding id="672" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02391</class>
    <file>BenchmarkTest02391.java</file>
    <line>53</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02391" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02391.java"></node>
  </finding>


  <finding id="673" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02392</class>
    <file>BenchmarkTest02392.java</file>
    <line>53</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02392" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02392.java"></node>
  </finding>


  <finding id="674" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02393</class>
    <file>BenchmarkTest02393.java</file>
    <line>53</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02393" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02393.java"></node>
  </finding>


  <finding id="1862" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02395</class>
    <file>BenchmarkTest02395.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02395" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02395.java"></endNode>
  </finding>


  <finding id="1861" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02396</class>
    <file>BenchmarkTest02396.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02396" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02396.java"></endNode>
  </finding>


  <finding id="1868" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02397</class>
    <file>BenchmarkTest02397.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02397" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02397.java"></endNode>
  </finding>


  <finding id="1849" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02399</class>
    <file>BenchmarkTest02399.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02399" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02399.java"></endNode>
  </finding>


  <finding id="1877" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02400</class>
    <file>BenchmarkTest02400.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02400" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02400.java"></endNode>
  </finding>


  <finding id="1854" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02402</class>
    <file>BenchmarkTest02402.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02402" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02402.java"></endNode>
  </finding>


  <finding id="1853" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02403</class>
    <file>BenchmarkTest02403.java</file>
    <line>51</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02403" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02403.java"></endNode>
  </finding>


  <finding id="1878" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02405</class>
    <file>BenchmarkTest02405.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02405" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02405.java"></endNode>
  </finding>


  <finding id="1865" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02407</class>
    <file>BenchmarkTest02407.java</file>
    <line>50</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02407" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02407.java"></endNode>
  </finding>


  <finding id="1869" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02409</class>
    <file>BenchmarkTest02409.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02409" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02409.java"></endNode>
  </finding>


  <finding id="1866" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02410</class>
    <file>BenchmarkTest02410.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String, int, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02410" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02410.java"></endNode>
  </finding>


  <finding id="862" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02411</class>
    <file>BenchmarkTest02411.java</file>
    <line>63</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02411" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02411.java"></endNode>
  </finding>


  <finding id="867" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02412</class>
    <file>BenchmarkTest02412.java</file>
    <line>63</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02412" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02412.java"></endNode>
  </finding>


  <finding id="859" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02414</class>
    <file>BenchmarkTest02414.java</file>
    <line>61</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder(java.util.List)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="61" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02414" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02414.java"></endNode>
  </finding>


  <finding id="92" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02415</class>
    <file>BenchmarkTest02415.java</file>
    <line>50</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02415" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02415.java"></node>
  </finding>


  <finding id="29" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02416</class>
    <file>BenchmarkTest02416.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02416" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02416.java"></node>
  </finding>


  <finding id="181" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02417</class>
    <file>BenchmarkTest02417.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02417" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02417.java"></node>
  </finding>


  <finding id="162" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02418</class>
    <file>BenchmarkTest02418.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02418" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02418.java"></node>
  </finding>


  <finding id="146" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02419</class>
    <file>BenchmarkTest02419.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02419" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02419.java"></node>
  </finding>


  <finding id="17" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02420</class>
    <file>BenchmarkTest02420.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02420" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02420.java"></node>
  </finding>


  <finding id="5" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02421</class>
    <file>BenchmarkTest02421.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02421" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02421.java"></node>
  </finding>


  <finding id="43" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02422</class>
    <file>BenchmarkTest02422.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02422" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02422.java"></node>
  </finding>


  <finding id="93" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02423</class>
    <file>BenchmarkTest02423.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02423" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02423.java"></node>
  </finding>


  <finding id="25" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02424</class>
    <file>BenchmarkTest02424.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02424" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02424.java"></node>
  </finding>


  <finding id="177" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02425</class>
    <file>BenchmarkTest02425.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02425" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02425.java"></node>
  </finding>


  <finding id="165" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02426</class>
    <file>BenchmarkTest02426.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02426" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02426.java"></node>
  </finding>


  <finding id="1215" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02427</class>
    <file>BenchmarkTest02427.java</file>
    <line>70</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02427" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02427.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02427" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02427.java"></endNode>
  </finding>


  <finding id="1930" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02427</class>
    <file>BenchmarkTest02427.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02427" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02427.java"></endNode>
  </finding>


  <finding id="861" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02429</class>
    <file>BenchmarkTest02429.java</file>
    <line>70</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="70" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02429" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02429.java"></endNode>
  </finding>


  <finding id="860" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02430</class>
    <file>BenchmarkTest02430.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02430" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02430.java"></endNode>
  </finding>


  <finding id="866" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02431</class>
    <file>BenchmarkTest02431.java</file>
    <line>56</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02431" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02431.java"></endNode>
  </finding>


  <finding id="865" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02432</class>
    <file>BenchmarkTest02432.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02432" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02432.java"></endNode>
  </finding>


  <finding id="1263" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02432</class>
    <file>BenchmarkTest02432.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02432" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02432.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02432" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02432.java"></endNode>
  </finding>


  <finding id="863" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02433</class>
    <file>BenchmarkTest02433.java</file>
    <line>72</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02433" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02433.java"></endNode>
  </finding>


  <finding id="1399" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02433</class>
    <file>BenchmarkTest02433.java</file>
    <line>72</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02433" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02433.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02433" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02433.java"></endNode>
  </finding>


  <finding id="1564" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02446</class>
    <file>BenchmarkTest02446.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02446" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02446.java"></endNode>
  </finding>


  <finding id="1558" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02448</class>
    <file>BenchmarkTest02448.java</file>
    <line>50</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="50" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02448" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02448.java"></endNode>
  </finding>


  <finding id="1165" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02449</class>
    <file>BenchmarkTest02449.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02449" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02449.java"></endNode>
  </finding>


  <finding id="1175" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02451</class>
    <file>BenchmarkTest02451.java</file>
    <line>52</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void org.springframework.jdbc.core.JdbcTemplate.execute(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02451" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02451.java"></endNode>
  </finding>


  <finding id="1159" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02453</class>
    <file>BenchmarkTest02453.java</file>
    <line>51</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02453" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02453.java"></endNode>
  </finding>


  <finding id="1162" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02454</class>
    <file>BenchmarkTest02454.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02454" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02454.java"></endNode>
  </finding>


  <finding id="1170" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02455</class>
    <file>BenchmarkTest02455.java</file>
    <line>53</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02455" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02455.java"></endNode>
  </finding>


  <finding id="1193" kind="PATH">
    <problemType>Injection: XPath Injection</problemType>
    <problemTypeId>ci:XPathInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02457</class>
    <file>BenchmarkTest02457.java</file>
    <line>65</line>
    <cweNumber>CWE-643</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: XPath Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XPath Injection':
java.lang.String javax.xml.xpath.XPath.evaluate(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02457" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02457.java"></endNode>
  </finding>


  <finding id="1863" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02457</class>
    <file>BenchmarkTest02457.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getParameter(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="33" classFQN="org.owasp.benchmark.helpers.SeparateClassRequest" relativePath="src/main/java/org/owasp/benchmark/helpers/SeparateClassRequest.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02457" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02457.java"></endNode>
  </finding>


  <finding id="489" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02458</class>
    <file>BenchmarkTest02458.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02458" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java"></node>
  </finding>


  <finding id="490" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02458</class>
    <file>BenchmarkTest02458.java</file>
    <line>65</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02458" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02458.java"></node>
  </finding>


  <finding id="1438" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02463</class>
    <file>BenchmarkTest02463.java</file>
    <line>51</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02463" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02463.java"></startNode>
    <endNode lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02463" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02463.java"></endNode>
  </finding>


  <finding id="1313" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02465</class>
    <file>BenchmarkTest02465.java</file>
    <line>56</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02465" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02465.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02465" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02465.java"></endNode>
  </finding>


  <finding id="1298" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02466</class>
    <file>BenchmarkTest02466.java</file>
    <line>56</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02466" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02466.java"></startNode>
    <endNode lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02466" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02466.java"></endNode>
  </finding>


  <finding id="1430" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02468</class>
    <file>BenchmarkTest02468.java</file>
    <line>64</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02468" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02468" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02468.java"></endNode>
  </finding>


  <finding id="1271" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02469</class>
    <file>BenchmarkTest02469.java</file>
    <line>57</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02469" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02469" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02469.java"></endNode>
  </finding>


  <finding id="714" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02472</class>
    <file>BenchmarkTest02472.java</file>
    <line>63</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, java.lang.Object[], javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02472" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02472" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"></endNode>
  </finding>


  <finding id="1772" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02472</class>
    <file>BenchmarkTest02472.java</file>
    <line>71</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02472" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"></startNode>
    <endNode lineNo="71" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02472" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02472.java"></endNode>
  </finding>


  <finding id="83" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02473</class>
    <file>BenchmarkTest02473.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.lang.Math

Matching pattern in special code kind 'Usage: java.util.Random':
static double java.lang.Math.random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02473" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02473.java"></node>
  </finding>


  <finding id="675" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02474</class>
    <file>BenchmarkTest02474.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02474" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02474.java"></node>
  </finding>


  <finding id="676" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02475</class>
    <file>BenchmarkTest02475.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02475" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02475.java"></node>
  </finding>


  <finding id="677" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02476</class>
    <file>BenchmarkTest02476.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02476" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02476.java"></node>
  </finding>


  <finding id="678" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02478</class>
    <file>BenchmarkTest02478.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02478" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02478.java"></node>
  </finding>


  <finding id="679" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02479</class>
    <file>BenchmarkTest02479.java</file>
    <line>55</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02479" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02479.java"></node>
  </finding>


  <finding id="1765" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02480</class>
    <file>BenchmarkTest02480.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02480" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02480.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02480" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02480.java"></endNode>
  </finding>


  <finding id="1677" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02481</class>
    <file>BenchmarkTest02481.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02481" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02481.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02481" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02481.java"></endNode>
  </finding>


  <finding id="1785" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02483</class>
    <file>BenchmarkTest02483.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02483" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02483.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02483" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02483.java"></endNode>
  </finding>


  <finding id="1616" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02485</class>
    <file>BenchmarkTest02485.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02485" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02485.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02485" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02485.java"></endNode>
  </finding>


  <finding id="1597" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02486</class>
    <file>BenchmarkTest02486.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02486" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02486.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02486" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02486.java"></endNode>
  </finding>


  <finding id="1576" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02487</class>
    <file>BenchmarkTest02487.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02487" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02487.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02487" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02487.java"></endNode>
  </finding>


  <finding id="1813" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02489</class>
    <file>BenchmarkTest02489.java</file>
    <line>53</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02489" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02489.java"></startNode>
    <endNode lineNo="53" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02489" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02489.java"></endNode>
  </finding>


  <finding id="1614" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02493</class>
    <file>BenchmarkTest02493.java</file>
    <line>55</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02493" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02493.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02493" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02493.java"></endNode>
  </finding>


  <finding id="1594" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02494</class>
    <file>BenchmarkTest02494.java</file>
    <line>52</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02494" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02494.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02494" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02494.java"></endNode>
  </finding>


  <finding id="745" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02496</class>
    <file>BenchmarkTest02496.java</file>
    <line>65</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.ProcessBuilder java.lang.ProcessBuilder.command(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02496" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02496.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02496" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02496.java"></endNode>
  </finding>


  <finding id="208" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02497</class>
    <file>BenchmarkTest02497.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02497" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02497.java"></node>
  </finding>


  <finding id="27" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02498</class>
    <file>BenchmarkTest02498.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02498" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02498.java"></node>
  </finding>


  <finding id="69" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02499</class>
    <file>BenchmarkTest02499.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02499" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02499.java"></node>
  </finding>


  <finding id="33" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02500</class>
    <file>BenchmarkTest02500.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02500" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02500.java"></node>
  </finding>


  <finding id="212" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02501</class>
    <file>BenchmarkTest02501.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02501" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02501.java"></node>
  </finding>


  <finding id="170" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02502</class>
    <file>BenchmarkTest02502.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02502" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02502.java"></node>
  </finding>


  <finding id="74" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02503</class>
    <file>BenchmarkTest02503.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02503" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02503.java"></node>
  </finding>


  <finding id="82" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02504</class>
    <file>BenchmarkTest02504.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02504" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02504.java"></node>
  </finding>


  <finding id="153" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02505</class>
    <file>BenchmarkTest02505.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02505" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02505.java"></node>
  </finding>


  <finding id="108" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02506</class>
    <file>BenchmarkTest02506.java</file>
    <line>51</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="51" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02506" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02506.java"></node>
  </finding>


  <finding id="1211" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02507</class>
    <file>BenchmarkTest02507.java</file>
    <line>72</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02507" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02507.java"></startNode>
    <endNode lineNo="72" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02507" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02507.java"></endNode>
  </finding>


  <finding id="1909" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02508</class>
    <file>BenchmarkTest02508.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02508" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02508.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02508" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02508.java"></endNode>
  </finding>


  <finding id="764" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02511</class>
    <file>BenchmarkTest02511.java</file>
    <line>58</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02511" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02511.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02511" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02511.java"></endNode>
  </finding>


  <finding id="767" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02512</class>
    <file>BenchmarkTest02512.java</file>
    <line>58</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02512" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02512.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02512" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02512.java"></endNode>
  </finding>


  <finding id="1312" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02512</class>
    <file>BenchmarkTest02512.java</file>
    <line>58</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02512" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02512.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02512" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02512.java"></endNode>
  </finding>


  <finding id="1380" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02513</class>
    <file>BenchmarkTest02513.java</file>
    <line>58</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02513" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02513.java"></startNode>
    <endNode lineNo="58" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02513" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02513.java"></endNode>
  </finding>


  <finding id="782" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02514</class>
    <file>BenchmarkTest02514.java</file>
    <line>57</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02514" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02514.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02514" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02514.java"></endNode>
  </finding>


  <finding id="793" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02515</class>
    <file>BenchmarkTest02515.java</file>
    <line>57</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02515" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02515.java"></startNode>
    <endNode lineNo="57" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02515" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02515.java"></endNode>
  </finding>


  <finding id="804" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02516</class>
    <file>BenchmarkTest02516.java</file>
    <line>55</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02516" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02516.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02516" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02516.java"></endNode>
  </finding>


  <finding id="1362" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02516</class>
    <file>BenchmarkTest02516.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02516" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02516.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02516" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02516.java"></endNode>
  </finding>


  <finding id="772" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02517</class>
    <file>BenchmarkTest02517.java</file>
    <line>55</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02517" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02517.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02517" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02517.java"></endNode>
  </finding>


  <finding id="1320" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02517</class>
    <file>BenchmarkTest02517.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02517" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02517.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02517" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02517.java"></endNode>
  </finding>


  <finding id="1385" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02518</class>
    <file>BenchmarkTest02518.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02518" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02518.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02518" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02518.java"></endNode>
  </finding>


  <finding id="1529" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02524</class>
    <file>BenchmarkTest02524.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02524" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02524.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02524" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02524.java"></endNode>
  </finding>


  <finding id="1507" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02525</class>
    <file>BenchmarkTest02525.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02525" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02525.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02525" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02525.java"></endNode>
  </finding>


  <finding id="1542" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02526</class>
    <file>BenchmarkTest02526.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.putValue(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02526" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02526.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02526" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02526.java"></endNode>
  </finding>


  <finding id="1546" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02527</class>
    <file>BenchmarkTest02527.java</file>
    <line>52</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02527" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02527.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02527" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02527.java"></endNode>
  </finding>


  <finding id="1116" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02528</class>
    <file>BenchmarkTest02528.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02528" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02528" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02528.java"></endNode>
  </finding>


  <finding id="1007" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02530</class>
    <file>BenchmarkTest02530.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02530" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02530" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02530.java"></endNode>
  </finding>


  <finding id="1025" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02531</class>
    <file>BenchmarkTest02531.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02531" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02531" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02531.java"></endNode>
  </finding>


  <finding id="1038" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02532</class>
    <file>BenchmarkTest02532.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02532" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02532.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02532" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02532.java"></endNode>
  </finding>


  <finding id="982" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02533</class>
    <file>BenchmarkTest02533.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02533" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02533" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02533.java"></endNode>
  </finding>


  <finding id="1081" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02534</class>
    <file>BenchmarkTest02534.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02534" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02534" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02534.java"></endNode>
  </finding>


  <finding id="1090" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02535</class>
    <file>BenchmarkTest02535.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02535" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02535.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02535" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02535.java"></endNode>
  </finding>


  <finding id="908" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02537</class>
    <file>BenchmarkTest02537.java</file>
    <line>54</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02537" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"></startNode>
    <endNode lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02537" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02537.java"></endNode>
  </finding>


  <finding id="1079" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02542</class>
    <file>BenchmarkTest02542.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02542" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02542" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02542.java"></endNode>
  </finding>


  <finding id="1088" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02543</class>
    <file>BenchmarkTest02543.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02543" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02543" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02543.java"></endNode>
  </finding>


  <finding id="902" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02545</class>
    <file>BenchmarkTest02545.java</file>
    <line>55</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String[] javax.servlet.ServletRequest.getParameterValues(java.lang.String)

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02545" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02545" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02545.java"></endNode>
  </finding>


  <finding id="491" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02548</class>
    <file>BenchmarkTest02548.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02548" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java"></node>
  </finding>


  <finding id="492" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02548</class>
    <file>BenchmarkTest02548.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02548" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02548.java"></node>
  </finding>


  <finding id="493" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02549</class>
    <file>BenchmarkTest02549.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02549" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java"></node>
  </finding>


  <finding id="494" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02549</class>
    <file>BenchmarkTest02549.java</file>
    <line>75</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02549" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02549.java"></node>
  </finding>


  <finding id="495" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02550</class>
    <file>BenchmarkTest02550.java</file>
    <line>73</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02550" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"></node>
  </finding>


  <finding id="496" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02550</class>
    <file>BenchmarkTest02550.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02550" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02550.java"></node>
  </finding>


  <finding id="497" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02552</class>
    <file>BenchmarkTest02552.java</file>
    <line>76</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="76" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02552" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02552.java"></node>
  </finding>


  <finding id="1230" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02555</class>
    <file>BenchmarkTest02555.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02555" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02555.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02555" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02555.java"></endNode>
  </finding>


  <finding id="1245" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02556</class>
    <file>BenchmarkTest02556.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02556" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02556.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02556" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02556.java"></endNode>
  </finding>


  <finding id="1414" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02557</class>
    <file>BenchmarkTest02557.java</file>
    <line>62</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String,java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02557" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02557.java"></startNode>
    <endNode lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02557" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02557.java"></endNode>
  </finding>


  <finding id="1336" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02559</class>
    <file>BenchmarkTest02559.java</file>
    <line>73</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.net.URI)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02559" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02559.java"></startNode>
    <endNode lineNo="73" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02559" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02559.java"></endNode>
  </finding>


  <finding id="1402" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02560</class>
    <file>BenchmarkTest02560.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02560" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02560.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02560" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02560.java"></endNode>
  </finding>


  <finding id="1262" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02561</class>
    <file>BenchmarkTest02561.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02561" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02561.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02561" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02561.java"></endNode>
  </finding>


  <finding id="1328" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02562</class>
    <file>BenchmarkTest02562.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02562" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02562.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02562" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02562.java"></endNode>
  </finding>


  <finding id="1242" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02564</class>
    <file>BenchmarkTest02564.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02564" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02564" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02564.java"></endNode>
  </finding>


  <finding id="1415" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02565</class>
    <file>BenchmarkTest02565.java</file>
    <line>75</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
java.io.FileInputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java"></startNode>
    <endNode lineNo="75" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02565" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02565.java"></endNode>
  </finding>


  <finding id="1335" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02567</class>
    <file>BenchmarkTest02567.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String, boolean)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02567" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02567" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02567.java"></endNode>
  </finding>


  <finding id="1411" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02569</class>
    <file>BenchmarkTest02569.java</file>
    <line>68</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Write Access':
java.io.FileOutputStream(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02569" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java"></startNode>
    <endNode lineNo="68" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02569" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02569.java"></endNode>
  </finding>


  <finding id="1323" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02570</class>
    <file>BenchmarkTest02570.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
static java.nio.file.Path java.nio.file.Paths.get(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02570.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02570.java"></endNode>
  </finding>


  <finding id="1465" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02570</class>
    <file>BenchmarkTest02570.java</file>
    <line>67</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'Manipulated File System Read Access':
static java.io.InputStream java.nio.file.Files.newInputStream(java.nio.file.Path, java.nio.file.OpenOption[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02570.java"></startNode>
    <endNode lineNo="67" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02570" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02570.java"></endNode>
  </finding>


  <finding id="694" kind="PATH">
    <problemType>Injection: LDAP Injection</problemType>
    <problemTypeId>ci:LDAPInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02572</class>
    <file>BenchmarkTest02572.java</file>
    <line>74</line>
    <cweNumber>CWE-90</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: LDAP Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'LDAP Injection':
javax.naming.NamingEnumeration javax.naming.directory.DirContext.search(java.lang.String, java.lang.String, javax.naming.directory.SearchControls)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02572" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"></startNode>
    <endNode lineNo="74" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02572" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"></endNode>
  </finding>


  <finding id="1584" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02572</class>
    <file>BenchmarkTest02572.java</file>
    <line>83</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02572" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"></startNode>
    <endNode lineNo="83" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02572" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02572.java"></endNode>
  </finding>


  <finding id="680" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02573</class>
    <file>BenchmarkTest02573.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02573" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02573.java"></node>
  </finding>


  <finding id="681" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02574</class>
    <file>BenchmarkTest02574.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02574" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02574.java"></node>
  </finding>


  <finding id="682" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02575</class>
    <file>BenchmarkTest02575.java</file>
    <line>63</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02575" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02575.java"></node>
  </finding>


  <finding id="683" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02577</class>
    <file>BenchmarkTest02577.java</file>
    <line>66</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02577" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02577.java"></node>
  </finding>


  <finding id="1815" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02578</class>
    <file>BenchmarkTest02578.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02578" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02578.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02578" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02578.java"></endNode>
  </finding>


  <finding id="1773" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02579</class>
    <file>BenchmarkTest02579.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02579" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02579.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02579" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02579.java"></endNode>
  </finding>


  <finding id="1585" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02580</class>
    <file>BenchmarkTest02580.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.format(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02580" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02580.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02580" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02580.java"></endNode>
  </finding>


  <finding id="1613" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02582</class>
    <file>BenchmarkTest02582.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02582" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02582.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02582" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02582.java"></endNode>
  </finding>


  <finding id="1701" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02583</class>
    <file>BenchmarkTest02583.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02583" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02583.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02583" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02583.java"></endNode>
  </finding>


  <finding id="1651" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02584</class>
    <file>BenchmarkTest02584.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02584" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02584.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02584" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02584.java"></endNode>
  </finding>


  <finding id="1801" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02585</class>
    <file>BenchmarkTest02585.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02585" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02585.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02585" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02585.java"></endNode>
  </finding>


  <finding id="1810" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02586</class>
    <file>BenchmarkTest02586.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.print(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02586" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02586.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02586" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02586.java"></endNode>
  </finding>


  <finding id="1774" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02587</class>
    <file>BenchmarkTest02587.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02587" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02587.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02587" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02587.java"></endNode>
  </finding>


  <finding id="1714" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02588</class>
    <file>BenchmarkTest02588.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02588" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02588.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02588" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02588.java"></endNode>
  </finding>


  <finding id="1731" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02589</class>
    <file>BenchmarkTest02589.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.util.Locale, java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02589" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02589.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02589" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02589.java"></endNode>
  </finding>


  <finding id="1702" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02591</class>
    <file>BenchmarkTest02591.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02591" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02591.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02591" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02591.java"></endNode>
  </finding>


  <finding id="1646" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02592</class>
    <file>BenchmarkTest02592.java</file>
    <line>64</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
java.io.PrintWriter java.io.PrintWriter.printf(java.lang.String, java.lang.Object[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02592" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02592.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02592" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02592.java"></endNode>
  </finding>


  <finding id="1767" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02595</class>
    <file>BenchmarkTest02595.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(char[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02595" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02595.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02595" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02595.java"></endNode>
  </finding>


  <finding id="1733" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02597</class>
    <file>BenchmarkTest02597.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02597" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02597.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02597" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02597.java"></endNode>
  </finding>


  <finding id="1749" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02598</class>
    <file>BenchmarkTest02598.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.PrintWriter.println(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02598" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02598.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02598" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02598.java"></endNode>
  </finding>


  <finding id="1703" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02600</class>
    <file>BenchmarkTest02600.java</file>
    <line>66</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(char[], int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02600" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02600.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02600" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02600.java"></endNode>
  </finding>


  <finding id="168" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02602</class>
    <file>BenchmarkTest02602.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02602" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02602.java"></node>
  </finding>


  <finding id="174" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02603</class>
    <file>BenchmarkTest02603.java</file>
    <line>63</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02603" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02603.java"></node>
  </finding>


  <finding id="23" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02604</class>
    <file>BenchmarkTest02604.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02604" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02604.java"></node>
  </finding>


  <finding id="91" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02605</class>
    <file>BenchmarkTest02605.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02605" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02605.java"></node>
  </finding>


  <finding id="8" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02606</class>
    <file>BenchmarkTest02606.java</file>
    <line>62</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02606" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02606.java"></node>
  </finding>


  <finding id="1884" kind="PATH">
    <problemType>XSS: Reflected XSS from Unrendered Output</problemType>
    <problemTypeId>xss:XSSFromRequestUnrendered</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02607</class>
    <file>BenchmarkTest02607.java</file>
    <line>77</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS from Unrendered Output'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Unrendered Output':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02607" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02607.java"></startNode>
    <endNode lineNo="77" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02607" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02607.java"></endNode>
  </finding>


  <finding id="1824" kind="PATH">
    <problemType>XSS: Reflected XSS</problemType>
    <problemTypeId>xss:XSSFromRequest</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02608</class>
    <file>BenchmarkTest02608.java</file>
    <line>63</line>
    <cweNumber>CWE-79</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'XSS: Reflected XSS'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'XSS - Generic Output Used for Response':
void java.io.Writer.write(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02608" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02608.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02608" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02608.java"></endNode>
  </finding>


  <finding id="831" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02610</class>
    <file>BenchmarkTest02610.java</file>
    <line>85</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02610.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02610" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02610.java"></endNode>
  </finding>


  <finding id="834" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02611</class>
    <file>BenchmarkTest02611.java</file>
    <line>85</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02611" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02611.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02611" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02611.java"></endNode>
  </finding>


  <finding id="1397" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02611</class>
    <file>BenchmarkTest02611.java</file>
    <line>85</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02611" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02611.java"></startNode>
    <endNode lineNo="85" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02611" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02611.java"></endNode>
  </finding>


  <finding id="735" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02612</class>
    <file>BenchmarkTest02612.java</file>
    <line>69</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String[], java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02612" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02612.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02612" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02612.java"></endNode>
  </finding>


  <finding id="1259" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02612</class>
    <file>BenchmarkTest02612.java</file>
    <line>69</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02612" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02612.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02612" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02612.java"></endNode>
  </finding>


  <finding id="775" kind="PATH">
    <problemType>Injection: OS Command Injection</problemType>
    <problemTypeId>ci:OSCommandInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02613</class>
    <file>BenchmarkTest02613.java</file>
    <line>66</line>
    <cweNumber>CWE-78</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: OS Command Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'OS Command Injection':
java.lang.Process java.lang.Runtime.exec(java.lang.String, java.lang.String[], java.io.File)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02613" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02613.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02613" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02613.java"></endNode>
  </finding>


  <finding id="1326" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02613</class>
    <file>BenchmarkTest02613.java</file>
    <line>66</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02613" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02613.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02613" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02613.java"></endNode>
  </finding>


  <finding id="1475" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02622</class>
    <file>BenchmarkTest02622.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02622" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02622.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02622" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02622.java"></endNode>
  </finding>


  <finding id="1482" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02623</class>
    <file>BenchmarkTest02623.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02623" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02623.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02623" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02623.java"></endNode>
  </finding>


  <finding id="1549" kind="PATH">
    <problemType>Trust Boundary Violation: HTTP Session</problemType>
    <problemTypeId>tbv:TrustBoundaryViolationSession</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02624</class>
    <file>BenchmarkTest02624.java</file>
    <line>63</line>
    <cweNumber>CWE-501</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Trust Boundary Violation: HTTP Session'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'HTTP Session':
void javax.servlet.http.HttpSession.setAttribute(java.lang.String, java.lang.Object)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02624" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02624.java"></startNode>
    <endNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02624" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02624.java"></endNode>
  </finding>


  <finding id="926" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02625</class>
    <file>BenchmarkTest02625.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02625" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02625" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02625.java"></endNode>
  </finding>


  <finding id="936" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02627</class>
    <file>BenchmarkTest02627.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02627" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02627.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02627" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02627.java"></endNode>
  </finding>


  <finding id="1112" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02628</class>
    <file>BenchmarkTest02628.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02628" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02628" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02628.java"></endNode>
  </finding>


  <finding id="1122" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02629</class>
    <file>BenchmarkTest02629.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02629" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02629.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02629" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02629.java"></endNode>
  </finding>


  <finding id="882" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>45.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02630</class>
    <file>BenchmarkTest02630.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.CallableStatement java.sql.Connection.prepareCall(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02630" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02630" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02630.java"></endNode>
  </finding>


  <finding id="1133" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02632</class>
    <file>BenchmarkTest02632.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02632" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02632" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02632.java"></endNode>
  </finding>


  <finding id="987" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02634</class>
    <file>BenchmarkTest02634.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02634" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02634.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02634" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02634.java"></endNode>
  </finding>


  <finding id="939" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02635</class>
    <file>BenchmarkTest02635.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, int, int, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02635" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02635" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02635.java"></endNode>
  </finding>


  <finding id="1114" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>6.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02636</class>
    <file>BenchmarkTest02636.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.PreparedStatement java.sql.Connection.prepareStatement(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02636" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02636.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02636" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02636.java"></endNode>
  </finding>


  <finding id="1073" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02638</class>
    <file>BenchmarkTest02638.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02638" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02638" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02638.java"></endNode>
  </finding>


  <finding id="928" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02641</class>
    <file>BenchmarkTest02641.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String, **)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02641" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02641" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02641.java"></endNode>
  </finding>


  <finding id="991" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02642</class>
    <file>BenchmarkTest02642.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02642" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02642" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02642.java"></endNode>
  </finding>


  <finding id="937" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02643</class>
    <file>BenchmarkTest02643.java</file>
    <line>64</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02643" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"></startNode>
    <endNode lineNo="64" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02643" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02643.java"></endNode>
  </finding>


  <finding id="1103" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02644</class>
    <file>BenchmarkTest02644.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02644" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02644" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02644.java"></endNode>
  </finding>


  <finding id="1123" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02645</class>
    <file>BenchmarkTest02645.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
** org.springframework.jdbc.core.JdbcTemplate.query*(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02645" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02645" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02645.java"></endNode>
  </finding>


  <finding id="1070" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02646</class>
    <file>BenchmarkTest02646.java</file>
    <line>65</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int[] org.springframework.jdbc.core.JdbcOperations.batchUpdate(java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02646" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"></startNode>
    <endNode lineNo="65" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02646" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02646.java"></endNode>
  </finding>


  <finding id="1020" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02647</class>
    <file>BenchmarkTest02647.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
void java.sql.Statement.addBatch(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02647" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02647.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02647" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02647.java"></endNode>
  </finding>


  <finding id="1063" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02649</class>
    <file>BenchmarkTest02649.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02649" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02649" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02649.java"></endNode>
  </finding>


  <finding id="994" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02650</class>
    <file>BenchmarkTest02650.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, int[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02650" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02650" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02650.java"></endNode>
  </finding>


  <finding id="940" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02651</class>
    <file>BenchmarkTest02651.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
boolean java.sql.Statement.execute(java.lang.String, java.lang.String[])
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02651" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02651" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02651.java"></endNode>
  </finding>


  <finding id="1129" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02653</class>
    <file>BenchmarkTest02653.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
java.sql.ResultSet java.sql.Statement.executeQuery(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02653" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02653" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02653.java"></endNode>
  </finding>


  <finding id="1072" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02654</class>
    <file>BenchmarkTest02654.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02654" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02654" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02654.java"></endNode>
  </finding>


  <finding id="1018" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02655</class>
    <file>BenchmarkTest02655.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02655" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02655" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02655.java"></endNode>
  </finding>


  <finding id="1042" kind="PATH">
    <problemType>Injection: SQL Injection</problemType>
    <problemTypeId>ci:SQLInjection</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>7.50</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02656</class>
    <file>BenchmarkTest02656.java</file>
    <line>66</line>
    <cweNumber>CWE-89</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Injection: SQL Injection'

Matching pattern in taint source kind 'Servlet Request Input':
java.lang.String javax.servlet.ServletRequest.getQueryString()

Matching pattern in taint sink kind 'SQL Injection':
int java.sql.Statement.executeUpdate(java.lang.String, int)
]]></description>
    <startNode lineNo="43" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02656" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"></startNode>
    <endNode lineNo="66" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02656" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02656.java"></endNode>
  </finding>


  <finding id="498" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02658</class>
    <file>BenchmarkTest02658.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02658" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java"></node>
  </finding>


  <finding id="499" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02658</class>
    <file>BenchmarkTest02658.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02658" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02658.java"></node>
  </finding>


  <finding id="500" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02660</class>
    <file>BenchmarkTest02660.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02660" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"></node>
  </finding>


  <finding id="501" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02660</class>
    <file>BenchmarkTest02660.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02660" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02660.java"></node>
  </finding>


  <finding id="502" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02661</class>
    <file>BenchmarkTest02661.java</file>
    <line>59</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="59" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02661" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"></node>
  </finding>


  <finding id="503" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02661</class>
    <file>BenchmarkTest02661.java</file>
    <line>62</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="62" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02661" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02661.java"></node>
  </finding>


  <finding id="504" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02663</class>
    <file>BenchmarkTest02663.java</file>
    <line>52</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_CipherConstruction': 
Only AES is allowed as algorithm for encryption or decryption.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_CipherConstruction':
static javax.crypto.Cipher javax.crypto.Cipher.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02663" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java"></node>
  </finding>


  <finding id="505" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed crypto algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedCryptoAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02663</class>
    <file>BenchmarkTest02663.java</file>
    <line>55</line>
    <cweNumber>CWE-327</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed crypto algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_KeyGeneratorGetInstance'.

Violated protocol: Check Allowed Cryptography Algorithms
Protocol description: 
Allow only a given set of cryptography algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_KeyGeneratorGetInstance':
static javax.crypto.KeyGenerator javax.crypto.KeyGenerator.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02663" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02663.java"></node>
  </finding>


  <finding id="684" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02670</class>
    <file>BenchmarkTest02670.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02670" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java"></node>
  </finding>


  <finding id="685" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02670</class>
    <file>BenchmarkTest02670.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02670" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02670.java"></node>
  </finding>


  <finding id="686" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02671</class>
    <file>BenchmarkTest02671.java</file>
    <line>54</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="54" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02671" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java"></node>
  </finding>


  <finding id="687" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02671</class>
    <file>BenchmarkTest02671.java</file>
    <line>56</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="56" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02671" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02671.java"></node>
  </finding>


  <finding id="688" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02674</class>
    <file>BenchmarkTest02674.java</file>
    <line>49</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02674" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02674.java"></node>
  </finding>


  <finding id="689" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02675</class>
    <file>BenchmarkTest02675.java</file>
    <line>49</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02675" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02675.java"></node>
  </finding>


  <finding id="690" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02677</class>
    <file>BenchmarkTest02677.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02677" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02677.java"></node>
  </finding>


  <finding id="691" kind="PROTOCOL_CHECK">
    <problemType>Cryptography: Check that only allowed hash algorithms are used</problemType>
    <problemTypeId>protocolCheckProblemType:OnlyAllowedHashAlgorithms</problemTypeId>
    <producer>BuiltIn:PROTOCOL_CHECK</producer>
    <category>Protocol Check Findings</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02678</class>
    <file>BenchmarkTest02678.java</file>
    <line>52</line>
    <cweNumber>CWE-328</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Cryptography: Check that only allowed hash algorithms are used'.
The protocol check detected something wrong when encountering symbol 'AnyAlgorithm_MessageDigestGetInstance'.

Violated protocol: Check Allowed Hash Algorithms
Protocol description: 
Allow only a given set of hash algorithm names where algorithm names are expected.

The algorithm names are configured via constant value constraint variables.

Names to be checked against can be found here: https://docs.oracle.com/javase/8/docs/technotes/guides/security/StandardNames.html

Matching pattern in protocol check kind 'AnyAlgorithm_MessageDigestGetInstance':
static java.security.MessageDigest java.security.MessageDigest.getInstance(java.lang.String, ***)
]]></description>
    <node lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02678" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02678.java"></node>
  </finding>


  <finding id="26" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02700</class>
    <file>BenchmarkTest02700.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02700" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02700.java"></node>
  </finding>


  <finding id="70" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02701</class>
    <file>BenchmarkTest02701.java</file>
    <line>49</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="49" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02701" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02701.java"></node>
  </finding>


  <finding id="76" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02702</class>
    <file>BenchmarkTest02702.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02702" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02702.java"></node>
  </finding>


  <finding id="171" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02703</class>
    <file>BenchmarkTest02703.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02703" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02703.java"></node>
  </finding>


  <finding id="213" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02704</class>
    <file>BenchmarkTest02704.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02704" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02704.java"></node>
  </finding>


  <finding id="145" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02705</class>
    <file>BenchmarkTest02705.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02705" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02705.java"></node>
  </finding>


  <finding id="126" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02706</class>
    <file>BenchmarkTest02706.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02706" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02706.java"></node>
  </finding>


  <finding id="116" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02707</class>
    <file>BenchmarkTest02707.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02707" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02707.java"></node>
  </finding>


  <finding id="149" kind="SPECIAL">
    <problemType>Usage: java.util.Random</problemType>
    <problemTypeId>SpecialMethodCall:java.util.Random</problemTypeId>
    <producer>BuiltIn:SPECIAL_CODE_CHECKER</producer>
    <category>Special Code</category>
    <rating>5.00</rating>
    <classification>Manual Review Required</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02708</class>
    <file>BenchmarkTest02708.java</file>
    <line>48</line>
    <cweNumber>CWE-330</cweNumber>
    <description><![CDATA[
An identified location for problem type 'Usage: java.util.Random'.
Declared in: java.util.Random

Matching pattern in special code kind 'Usage: java.util.Random':
java.util.Random()
]]></description>
    <node lineNo="48" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02708" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02708.java"></node>
  </finding>


  <finding id="1225" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02709</class>
    <file>BenchmarkTest02709.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02709" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02709.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02709" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02709.java"></endNode>
  </finding>


  <finding id="1203" kind="PATH">
    <problemType>Cookies: Unsecured Cookie</problemType>
    <problemTypeId>cook:UnsecuredCookie</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>5.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02710</class>
    <file>BenchmarkTest02710.java</file>
    <line>69</line>
    <cweNumber>CWE-614</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Cookies: Unsecured Cookie'

Matching pattern in taint source kind 'Cookies':
javax.servlet.http.Cookie(java.lang.String, java.lang.String)

Matching pattern in taint sink kind 'Cookies':
void javax.servlet.http.HttpServletResponse.addCookie(javax.servlet.http.Cookie)
]]></description>
    <startNode lineNo="63" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02710" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02710.java"></startNode>
    <endNode lineNo="69" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02710" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02710.java"></endNode>
  </finding>


  <finding id="1374" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02713</class>
    <file>BenchmarkTest02713.java</file>
    <line>55</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02713" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02713.java"></startNode>
    <endNode lineNo="55" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02713" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02713.java"></endNode>
  </finding>


  <finding id="1359" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.testcode</package>
    <class>BenchmarkTest02714</class>
    <file>BenchmarkTest02714.java</file>
    <line>52</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02714" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02714.java"></startNode>
    <endNode lineNo="52" classFQN="org.owasp.benchmark.testcode.BenchmarkTest02714" relativePath="src/main/java/org/owasp/benchmark/testcode/BenchmarkTest02714.java"></endNode>
  </finding>


  <finding id="1463" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.helpers</package>
    <class>Utils</class>
    <file>Utils.java</file>
    <line>107</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="88" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></startNode>
    <endNode lineNo="107" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></endNode>
  </finding>


  <finding id="1460" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.helpers</package>
    <class>Utils</class>
    <file>Utils.java</file>
    <line>110</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="88" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></startNode>
    <endNode lineNo="110" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></endNode>
  </finding>


  <finding id="1462" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.helpers</package>
    <class>Utils</class>
    <file>Utils.java</file>
    <line>118</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="88" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></startNode>
    <endNode lineNo="118" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></endNode>
  </finding>


  <finding id="1461" kind="PATH">
    <problemType>Path Traversal: Manipulated File System Access</problemType>
    <problemTypeId>pt:PathTraversal</problemTypeId>
    <producer>BuiltIn:TAINTPATHS</producer>
    <category>Taint Paths</category>
    <rating>4.00</rating>
    <classification>Warning</classification>
    <matchCode>NOT</matchCode>
    <reviewed>Not Reviewed</reviewed>
    <date>2019-12-03 12:31:02 - new</date>
    <package>org.owasp.benchmark.helpers</package>
    <class>Utils</class>
    <file>Utils.java</file>
    <line>126</line>
    <cweNumber>CWE-22</cweNumber>
    <description><![CDATA[
An identified taint path for the problem type 'Path Traversal: Manipulated File System Access'

Matching pattern in taint source kind 'Property and Environment Input':
static java.lang.String java.lang.System.getProperty(java.lang.String)

Matching pattern in taint sink kind 'Manipulated File System Instantiation Access':
java.io.File(java.lang.String)
]]></description>
    <startNode lineNo="88" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></startNode>
    <endNode lineNo="126" classFQN="org.owasp.benchmark.helpers.Utils" relativePath="src/main/java/org/owasp/benchmark/helpers/Utils.java"></endNode>
  </finding>
</XanitizerFindingsList>
